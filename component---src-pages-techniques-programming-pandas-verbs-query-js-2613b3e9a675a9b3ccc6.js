webpackJsonp([0xf0ebf364092d],{500:function(t,d){t.exports="<table border=1 class=dataframe> <thead> <tr style=text-align:right> <th></th> <th>survived</th> <th>pclass</th> <th>sex</th> <th>age</th> <th>sibsp</th> <th>parch</th> <th>fare</th> <th>embarked</th> <th>class</th> <th>who</th> <th>adult_male</th> <th>deck</th> <th>embark_town</th> <th>alive</th> <th>alone</th> </tr> </thead> <tbody> <tr> <th>1</th> <td>1</td> <td>1</td> <td>female</td> <td>38.0</td> <td>1</td> <td>0</td> <td>71.2833</td> <td>C</td> <td>First</td> <td>woman</td> <td>False</td> <td>C</td> <td>Cherbourg</td> <td>yes</td> <td>False</td> </tr> <tr> <th>3</th> <td>1</td> <td>1</td> <td>female</td> <td>35.0</td> <td>1</td> <td>0</td> <td>53.1000</td> <td>S</td> <td>First</td> <td>woman</td> <td>False</td> <td>C</td> <td>Southampton</td> <td>yes</td> <td>False</td> </tr> <tr> <th>4</th> <td>0</td> <td>3</td> <td>male</td> <td>35.0</td> <td>0</td> <td>0</td> <td>8.0500</td> <td>S</td> <td>Third</td> <td>man</td> <td>True</td> <td>NaN</td> <td>Southampton</td> <td>no</td> <td>True</td> </tr> <tr> <th>6</th> <td>0</td> <td>1</td> <td>male</td> <td>54.0</td> <td>0</td> <td>0</td> <td>51.8625</td> <td>S</td> <td>First</td> <td>man</td> <td>True</td> <td>E</td> <td>Southampton</td> <td>no</td> <td>True</td> </tr> <tr> <th>11</th> <td>1</td> <td>1</td> <td>female</td> <td>58.0</td> <td>0</td> <td>0</td> <td>26.5500</td> <td>S</td> <td>First</td> <td>woman</td> <td>False</td> <td>C</td> <td>Southampton</td> <td>yes</td> <td>True</td> </tr> </tbody> </table>"},501:function(t,d){t.exports="<table border=1 class=dataframe> <thead> <tr style=text-align:right> <th></th> <th>survived</th> <th>pclass</th> <th>sex</th> <th>age</th> <th>sibsp</th> <th>parch</th> <th>fare</th> <th>embarked</th> <th>class</th> <th>who</th> <th>adult_male</th> <th>deck</th> <th>embark_town</th> <th>alive</th> <th>alone</th> </tr> </thead> <tbody> <tr> <th>1</th> <td>1</td> <td>1</td> <td>female</td> <td>38.0</td> <td>1</td> <td>0</td> <td>71.2833</td> <td>C</td> <td>First</td> <td>woman</td> <td>False</td> <td>C</td> <td>Cherbourg</td> <td>yes</td> <td>False</td> </tr> <tr> <th>19</th> <td>1</td> <td>3</td> <td>female</td> <td>NaN</td> <td>0</td> <td>0</td> <td>7.2250</td> <td>C</td> <td>Third</td> <td>woman</td> <td>False</td> <td>NaN</td> <td>Cherbourg</td> <td>yes</td> <td>True</td> </tr> <tr> <th>26</th> <td>0</td> <td>3</td> <td>male</td> <td>NaN</td> <td>0</td> <td>0</td> <td>7.2250</td> <td>C</td> <td>Third</td> <td>man</td> <td>True</td> <td>NaN</td> <td>Cherbourg</td> <td>no</td> <td>True</td> </tr> <tr> <th>30</th> <td>0</td> <td>1</td> <td>male</td> <td>40.0</td> <td>0</td> <td>0</td> <td>27.7208</td> <td>C</td> <td>First</td> <td>man</td> <td>True</td> <td>NaN</td> <td>Cherbourg</td> <td>no</td> <td>True</td> </tr> <tr> <th>31</th> <td>1</td> <td>1</td> <td>female</td> <td>NaN</td> <td>1</td> <td>0</td> <td>146.5208</td> <td>C</td> <td>First</td> <td>woman</td> <td>False</td> <td>B</td> <td>Cherbourg</td> <td>yes</td> <td>False</td> </tr> </tbody> </table>"},502:function(t,d){t.exports="<table border=1 class=dataframe> <thead> <tr style=text-align:right> <th></th> <th>survived</th> <th>pclass</th> <th>sex</th> <th>age</th> <th>sibsp</th> <th>parch</th> <th>fare</th> <th>embarked</th> <th>class</th> <th>who</th> <th>adult_male</th> <th>deck</th> <th>embark_town</th> <th>alive</th> <th>alone</th> </tr> </thead> <tbody> <tr> <th>1</th> <td>1</td> <td>1</td> <td>female</td> <td>38.0</td> <td>1</td> <td>0</td> <td>71.2833</td> <td>C</td> <td>First</td> <td>woman</td> <td>False</td> <td>C</td> <td>Cherbourg</td> <td>yes</td> <td>False</td> </tr> <tr> <th>2</th> <td>1</td> <td>3</td> <td>female</td> <td>26.0</td> <td>0</td> <td>0</td> <td>7.9250</td> <td>S</td> <td>Third</td> <td>woman</td> <td>False</td> <td>NaN</td> <td>Southampton</td> <td>yes</td> <td>True</td> </tr> <tr> <th>3</th> <td>1</td> <td>1</td> <td>female</td> <td>35.0</td> <td>1</td> <td>0</td> <td>53.1000</td> <td>S</td> <td>First</td> <td>woman</td> <td>False</td> <td>C</td> <td>Southampton</td> <td>yes</td> <td>False</td> </tr> <tr> <th>8</th> <td>1</td> <td>3</td> <td>female</td> <td>27.0</td> <td>0</td> <td>2</td> <td>11.1333</td> <td>S</td> <td>Third</td> <td>woman</td> <td>False</td> <td>NaN</td> <td>Southampton</td> <td>yes</td> <td>False</td> </tr> <tr> <th>9</th> <td>1</td> <td>2</td> <td>female</td> <td>14.0</td> <td>1</td> <td>0</td> <td>30.0708</td> <td>C</td> <td>Second</td> <td>child</td> <td>False</td> <td>NaN</td> <td>Cherbourg</td> <td>yes</td> <td>False</td> </tr> </tbody> </table>"},312:function(t,d,e){(function(a){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function n(t,d){if(!(t instanceof d))throw new TypeError("Cannot call a class as a function")}function h(t,d){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!d||"object"!=typeof d&&"function"!=typeof d?t:d}function o(t,d){if("function"!=typeof d&&null!==d)throw new TypeError("Super expression must either be null or a function, not "+typeof d);t.prototype=Object.create(d&&d.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),d&&(Object.setPrototypeOf?Object.setPrototypeOf(t,d):t.__proto__=d)}d.__esModule=!0;var s=e(1),l=(r(s),e(7)),u=(r(l),e(10)),i=function(t){function d(e){return n(this,d),h(this,t.call(this,e))}return o(d,t),d.prototype.render=function(){return a.createElement(u.Section,{name:"query"},a.createElement(u.Paragraph,{note:a.createElement("a",{href:"https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.query.html"},"pandas documentation")},"The query command is useful if you want to filter the rows of your data frame. It is similar to the SQL ",a.createElement("span",{className:"mono"},"WHERE")," statement. I'm going to use the titanic dataset from seaborn to illustrate. Here's my raw data."),a.createElement(u.Code,{language:"python",code:"\nimport pandas as pd\nimport seaborn as sns\n\ndf = sns.load_dataset('titanic')\ndf.head(5)\n          "}),a.createElement(u.RawHTML,null,e(64)),a.createElement(u.Subsection,{name:"Filter rows pandas dataframe"},a.createElement(u.Paragraph,null,"The simplest thing you can do with query is to use it to filter particular rows in the dataframe. Just pass a string through to the query function of the dataframe."),a.createElement(u.Code,{language:"python",code:"\n  (\n    df\n    .query('age > 30')\n  ).head(5)\n            "}),a.createElement(u.RawHTML,null,e(500))),a.createElement(u.Subsection,{name:"More complex logical statements"},a.createElement(u.Paragraph,null,"You can combine statements with ",a.createElement("span",{className:"mono"},"|")," and ",a.createElement("span",{className:"mono"},"&")," for OR and AND."),a.createElement(u.Code,{language:"python",code:"\n(\n  df\n  .query('(pclass == 3 | pclass == 1) & embark_town == \"Cherbourg\" ')\n  .head(5)\n)\n            "}),a.createElement(u.RawHTML,null,e(501))),a.createElement(u.Subsection,{name:"Using variables in query statements"},a.createElement(u.Paragraph,null,"To use a variable in your query statement, prefix it with a @. This is often useful if you want to use a query in a function."),a.createElement(u.Code,{language:"python",code:"\ndef querySurvived(x, survived):\n    return (\n        x\n        .query('survived == @survived')\n    )\n\n\n(\n    querySurvived(df, 1)\n    .head(5)\n)\n            "}),a.createElement(u.RawHTML,null,e(502))))},d}(s.Component);d.default=i,t.exports=d.default}).call(d,e(4))}});
//# sourceMappingURL=component---src-pages-techniques-programming-pandas-verbs-query-js-2613b3e9a675a9b3ccc6.js.map