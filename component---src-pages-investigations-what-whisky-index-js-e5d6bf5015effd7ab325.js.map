{"version":3,"sources":["webpack:///component---src-pages-investigations-what-whisky-index-js-e5d6bf5015effd7ab325.js","webpack:///./~/d3-array/build/d3-array.js?d8bc","webpack:///./~/d3-collection/build/d3-collection.js?6c84","webpack:///./~/d3-color/build/d3-color.js?f7c1","webpack:///./~/d3-format/build/d3-format.js?fb4a","webpack:///./~/d3-geo/dist/d3-geo.js","webpack:///./~/d3-interpolate/build/d3-interpolate.js?f797","webpack:///./~/d3-path/build/d3-path.js","webpack:///./~/d3-scale-chromatic/dist/d3-scale-chromatic.js","webpack:///./~/d3-scale/build/d3-scale.js?7e54","webpack:///./~/d3-shape/build/d3-shape.js","webpack:///./~/d3-time-format/build/d3-time-format.js?bb40","webpack:///./~/d3-time/build/d3-time.js?70a1","webpack:///./~/process/browser.js","webpack:///./~/topojson-client/dist/topojson-client.js","webpack:///./src/pages/investigations/what-whisky/_ClusterSelector.js","webpack:///./src/pages/investigations/what-whisky/_FormattedOverview.js","webpack:///./src/pages/investigations/what-whisky/_Map.js","webpack:///./src/pages/investigations/what-whisky/_Radial.js","webpack:///./src/pages/investigations/what-whisky/clustertext.json","webpack:///./src/pages/investigations/what-whisky/geo.json","webpack:///./src/pages/investigations/what-whisky/index.js","webpack:///./src/pages/investigations/what-whisky/rivers.json","webpack:///./src/pages/investigations/what-whisky/rothes.png","webpack:///./src/pages/investigations/what-whisky/whisky.json"],"names":["webpackJsonp","29","module","exports","__webpack_require__","global","factory","this","ascendingComparator","f","d","x","ascending","pair","a","b","tickIncrement","start","stop","count","step","Math","max","power","floor","log","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","length","NaN","bisector","compare","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","pairs","array","i","n","p","Array","cross","values0","values1","reduce","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","value","delta","m","mean","sum","isNaN","deviation","v","sqrt","extent","min","prototype","slice","map","constant","identity","range","arguments","ceil","ticks","reverse","isFinite","sturges","LN2","histogram","data","xz","domain","x0","x1","tz","threshold","isArray","shift","pop","bin","bins","push","_","thresholds","call","quantile","value1","freedmanDiaconis","sort","scott","median","numbers","merge","arrays","merged","j","permute","indexes","permutes","scan","xi","xj","shuffle","t","random","transpose","matrix","row","zip","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","Object","defineProperty","62","Map","object","each","key","set","o","createObject","setObject","createMap","setMap","map$$1","Set","add","prefix","constructor","has","get","remove","property","clear","keys","entries","size","empty","nest","apply","depth","createResult","setResult","sortValues","rollup","keyValue","valuesByKey","result","sortKey","sortKeys","k","order","proto","33","extend","parent","definition","create","Color","color","format","trim","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","hasOwnProperty","r","g","rgbConvert","rgb","opacity","h","s","l","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","c","sin","rgb2xyz","xyz2lab","Xn","y","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","define","darker","brighter","reI","reN","reP","RegExp","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","toString","round","PI","Kn","A","B","cosh","sinh","131","formatSpecifier","specifier","FormatSpecifier","match","re","Error","fill","align","sign","symbol","zero","width","comma","precision","type","formatTypes","defaultLocale","locale","formatLocale","formatPrefix","prefixExponent","formatDecimal","toExponential","indexOf","coefficient","exponent","formatGroup","grouping","thousands","substring","join","formatNumerals","numerals","replace","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","%","toFixed","e","X","toUpperCase","prefixes","newFormat","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","charCodeAt","decimal","group","Infinity","padding","currency","test","percent","precisionFixed","precisionPrefix","precisionRound","formatDefaultLocale","416","d3Array","adder","Adder","reset","bv","av","acos","pi","asin","halfPi","haversin","noop","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","point","lineEnd","streamPolygon","polygonStart","polygonEnd","geoStream","streamObjectType","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","area","areaSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","lambda2","sign$$1","lambdai","degrees","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon","rangeCompare","rangeContains","range$$1","bounds","feature","deltaMax","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","y0","z0","centroidLinePoint","w","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","centroid","epsilon2","compose","invert","rotationIdentity","tau","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","rotate","forward","circleStream","radius","direction","cosRadius","sinRadius","circleRadius","circle","ring","center","clipBuffer","line","lines","rejoin","concat","pointEqual","Intersection","points","other","entry","clipRejoin","segments","compareIntersection","startInside","interpolate","subject","clip","forEach","segment","p1","link","current","isSubject","polygonContains","polygon","winding","point0","sinPhi1","cosPhi1","point1","absDelta","arc","intersection","phiArc","pointVisible","clipLine","sink","pointLine","pointRing","ringSink","ringStart","ringEnd","clean","ringSegments","ringBuffer","polygonStarted","filter","validSegment","sphere","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","from","to","clipCircle","visible","cr","c0","v0","v00","point2","smallRadius","code","intersect","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","q","polar","meridian","q1","y1","ax","ay","bx","by","dx","dy","clipRectangle","a1","corner","comparePoint","ca","cb","activeStream","polygonInside","a0","b0","b1","bufferStream","cleanInside","clipStream","first","v_","x_","y_","x__","y__","v__","clipMin","clipMax","cache","cacheStream","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","distance","containsGeometry","containsGeometryType","containsPoint","containsLine","ab","ao","ob","containsPolygon","ringRadians","pointRadians","contains","containsObjectType","graticuleX","graticuleY","graticule","DX","DY","Y","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","context","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","index","projection","path","pointRadius","contextStream","projectionStream","measure","boundsStream$1","transform","methods","transformer","TransformStream","fit","fitBounds","clipExtent","scale","translate","fitExtent","fitSize","fitWidth","fitHeight","height","resample","project","delta2","resample$1","resampleNone","resampleLineTo","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringPoint","a00","b00","c00","transformRotate","scaleTranslate","transform$$1","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","projectRotateTransform","recenter","projectTransform","projectResample","theta","preclip","clipAntimeridian","postclip","transformRadians","undefined","clipAngle","conicProjection","parallels","cylindricalEqualAreaRaw","conicEqualAreaRaw","r0","r0y","conicEqualArea","albers","multiplex","streams","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualArea","azimuthalEqualAreaRaw","azimuthalEquidistant","azimuthalEquidistantRaw","mercatorRaw","mercator","mercatorProjection","reclip","tany","conicConformalRaw","fy","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","gy","nx","conicEquidistant","gnomonicRaw","gnomonic","scaleTranslate$1","kx","ky","tx","ty","identity$1","sx","sy","reflectX","reflectY","naturalEarth1Raw","phi4","naturalEarth1","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","temp","valueOf","exp","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaRing","areaSum$1","_radius","_line","_point","closePath","moveTo","lineTo","lengthRing","_circle","cxcy","geoArea","geoBounds","geoCentroid","geoCircle","geoClipAntimeridian","geoClipCircle","geoClipExtent","geoClipRectangle","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoNaturalEarth1","geoNaturalEarth1Raw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","86","d3Color","basis","v1","v2","v3","linear","exponential","hue","gamma","nogamma","rgbSpline","spline","colors","color$$1","one","parseCss","cssNode","document","createElement","cssRoot","documentElement","cssView","defaultView","style","getComputedStyle","appendChild","getPropertyValue","removeChild","split","decompose","parseSvg","svgNode","createElementNS","setAttribute","baseVal","consolidate","interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","skewX","translateX","translateY","scaleX","scaleY","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","basis$1","basisClosed","rgb$1","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","nb","na","date","Date","setTime","reA","reB","source","string","am","bm","bs","lastIndex","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","zoom","S","ux0","uy0","w0","ux1","uy1","w1","d1","r1","coshr0","duration","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","interpolator","samples","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRound","interpolateString","interpolateZoom","interpolateRgb","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","417","Path","_x0","_y0","_x1","_y1","tauEpsilon","quadraticCurveTo","bezierCurveTo","arcTo","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","cw","da","rect","418","d3Interpolate","ramp","scheme","rainbow$1","ts","rainbow","ramp$1","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","BrBG","scheme$1","PRGn","scheme$2","PiYG","scheme$3","PuOr","scheme$4","RdBu","scheme$5","RdGy","scheme$6","RdYlBu","scheme$7","RdYlGn","scheme$8","Spectral","scheme$9","BuGn","scheme$10","BuPu","scheme$11","GnBu","scheme$12","OrRd","scheme$13","PuBuGn","scheme$14","PuBu","scheme$15","PuRd","scheme$16","RdPu","scheme$17","YlGnBu","scheme$18","YlGn","scheme$19","YlOrBr","scheme$20","YlOrRd","scheme$21","Blues","scheme$22","Greens","scheme$23","Greys","scheme$24","Purples","scheme$25","Reds","scheme$26","Oranges","warm","cool","viridis","magma","inferno","plasma","schemeCategory10","schemeAccent","schemeDark2","schemePaired","schemePastel1","schemePastel2","schemeSet1","schemeSet2","schemeSet3","interpolateBrBG","schemeBrBG","interpolatePRGn","schemePRGn","interpolatePiYG","schemePiYG","interpolatePuOr","schemePuOr","interpolateRdBu","schemeRdBu","interpolateRdGy","schemeRdGy","interpolateRdYlBu","schemeRdYlBu","interpolateRdYlGn","schemeRdYlGn","interpolateSpectral","schemeSpectral","interpolateBuGn","schemeBuGn","interpolateBuPu","schemeBuPu","interpolateGnBu","schemeGnBu","interpolateOrRd","schemeOrRd","interpolatePuBuGn","schemePuBuGn","interpolatePuBu","schemePuBu","interpolatePuRd","schemePuRd","interpolateRdPu","schemeRdPu","interpolateYlGnBu","schemeYlGnBu","interpolateYlGn","schemeYlGn","interpolateYlOrBr","schemeYlOrBr","interpolateYlOrRd","schemeYlOrRd","interpolateBlues","schemeBlues","interpolateGreens","schemeGreens","interpolateGreys","schemeGreys","interpolatePurples","schemePurples","interpolateReds","schemeReds","interpolateOranges","schemeOranges","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","63","d3Collection","d3Format","d3Time","d3TimeFormat","ordinal","unknown","implicit","copy","band","rescale","paddingInner","paddingOuter","bandwidth","ordinalRange","rangeRound","pointish","deinterpolateLinear","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","bimap","d0","polymap","target","clamp","continuous","piecewise","output","input","interpolate$$1","unit","map$1","linearish","tickFormat","nice","pow10","powp","base","logp","log10","log2","reflect","logs","pows","raise","quantile$1","invertExtent","quantiles","number$1","calendar","year","month","week","day","hour","minute","second","millisecond","format$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickInterval","interval","tickIntervals","durationYear","every","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","sequential","name","time","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","timeMillisecond","timeFormat","utcTime","utcYear","utcMonth","utcWeek","utcDay","utcHour","utcMinute","utcSecond","utcMillisecond","utcFormat","UTC","category20b","category20c","category20","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory20b","schemeCategory20c","schemeCategory20","scaleSequential","419","d3Path","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","x3","y3","x10","y10","x32","y32","cornerTangents","rc","ox","oy","x11","y11","cx0","cx1","dx0","dy0","dx1","dy1","Linear","Radial","curve","_curve","curveRadial","radial","lineRadial","linkSource","linkTarget","buffer","argv","x$$1","y$$1","curveHorizontal","curveVertical","curveRadial$1","pointRadial","p2","p3","linkHorizontal","linkVertical","linkRadial","that","Basis","BasisClosed","BasisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","s1","slope2","point$3","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","series","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","pie","arcs","curveRadialLinear","lineRadial$1","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","draw","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","_x3","_x4","_y3","_y4","basisOpen","_x","_y","bundle","custom","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","none","none$1","stack","oz","kz","sz","sij","ki","si","offset","expand","diverging","yp","yn","silhouette","wiggle","s2","sij0","sij1","s3","sk","skj0","skj1","sums","descending$1","insideOut","top","bottom","tops","bottoms","radialArea","radialLine","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","132","localDate","H","M","L","setFullYear","utcDate","setUTCFullYear","newYear","formats","pad","pads","charAt","newParse","newDate","parseSpecifier","Q","V","getUTCDay","utcMonday","getUTCFullYear","getUTCMonth","getUTCDate","getDay","timeMonday","getFullYear","getMonth","getDate","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatMicroseconds","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","formatFullYear","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcParse","requote","requoteRe","names","numberRe","percentRe","getMilliseconds","getMinutes","getSeconds","timeSunday","timeThursday","getTimezoneOffset","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","dow","utcSunday","utcThursday","timeParse","formatIsoNative","toISOString","parseIsoNative","-","0","isoSpecifier","formatIso","parseIso","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","64","newInterval","floori","offseti","field","previous","weekday","setDate","setHours","utcWeekday","setUTCDate","setUTCHours","milliseconds","seconds","minutes","hours","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","setMonth","years","setUTCSeconds","utcMinutes","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","setUTCMonth","utcMonths","utcYears","timeInterval","timeMilliseconds","utcMilliseconds","timeSeconds","utcSeconds","timeMinutes","timeHours","timeDays","timeWeeks","timeSundays","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonths","timeYears","utcWeeks","97","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","len","run","Item","process","nextTick","args","title","browser","env","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","943","feature$1","topology","id","bbox","properties","transformPoint","meshArcs","object$$1","extractArcs","stitch","extract0","geomsByArc","geom","extract1","extract2","extract3","geoms","planarRingArea","mergeArcs","objects","extract","polygonsByArc","polygons","groups","neighbors","bboxPoint","bboxGeometry","ends","dp","flush","fragmentByEnd","fragmentByStart","stitchedArcs","fragments","emptyIndex","fg","unshift","gf","mesh","indexesByArc","geometryType","ij","ik","splice","untransform","quantizePoint","quantizeGeometry","quantizeArc","box","inputs","outputs","316","Glamor","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","enumerable","writable","configurable","setPrototypeOf","__proto__","_react","_react2","_d3Collection","_constants","_constants2","ClusterSelector","_React$Component","render","_this2","_props","props","whisky","selectedcluster","clusters","cluster","labels","allstring","buttons","lightred","css","fontSize","backgroundColor","onClick","onUpdate","className","Component","317","_React","_React2","_reactDom","_reactDom2","_Radial","_Radial2","_Map","_Map2","_clustertext","_clustertext2","ResponsiveMap","_this","state","scalemultiplier","handleResize","bind","elem","findDOMNode","getBoundingClientRect","setState","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","selectedColour","landfill","seafill","riverColour","unselectedColour","disabledColour","onHover","selected","colourcluster","rotate0","rotate1","spey","ResponsiveRadial","_React$Component2","radialFill","radialOverall","FormattedOverview","_React$Component3","_this3","zoomlevel","zoomOut","zoomSpey","zoomIslay","zoomDeepSpey","getzoomcontrols","marginBottom","getoverview","selectedclusterobject","clusterselected","selectedclustertext","desc","clustername","getwhiskyselectorcontrol","_this4","options","RowID","formatname","onChange","getclustermembership","zoomcontrols","overview","clusteroverview","whiskyselectorcontrol","clustermembership","paddingBottom","Postcode","nooverview","controls","182","_interopRequireWildcard","newObj","_d3Array","_d3Scale","_d3Color","_d3Geo","_topojsonClient","topojson","_geo","_geo2","_rivers","_rivers2","_d3ScaleChromatic","Scotland","_Component","proj","pathGenerator","tracts","riverfeatures","coast","stroke","riverpath","Distileries","_Component2","calcpointfill","selectedRow","colourScaleColour","colourscale","selectedCSColour","whiskyProcessed","long","lat","projected","enabled","strokeWidth","onMouseEnter","_Component3","_this6","center0","center1","legendpoints","legend","ref","node","183","_d3Shape","SCALEORDER","middle","calculatescales","bottomPad","scalelength","heightscales","dimensionValues","anglescale","componentWillReceiveProps","calcpoints","markerarc","calclabels","textanglerotate","textanchor","textAnchor","averagewhisky","_this5","markers","overallvalue","clustervalue","zeroval","overallr","overallarc","clusterr","clusterarc","559","1","2","3","4","5","6","7","8","All","560","ID_0","ISO","NAME_0","OBJECTID_1","ISO3","NAME_ENGLI","NAME_ISO","NAME_FAO","NAME_LOCAL","NAME_OBSOL","NAME_VARIA","NAME_NONLA","NAME_FRENC","NAME_SPANI","NAME_RUSSI","NAME_ARABI","NAME_CHINE","WASPARTOF","CONTAINS","SOVEREIGN","ISO2","WWW","FIPS","ISON","VALIDFR","VALIDTO","POP2000","SQKM","POPSQKM","UNREGION1","UNREGION2","DEVELOPING","CIS","Transition","OECD","WBREGION","WBINCOME","WBDEBT","WBOTHER","CEEAC","CEMAC","CEPLG","COMESA","EAC","ECOWAS","IGAD","IOC","MRU","SACU","UEMOA","UMA","PALOP","PARTA","CACM","EurAsEC","Agadir","SAARC","ASEAN","NAFTA","GCC","CSN","CARICOM","EU","CAN","ACP","Landlocked","AOSIS","SIDS","Islands","LDC","318","_extends","assign","_propTypes","_components","_whisky","_whisky2","_FormattedOverview","_FormattedOverview2","_ClusterSelector","_ClusterSelector2","_rothes","_rothes2","ALLSTRING","WhatWhiskyIndex","clusterupdate","theme","vlightblue","darkyellow","Paragraph","href","Section","note","Figure","caption","src","Subsection","561","name1","identifier","startNode","endNode","form","flow","fictitious","name2","948","562","Distillery","Body","Sweetness","Smoky","Medicinal","Tobacco","Honey","Spicy","Winey","Nutty","Malty","Fruity","Floral"," Latitude"," Longitude"],"mappings":"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","file":"component---src-pages-investigations-what-whisky-index-js-e5d6bf5015effd7ab325.js","sourcesContent":["webpackJsonp([92755437227203],{\n\n/***/ 29:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-array/ Version 1.2.1. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  stop = +stop, start = +start, count = +count;\n\t  if (start === stop && count > 0) return [start];\n\t  if (reverse = stop < start) n = start, start = stop, stop = n;\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar quantile = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return quantile(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = quantile;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n\n/***/ 62:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-collection/ Version 1.0.4. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) {\n\t      if (sortValues != null) array.sort(sortValues);\n\t      return rollup != null ? rollup(array) : array;\n\t    }\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map$$1, depth) {\n\t    if (++depth > keys.length) return map$$1;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map$$1.entries();\n\t    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map();\n\t}\n\t\n\tfunction setMap(map$$1, key, value) {\n\t  map$$1.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map.prototype;\n\t\n\tSet.prototype = set.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\texports.nest = nest;\n\texports.set = set;\n\texports.map = map;\n\texports.keys = keys;\n\texports.values = values;\n\texports.entries = entries;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n\n/***/ 33:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-color/ Version 1.0.3. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n\n/***/ 131:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-format/ Version 1.2.1. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatNumerals = function(numerals) {\n\t  return function(value) {\n\t    return value.replace(/[0-9]/g, function(i) {\n\t      return numerals[+i];\n\t    });\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tfunction formatSpecifier(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t}\n\t\n\tformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal,\n\t      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n\t      percent = locale.percent || \"%\";\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Perform the initial formatting.\n\t        var valueNegative = value < 0;\n\t        value = formatType(Math.abs(value), precision);\n\t\n\t        // If a negative value rounds to zero during formatting, treat as positive.\n\t        if (valueNegative && +value === 0) valueNegative = false;\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n\t        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n\t        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n\t        default: value = padding + valuePrefix + value + valueSuffix; break;\n\t      }\n\t\n\t      return numerals(value);\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale = formatLocale(definition);\n\t  exports.format = locale.format;\n\t  exports.formatPrefix = locale.formatPrefix;\n\t  return locale;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent(max) - exponent(step)) + 1;\n\t};\n\t\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatLocale = formatLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n\n/***/ 416:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-geo/ Version 1.10.0. Copyright 2018 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(29)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3));\n\t}(this, (function (exports,d3Array) { 'use strict';\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tfunction adder() {\n\t  return new Adder;\n\t}\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add(temp, y, this.t);\n\t    add(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon = 1e-6;\n\tvar epsilon2 = 1e-12;\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\tvar quarterPi = pi / 4;\n\tvar tau = pi * 2;\n\t\n\tvar degrees = 180 / pi;\n\tvar radians = pi / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log = Math.log;\n\tvar pow = Math.pow;\n\tvar sin = Math.sin;\n\tvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin(x / 2)) * x;\n\t}\n\t\n\tfunction noop() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(object, stream) {\n\t    streamGeometry(object.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tfunction geoStream(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t}\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop,\n\t  lineStart: noop,\n\t  lineEnd: noop,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos(phi),\n\t      sinPhi = sin(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos(adLambda),\n\t      v = k * sdLambda * sin(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tfunction area(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t}\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n\t  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range$1;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon) phi1 = 90;\n\t    else if (deltaSum < -epsilon) phi0 = -90;\n\t    range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  }\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon) lambda0$1 = -(lambda1 = 180);\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range$$1, x) {\n\t  return range$$1[0] <= range$$1[1] ? range$$1[0] <= x && x <= range$$1[1] : x < range$$1[0] || range$$1[1] < x;\n\t}\n\t\n\tfunction bounds(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range$1 = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t}\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos(phi);\n\t  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos(phi);\n\t  x0 = cosPhi * cos(lambda);\n\t  y0 = cosPhi * sin(lambda);\n\t  z0 = sin(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos(phi),\n\t      x = cosPhi * cos(lambda),\n\t      y = cosPhi * sin(lambda),\n\t      z = sin(phi),\n\t      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos(phi);\n\t  x0 = cosPhi * cos(lambda);\n\t  y0 = cosPhi * sin(lambda);\n\t  z0 = sin(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos(phi),\n\t      x = cosPhi * cos(lambda),\n\t      y = cosPhi * sin(lambda),\n\t      z = sin(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt(cx * cx + cy * cy + cz * cz),\n\t      w = asin(m), // line weight = angle\n\t      v = m && -w / m; // area weight multiplier\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroid(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n\t}\n\t\n\tfunction constant(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t}\n\t\n\tfunction compose(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t}\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos(deltaPhi),\n\t      sinDeltaPhi = sin(deltaPhi),\n\t      cosDeltaGamma = cos(deltaGamma),\n\t      sinDeltaGamma = sin(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos(phi),\n\t        x = cos(lambda) * cosPhi,\n\t        y = sin(lambda) * cosPhi,\n\t        z = sin(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos(phi),\n\t        x = cos(lambda) * cosPhi,\n\t        y = sin(lambda) * cosPhi,\n\t        z = sin(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tfunction rotation(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos(radius),\n\t      sinRadius = sin(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n\t}\n\t\n\tfunction circle() {\n\t  var center = constant([0, 0]),\n\t      radius = constant(90),\n\t      precision = constant(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees, x[1] *= degrees;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t}\n\t\n\tfunction clipBuffer() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t}\n\t\n\tfunction pointEqual(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n\t}\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tfunction clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link(subject);\n\t  link(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t}\n\t\n\tfunction link(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar sum = adder();\n\t\n\tfunction polygonContains(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      sinPhi = sin(phi),\n\t      normal = [sin(lambda), -cos(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum.reset();\n\t\n\t  if (sinPhi === 1) phi = halfPi + epsilon;\n\t  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin(phi0),\n\t        cosPhi0 = cos(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin(phi1),\n\t          cosPhi1 = cos(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum.add(atan2(k * sign$$1 * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n\t}\n\t\n\tfunction clip(pointVisible, clipLine, interpolate, start) {\n\t  return function(sink) {\n\t    var line = clipLine(sink),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = d3Array.merge(segments);\n\t        var startInside = polygonContains(polygon, start);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      line.point(lambda, phi);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      ringSink.point(lambda, phi);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t}\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi, -halfPi]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi : -pi,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi) < epsilon) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon\n\t      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n\t          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi;\n\t    stream.point(-pi, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi, phi);\n\t    stream.point(pi, 0);\n\t    stream.point(pi, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi, -phi);\n\t    stream.point(-pi, 0);\n\t    stream.point(-pi, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon) {\n\t    var lambda = from[0] < to[0] ? pi : -pi;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tfunction clipCircle(radius) {\n\t  var cr = cos(radius),\n\t      delta = 6 * radians,\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos(lambda) * cos(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon;\n\t            point1[1] += epsilon;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi) < epsilon,\n\t        meridian = polar || delta < epsilon;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n\t}\n\t\n\tfunction clipLine(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipRectangle(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = d3Array.merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tfunction extent() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t}\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop,\n\t  point: noop,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop,\n\t  polygonStart: noop,\n\t  polygonEnd: noop\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin(phi), cosPhi0$1 = cos(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin(phi),\n\t      cosPhi = cos(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos(delta),\n\t      sinDelta = sin(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tfunction length(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t}\n\t\n\tvar coordinates = [null, null];\n\tvar object = {type: \"LineString\", coordinates: coordinates};\n\t\n\tfunction distance(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length(object);\n\t}\n\t\n\tvar containsObjectType = {\n\t  Feature: function(object, point) {\n\t    return containsGeometry(object.geometry, point);\n\t  },\n\t  FeatureCollection: function(object, point) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tvar containsGeometryType = {\n\t  Sphere: function() {\n\t    return true;\n\t  },\n\t  Point: function(object, point) {\n\t    return containsPoint(object.coordinates, point);\n\t  },\n\t  MultiPoint: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  LineString: function(object, point) {\n\t    return containsLine(object.coordinates, point);\n\t  },\n\t  MultiLineString: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  Polygon: function(object, point) {\n\t    return containsPolygon(object.coordinates, point);\n\t  },\n\t  MultiPolygon: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  GeometryCollection: function(object, point) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tfunction containsGeometry(geometry, point) {\n\t  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n\t      ? containsGeometryType[geometry.type](geometry, point)\n\t      : false;\n\t}\n\t\n\tfunction containsPoint(coordinates, point) {\n\t  return distance(coordinates, point) === 0;\n\t}\n\t\n\tfunction containsLine(coordinates, point) {\n\t  var ab = distance(coordinates[0], coordinates[1]),\n\t      ao = distance(coordinates[0], point),\n\t      ob = distance(point, coordinates[1]);\n\t  return ao + ob <= ab + epsilon;\n\t}\n\t\n\tfunction containsPolygon(coordinates, point) {\n\t  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n\t}\n\t\n\tfunction ringRadians(ring) {\n\t  return ring = ring.map(pointRadians), ring.pop(), ring;\n\t}\n\t\n\tfunction pointRadians(point) {\n\t  return [point[0] * radians, point[1] * radians];\n\t}\n\t\n\tfunction contains(object, point) {\n\t  return (object && containsObjectType.hasOwnProperty(object.type)\n\t      ? containsObjectType[object.type]\n\t      : containsGeometry)(object, point);\n\t}\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = d3Array.range(y0, y1 - epsilon, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = d3Array.range(x0, x1 - epsilon, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return d3Array.range(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(d3Array.range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(d3Array.range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n\t        .concat(d3Array.range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n\t      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tfunction interpolate(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos(y0),\n\t      sy0 = sin(y0),\n\t      cy1 = cos(y1),\n\t      sy1 = sin(y1),\n\t      kx0 = cy0 * cos(x0),\n\t      ky0 = cy0 * sin(x0),\n\t      kx1 = cy1 * cos(x1),\n\t      ky1 = cy1 * sin(x1),\n\t      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin(t *= d) / k,\n\t        A = sin(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees,\n\t      atan2(z, sqrt(x * x + y * y)) * degrees\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees, y0 * degrees];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t}\n\t\n\tfunction identity(x) {\n\t  return x;\n\t}\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop,\n\t  lineStart: noop,\n\t  lineEnd: noop,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop,\n\t  lineEnd: noop,\n\t  polygonStart: noop,\n\t  polygonEnd: noop,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop\n\t};\n\t\n\tvar lengthSum$1 = adder();\n\tvar lengthRing;\n\tvar x00$2;\n\tvar y00$2;\n\tvar x0$4;\n\tvar y0$4;\n\t\n\tvar lengthStream$1 = {\n\t  point: noop,\n\t  lineStart: function() {\n\t    lengthStream$1.point = lengthPointFirst$1;\n\t  },\n\t  lineEnd: function() {\n\t    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n\t    lengthStream$1.point = noop;\n\t  },\n\t  polygonStart: function() {\n\t    lengthRing = true;\n\t  },\n\t  polygonEnd: function() {\n\t    lengthRing = null;\n\t  },\n\t  result: function() {\n\t    var length = +lengthSum$1;\n\t    lengthSum$1.reset();\n\t    return length;\n\t  }\n\t};\n\t\n\tfunction lengthPointFirst$1(x, y) {\n\t  lengthStream$1.point = lengthPoint$1;\n\t  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n\t}\n\t\n\tfunction lengthPoint$1(x, y) {\n\t  x0$4 -= x, y0$4 -= y;\n\t  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n\t  x0$4 = x, y0$4 = y;\n\t}\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _radius: 4.5,\n\t  _circle: circle$1(4.5),\n\t  pointRadius: function(_) {\n\t    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n\t    return this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        if (this._circle == null) this._circle = circle$1(this._radius);\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$1(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tfunction index(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.measure = function(object) {\n\t    geoStream(object, projectionStream(lengthStream$1));\n\t    return lengthStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t}\n\t\n\tfunction transform(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t}\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fit(projection, fitBounds, object) {\n\t  var clip = projection.clipExtent && projection.clipExtent();\n\t  projection.scale(150).translate([0, 0]);\n\t  if (clip != null) projection.clipExtent(null);\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t  fitBounds(boundsStream$1.result());\n\t  if (clip != null) projection.clipExtent(clip);\n\t  return projection;\n\t}\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  return fit(projection, function(b) {\n\t    var w = extent[1][0] - extent[0][0],\n\t        h = extent[1][1] - extent[0][1],\n\t        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t    projection.scale(150 * k).translate([x, y]);\n\t  }, object);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tfunction fitWidth(projection, width, object) {\n\t  return fit(projection, function(b) {\n\t    var w = +width,\n\t        k = w / (b[1][0] - b[0][0]),\n\t        x = (w - k * (b[1][0] + b[0][0])) / 2,\n\t        y = -k * b[0][1];\n\t    projection.scale(150 * k).translate([x, y]);\n\t  }, object);\n\t}\n\t\n\tfunction fitHeight(projection, height, object) {\n\t  return fit(projection, function(b) {\n\t    var h = +height,\n\t        k = h / (b[1][1] - b[0][1]),\n\t        x = -k * b[0][0],\n\t        y = (h - k * (b[1][1] + b[0][1])) / 2;\n\t    projection.scale(150 * k).translate([x, y]);\n\t  }, object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\t\n\tfunction resample(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t}\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt(a * a + b * b + c * c),\n\t          phi2 = asin(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction transformRotate(rotate) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      var r = rotate(x, y);\n\t      return this.stream.point(r[0], r[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction scaleTranslate(k, dx, dy) {\n\t  function transform$$1(x, y) {\n\t    return [dx + k * x, dy - k * y];\n\t  }\n\t  transform$$1.invert = function(x, y) {\n\t    return [(x - dx) / k, (dy - y) / k];\n\t  };\n\t  return transform$$1;\n\t}\n\t\n\tfunction scaleTranslateRotate(k, dx, dy, alpha) {\n\t  var cosAlpha = cos(alpha),\n\t      sinAlpha = sin(alpha),\n\t      a = cosAlpha * k,\n\t      b = sinAlpha * k,\n\t      ai = cosAlpha / k,\n\t      bi = sinAlpha / k,\n\t      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n\t      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n\t  function transform$$1(x, y) {\n\t    return [a * x - b * y + dx, dy - b * x - a * y];\n\t  }\n\t  transform$$1.invert = function(x, y) {\n\t    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n\t  };\n\t  return transform$$1;\n\t}\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n\t      alpha = 0, // post-rotate\n\t      theta = null, preclip = clipAntimeridian, // pre-clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n\t      delta2 = 0.5, // precision\n\t      projectResample,\n\t      projectTransform,\n\t      projectRotateTransform,\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    return projectRotateTransform(point[0] * radians, point[1] * radians);\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotateTransform.invert(point[0], point[1]);\n\t    return point && [point[0] * degrees, point[1] * degrees];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n\t  };\n\t\n\t  projection.preclip = function(_) {\n\t    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n\t  };\n\t\n\t  projection.postclip = function(_) {\n\t    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n\t  };\n\t\n\t  projection.angle = function(_) {\n\t    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  projection.fitWidth = function(width, object) {\n\t    return fitWidth(projection, width, object);\n\t  };\n\t\n\t  projection.fitHeight = function(height, object) {\n\t    return fitHeight(projection, height, object);\n\t  };\n\t\n\t  function recenter() {\n\t    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n\t        transform$$1 = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n\t    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n\t    projectTransform = compose(project, transform$$1);\n\t    projectRotateTransform = compose(rotate, projectTransform);\n\t    projectResample = resample(projectTransform, delta2);\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt(c - 2 * n * sin(y)) / n;\n\t    return [r * sin(x *= n), r0 - r * cos(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tfunction conicEqualArea() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t}\n\t\n\tfunction albers() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t}\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tfunction albersUsa() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null, (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  albersUsa.fitWidth = function(width, object) {\n\t    return fitWidth(albersUsa, width, object);\n\t  };\n\t\n\t  albersUsa.fitHeight = function(height, object) {\n\t    return fitHeight(albersUsa, height, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t}\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos(x),\n\t        cy = cos(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin(x),\n\t      k * sin(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin(c),\n\t        cc = cos(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin(z / 2);\n\t});\n\t\n\tfunction azimuthalEqualArea() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t}\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tfunction azimuthalEquidistant() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t}\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log(tan((halfPi + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi];\n\t};\n\t\n\tfunction mercator() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau);\n\t}\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      center = m.center,\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      x0 = null, y0, x1, y1; // clip extent\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), reclip()) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), reclip()) : translate();\n\t  };\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? (center(_), reclip()) : center();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  function reclip() {\n\t    var k = pi * scale(),\n\t        t = m(rotation(m.rotate()).invert([0, 0]));\n\t    return clipExtent(x0 == null\n\t        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n\t        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n\t        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n\t  }\n\t\n\t  return reclip();\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos(y0),\n\t      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n\t      f = cy0 * pow(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n\t    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n\t    var r = f / pow(tany(y), n);\n\t    return [r * sin(n * x), f - r * cos(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tfunction conicConformal() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t}\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tfunction equirectangular() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t}\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos(y0),\n\t      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin(nx), g - gy * cos(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tfunction conicEquidistant() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t}\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos(y), k = cos(x) * cy;\n\t  return [cy * sin(x) / k, sin(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tfunction gnomonic() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t}\n\t\n\tfunction scaleTranslate$1(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tfunction identity$1() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, // clip extent\n\t      postclip = identity,\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n\t    },\n\t    postclip: function(_) {\n\t      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate$1((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate$1(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate$1(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate$1(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    },\n\t    fitWidth: function(width, object) {\n\t      return fitWidth(projection, width, object);\n\t    },\n\t    fitHeight: function(height, object) {\n\t      return fitHeight(projection, height, object);\n\t    }\n\t  };\n\t}\n\t\n\tfunction naturalEarth1Raw(lambda, phi) {\n\t  var phi2 = phi * phi, phi4 = phi2 * phi2;\n\t  return [\n\t    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n\t    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n\t  ];\n\t}\n\t\n\tnaturalEarth1Raw.invert = function(x, y) {\n\t  var phi = y, i = 25, delta;\n\t  do {\n\t    var phi2 = phi * phi, phi4 = phi2 * phi2;\n\t    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n\t        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n\t  } while (abs(delta) > epsilon && --i > 0);\n\t  return [\n\t    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n\t    phi\n\t  ];\n\t};\n\t\n\tfunction naturalEarth1() {\n\t  return projection(naturalEarth1Raw)\n\t      .scale(175.295);\n\t}\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos(y) * sin(x), sin(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin);\n\t\n\tfunction orthographic() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon);\n\t}\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos(y), k = 1 + cos(x) * cy;\n\t  return [cy * sin(x) / k, sin(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tfunction stereographic() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t}\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log(tan((halfPi + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi];\n\t};\n\t\n\tfunction transverseMercator() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t}\n\t\n\texports.geoArea = area;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid;\n\texports.geoCircle = circle;\n\texports.geoClipAntimeridian = clipAntimeridian;\n\texports.geoClipCircle = clipCircle;\n\texports.geoClipExtent = extent;\n\texports.geoClipRectangle = clipRectangle;\n\texports.geoContains = contains;\n\texports.geoDistance = distance;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoInterpolate = interpolate;\n\texports.geoLength = length;\n\texports.geoPath = index;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoIdentity = identity$1;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoNaturalEarth1 = naturalEarth1;\n\texports.geoNaturalEarth1Raw = naturalEarth1Raw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\texports.geoRotation = rotation;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n\n/***/ 86:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-interpolate/ Version 1.1.6. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(33)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3));\n\t}(this, (function (exports,d3Color) { 'use strict';\n\t\n\tfunction basis(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$1 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n\t}\n\t\n\tvar rgb$1 = ((function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t}))(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = d3Color.rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$1);\n\tvar rgbBasisClosed = rgbSpline(basisClosed);\n\t\n\tvar array = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(na),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar number = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = value(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar string = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: number(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar value = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant(b)\n\t      : (t === \"number\" ? number\n\t      : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb$1) : string)\n\t      : b instanceof d3Color.color ? rgb$1\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array\n\t      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n\t      : number)(a, b);\n\t};\n\t\n\tvar round = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar zoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\texports.interpolate = value;\n\texports.interpolateArray = array;\n\texports.interpolateBasis = basis$1;\n\texports.interpolateBasisClosed = basisClosed;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = number;\n\texports.interpolateObject = object;\n\texports.interpolateRound = round;\n\texports.interpolateString = string;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = zoom;\n\texports.interpolateRgb = rgb$1;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.quantize = quantize;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n\n/***/ 417:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-path/ Version 1.0.5. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar pi = Math.PI;\n\tvar tau = 2 * pi;\n\tvar epsilon = 1e-6;\n\tvar tauEpsilon = tau - epsilon;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Does the angle go the wrong way? Flip the direction.\n\t    if (da < 0) da = da % tau + tau;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Is this arc non-empty? Draw an arc!\n\t    else if (da > epsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\texports.path = path;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n\n/***/ 418:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-scale-chromatic/ Version 1.2.0. Copyright 2018 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(86), __webpack_require__(33)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-interpolate', 'd3-color'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3));\n\t}(this, (function (exports,d3Interpolate,d3Color) { 'use strict';\n\t\n\tfunction colors(specifier) {\n\t  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n\t  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n\t  return colors;\n\t}\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar Accent = colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n\t\n\tvar Dark2 = colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n\t\n\tvar Paired = colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n\t\n\tvar Pastel1 = colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n\t\n\tvar Pastel2 = colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n\t\n\tvar Set1 = colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n\t\n\tvar Set2 = colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n\t\n\tvar Set3 = colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n\t\n\tfunction ramp(scheme) {\n\t  return d3Interpolate.interpolateRgbBasis(scheme[scheme.length - 1]);\n\t}\n\t\n\tvar scheme = new Array(3).concat(\n\t  \"d8b365f5f5f55ab4ac\",\n\t  \"a6611adfc27d80cdc1018571\",\n\t  \"a6611adfc27df5f5f580cdc1018571\",\n\t  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n\t  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n\t  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n\t  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n\t  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n\t  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n\t).map(colors);\n\t\n\tvar BrBG = ramp(scheme);\n\t\n\tvar scheme$1 = new Array(3).concat(\n\t  \"af8dc3f7f7f77fbf7b\",\n\t  \"7b3294c2a5cfa6dba0008837\",\n\t  \"7b3294c2a5cff7f7f7a6dba0008837\",\n\t  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n\t  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n\t  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n\t  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n\t  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n\t  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n\t).map(colors);\n\t\n\tvar PRGn = ramp(scheme$1);\n\t\n\tvar scheme$2 = new Array(3).concat(\n\t  \"e9a3c9f7f7f7a1d76a\",\n\t  \"d01c8bf1b6dab8e1864dac26\",\n\t  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n\t  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n\t  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n\t  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n\t  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n\t  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n\t  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n\t).map(colors);\n\t\n\tvar PiYG = ramp(scheme$2);\n\t\n\tvar scheme$3 = new Array(3).concat(\n\t  \"998ec3f7f7f7f1a340\",\n\t  \"5e3c99b2abd2fdb863e66101\",\n\t  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n\t  \"542788998ec3d8daebfee0b6f1a340b35806\",\n\t  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n\t  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n\t  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n\t  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n\t  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n\t).map(colors);\n\t\n\tvar PuOr = ramp(scheme$3);\n\t\n\tvar scheme$4 = new Array(3).concat(\n\t  \"ef8a62f7f7f767a9cf\",\n\t  \"ca0020f4a58292c5de0571b0\",\n\t  \"ca0020f4a582f7f7f792c5de0571b0\",\n\t  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n\t  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n\t  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n\t  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n\t  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n\t  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n\t).map(colors);\n\t\n\tvar RdBu = ramp(scheme$4);\n\t\n\tvar scheme$5 = new Array(3).concat(\n\t  \"ef8a62ffffff999999\",\n\t  \"ca0020f4a582bababa404040\",\n\t  \"ca0020f4a582ffffffbababa404040\",\n\t  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n\t  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n\t  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n\t  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n\t  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n\t  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n\t).map(colors);\n\t\n\tvar RdGy = ramp(scheme$5);\n\t\n\tvar scheme$6 = new Array(3).concat(\n\t  \"fc8d59ffffbf91bfdb\",\n\t  \"d7191cfdae61abd9e92c7bb6\",\n\t  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n\t  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n\t  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n\t  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n\t  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n\t  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n\t  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n\t).map(colors);\n\t\n\tvar RdYlBu = ramp(scheme$6);\n\t\n\tvar scheme$7 = new Array(3).concat(\n\t  \"fc8d59ffffbf91cf60\",\n\t  \"d7191cfdae61a6d96a1a9641\",\n\t  \"d7191cfdae61ffffbfa6d96a1a9641\",\n\t  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n\t  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n\t  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n\t  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n\t  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n\t  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n\t).map(colors);\n\t\n\tvar RdYlGn = ramp(scheme$7);\n\t\n\tvar scheme$8 = new Array(3).concat(\n\t  \"fc8d59ffffbf99d594\",\n\t  \"d7191cfdae61abdda42b83ba\",\n\t  \"d7191cfdae61ffffbfabdda42b83ba\",\n\t  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n\t  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n\t  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n\t  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n\t  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n\t  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n\t).map(colors);\n\t\n\tvar Spectral = ramp(scheme$8);\n\t\n\tvar scheme$9 = new Array(3).concat(\n\t  \"e5f5f999d8c92ca25f\",\n\t  \"edf8fbb2e2e266c2a4238b45\",\n\t  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n\t  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n\t  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n\t  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n\t  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n\t).map(colors);\n\t\n\tvar BuGn = ramp(scheme$9);\n\t\n\tvar scheme$10 = new Array(3).concat(\n\t  \"e0ecf49ebcda8856a7\",\n\t  \"edf8fbb3cde38c96c688419d\",\n\t  \"edf8fbb3cde38c96c68856a7810f7c\",\n\t  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n\t  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n\t  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n\t  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n\t).map(colors);\n\t\n\tvar BuPu = ramp(scheme$10);\n\t\n\tvar scheme$11 = new Array(3).concat(\n\t  \"e0f3dba8ddb543a2ca\",\n\t  \"f0f9e8bae4bc7bccc42b8cbe\",\n\t  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n\t  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n\t  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n\t  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n\t  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n\t).map(colors);\n\t\n\tvar GnBu = ramp(scheme$11);\n\t\n\tvar scheme$12 = new Array(3).concat(\n\t  \"fee8c8fdbb84e34a33\",\n\t  \"fef0d9fdcc8afc8d59d7301f\",\n\t  \"fef0d9fdcc8afc8d59e34a33b30000\",\n\t  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n\t  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n\t  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n\t  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n\t).map(colors);\n\t\n\tvar OrRd = ramp(scheme$12);\n\t\n\tvar scheme$13 = new Array(3).concat(\n\t  \"ece2f0a6bddb1c9099\",\n\t  \"f6eff7bdc9e167a9cf02818a\",\n\t  \"f6eff7bdc9e167a9cf1c9099016c59\",\n\t  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n\t  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n\t  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n\t  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n\t).map(colors);\n\t\n\tvar PuBuGn = ramp(scheme$13);\n\t\n\tvar scheme$14 = new Array(3).concat(\n\t  \"ece7f2a6bddb2b8cbe\",\n\t  \"f1eef6bdc9e174a9cf0570b0\",\n\t  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n\t  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n\t  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n\t  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n\t  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n\t).map(colors);\n\t\n\tvar PuBu = ramp(scheme$14);\n\t\n\tvar scheme$15 = new Array(3).concat(\n\t  \"e7e1efc994c7dd1c77\",\n\t  \"f1eef6d7b5d8df65b0ce1256\",\n\t  \"f1eef6d7b5d8df65b0dd1c77980043\",\n\t  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n\t  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n\t  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n\t  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n\t).map(colors);\n\t\n\tvar PuRd = ramp(scheme$15);\n\t\n\tvar scheme$16 = new Array(3).concat(\n\t  \"fde0ddfa9fb5c51b8a\",\n\t  \"feebe2fbb4b9f768a1ae017e\",\n\t  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n\t  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n\t  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n\t  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n\t  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n\t).map(colors);\n\t\n\tvar RdPu = ramp(scheme$16);\n\t\n\tvar scheme$17 = new Array(3).concat(\n\t  \"edf8b17fcdbb2c7fb8\",\n\t  \"ffffcca1dab441b6c4225ea8\",\n\t  \"ffffcca1dab441b6c42c7fb8253494\",\n\t  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n\t  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n\t  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n\t  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n\t).map(colors);\n\t\n\tvar YlGnBu = ramp(scheme$17);\n\t\n\tvar scheme$18 = new Array(3).concat(\n\t  \"f7fcb9addd8e31a354\",\n\t  \"ffffccc2e69978c679238443\",\n\t  \"ffffccc2e69978c67931a354006837\",\n\t  \"ffffccd9f0a3addd8e78c67931a354006837\",\n\t  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n\t  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n\t  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n\t).map(colors);\n\t\n\tvar YlGn = ramp(scheme$18);\n\t\n\tvar scheme$19 = new Array(3).concat(\n\t  \"fff7bcfec44fd95f0e\",\n\t  \"ffffd4fed98efe9929cc4c02\",\n\t  \"ffffd4fed98efe9929d95f0e993404\",\n\t  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n\t  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n\t  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n\t  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n\t).map(colors);\n\t\n\tvar YlOrBr = ramp(scheme$19);\n\t\n\tvar scheme$20 = new Array(3).concat(\n\t  \"ffeda0feb24cf03b20\",\n\t  \"ffffb2fecc5cfd8d3ce31a1c\",\n\t  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n\t  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n\t  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n\t  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n\t  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n\t).map(colors);\n\t\n\tvar YlOrRd = ramp(scheme$20);\n\t\n\tvar scheme$21 = new Array(3).concat(\n\t  \"deebf79ecae13182bd\",\n\t  \"eff3ffbdd7e76baed62171b5\",\n\t  \"eff3ffbdd7e76baed63182bd08519c\",\n\t  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n\t  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n\t  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n\t  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n\t).map(colors);\n\t\n\tvar Blues = ramp(scheme$21);\n\t\n\tvar scheme$22 = new Array(3).concat(\n\t  \"e5f5e0a1d99b31a354\",\n\t  \"edf8e9bae4b374c476238b45\",\n\t  \"edf8e9bae4b374c47631a354006d2c\",\n\t  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n\t  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n\t  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n\t  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n\t).map(colors);\n\t\n\tvar Greens = ramp(scheme$22);\n\t\n\tvar scheme$23 = new Array(3).concat(\n\t  \"f0f0f0bdbdbd636363\",\n\t  \"f7f7f7cccccc969696525252\",\n\t  \"f7f7f7cccccc969696636363252525\",\n\t  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n\t  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n\t  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n\t  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n\t).map(colors);\n\t\n\tvar Greys = ramp(scheme$23);\n\t\n\tvar scheme$24 = new Array(3).concat(\n\t  \"efedf5bcbddc756bb1\",\n\t  \"f2f0f7cbc9e29e9ac86a51a3\",\n\t  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n\t  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n\t  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n\t  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n\t  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n\t).map(colors);\n\t\n\tvar Purples = ramp(scheme$24);\n\t\n\tvar scheme$25 = new Array(3).concat(\n\t  \"fee0d2fc9272de2d26\",\n\t  \"fee5d9fcae91fb6a4acb181d\",\n\t  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n\t  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n\t  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n\t  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n\t  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n\t).map(colors);\n\t\n\tvar Reds = ramp(scheme$25);\n\t\n\tvar scheme$26 = new Array(3).concat(\n\t  \"fee6cefdae6be6550d\",\n\t  \"feeddefdbe85fd8d3cd94701\",\n\t  \"feeddefdbe85fd8d3ce6550da63603\",\n\t  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n\t  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n\t  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n\t  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n\t).map(colors);\n\t\n\tvar Oranges = ramp(scheme$26);\n\t\n\tvar cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = d3Color.cubehelix();\n\t\n\tfunction rainbow$1(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t}\n\t\n\tfunction ramp$1(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp$1(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp$1(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp$1(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp$1(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\texports.schemeCategory10 = category10;\n\texports.schemeAccent = Accent;\n\texports.schemeDark2 = Dark2;\n\texports.schemePaired = Paired;\n\texports.schemePastel1 = Pastel1;\n\texports.schemePastel2 = Pastel2;\n\texports.schemeSet1 = Set1;\n\texports.schemeSet2 = Set2;\n\texports.schemeSet3 = Set3;\n\texports.interpolateBrBG = BrBG;\n\texports.schemeBrBG = scheme;\n\texports.interpolatePRGn = PRGn;\n\texports.schemePRGn = scheme$1;\n\texports.interpolatePiYG = PiYG;\n\texports.schemePiYG = scheme$2;\n\texports.interpolatePuOr = PuOr;\n\texports.schemePuOr = scheme$3;\n\texports.interpolateRdBu = RdBu;\n\texports.schemeRdBu = scheme$4;\n\texports.interpolateRdGy = RdGy;\n\texports.schemeRdGy = scheme$5;\n\texports.interpolateRdYlBu = RdYlBu;\n\texports.schemeRdYlBu = scheme$6;\n\texports.interpolateRdYlGn = RdYlGn;\n\texports.schemeRdYlGn = scheme$7;\n\texports.interpolateSpectral = Spectral;\n\texports.schemeSpectral = scheme$8;\n\texports.interpolateBuGn = BuGn;\n\texports.schemeBuGn = scheme$9;\n\texports.interpolateBuPu = BuPu;\n\texports.schemeBuPu = scheme$10;\n\texports.interpolateGnBu = GnBu;\n\texports.schemeGnBu = scheme$11;\n\texports.interpolateOrRd = OrRd;\n\texports.schemeOrRd = scheme$12;\n\texports.interpolatePuBuGn = PuBuGn;\n\texports.schemePuBuGn = scheme$13;\n\texports.interpolatePuBu = PuBu;\n\texports.schemePuBu = scheme$14;\n\texports.interpolatePuRd = PuRd;\n\texports.schemePuRd = scheme$15;\n\texports.interpolateRdPu = RdPu;\n\texports.schemeRdPu = scheme$16;\n\texports.interpolateYlGnBu = YlGnBu;\n\texports.schemeYlGnBu = scheme$17;\n\texports.interpolateYlGn = YlGn;\n\texports.schemeYlGn = scheme$18;\n\texports.interpolateYlOrBr = YlOrBr;\n\texports.schemeYlOrBr = scheme$19;\n\texports.interpolateYlOrRd = YlOrRd;\n\texports.schemeYlOrRd = scheme$20;\n\texports.interpolateBlues = Blues;\n\texports.schemeBlues = scheme$21;\n\texports.interpolateGreens = Greens;\n\texports.schemeGreens = scheme$22;\n\texports.interpolateGreys = Greys;\n\texports.schemeGreys = scheme$23;\n\texports.interpolatePurples = Purples;\n\texports.schemePurples = scheme$24;\n\texports.interpolateReds = Reds;\n\texports.schemeReds = scheme$25;\n\texports.interpolateOranges = Oranges;\n\texports.schemeOranges = scheme$26;\n\texports.interpolateCubehelixDefault = cubehelix$1;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n\n/***/ 63:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-scale/ Version 1.0.7. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(29), __webpack_require__(62), __webpack_require__(86), __webpack_require__(131), __webpack_require__(64), __webpack_require__(132), __webpack_require__(33)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n\t}(this, (function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\t\n\tvar array = Array.prototype;\n\t\n\tvar map$1 = array.map;\n\tvar slice = array.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range$$1) {\n\t  var index = d3Collection.map(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range$$1 = range$$1 == null ? [] : slice.call(range$$1);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range$$1[(i - 1) % range$$1.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = d3Collection.map();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range$$1)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = d3Array.bisect(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = d3Interpolate.interpolate,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice.call(_), interpolate$$1 = d3Interpolate.interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n\t      return d3Format.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return d3Format.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    if (count == null) count = 10;\n\t\n\t    var d = domain(),\n\t        i0 = 0,\n\t        i1 = d.length - 1,\n\t        start = d[i0],\n\t        stop = d[i1],\n\t        step;\n\t\n\t    if (stop < start) {\n\t      step = start, start = stop, stop = step;\n\t      step = i0, i0 = i1, i1 = step;\n\t    }\n\t\n\t    step = d3Array.tickIncrement(start, stop, count);\n\t\n\t    if (step > 0) {\n\t      start = Math.floor(start / step) * step;\n\t      stop = Math.ceil(stop / step) * step;\n\t      step = d3Array.tickIncrement(start, stop, count);\n\t    } else if (step < 0) {\n\t      start = Math.ceil(start * step) / step;\n\t      stop = Math.floor(stop * step) / step;\n\t      step = d3Array.tickIncrement(start, stop, count);\n\t    }\n\t\n\t    if (step > 0) {\n\t      d[i0] = Math.floor(start / step) * step;\n\t      d[i1] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    } else if (step < 0) {\n\t      d[i0] = Math.ceil(start * step) / step;\n\t      d[i1] = Math.floor(stop * step) / step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear() {\n\t  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant(b);\n\t}\n\t\n\tfunction reinterpolate(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log() {\n\t  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n\t        ? function(x) { return (raise(x, exponent) - a) / b; }\n\t        : constant(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise(b, exponent) - (a = raise(a, exponent));\n\t    return function(t) { return raise(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt() {\n\t  return pow().exponent(0.5);\n\t}\n\t\n\tfunction quantile$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[d3Array.bisect(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(d3Array.ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar durationSecond = 1000;\n\tvar durationMinute = durationSecond * 60;\n\tvar durationHour = durationMinute * 60;\n\tvar durationDay = durationHour * 24;\n\tvar durationWeek = durationDay * 7;\n\tvar durationMonth = durationDay * 30;\n\tvar durationYear = durationDay * 365;\n\t\n\tfunction date(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$1(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year, month, week, day, hour, minute, second, millisecond, format$$1) {\n\t  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format$$1(\".%L\"),\n\t      formatSecond = format$$1(\":%S\"),\n\t      formatMinute = format$$1(\"%I:%M\"),\n\t      formatHour = format$$1(\"%I %p\"),\n\t      formatDay = format$$1(\"%a %d\"),\n\t      formatWeek = format$$1(\"%b %d\"),\n\t      formatMonth = format$$1(\"%B\"),\n\t      formatYear = format$$1(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second,  1,      durationSecond],\n\t    [second,  5,  5 * durationSecond],\n\t    [second, 15, 15 * durationSecond],\n\t    [second, 30, 30 * durationSecond],\n\t    [minute,  1,      durationMinute],\n\t    [minute,  5,  5 * durationMinute],\n\t    [minute, 15, 15 * durationMinute],\n\t    [minute, 30, 30 * durationMinute],\n\t    [  hour,  1,      durationHour  ],\n\t    [  hour,  3,  3 * durationHour  ],\n\t    [  hour,  6,  6 * durationHour  ],\n\t    [  hour, 12, 12 * durationHour  ],\n\t    [   day,  1,      durationDay   ],\n\t    [   day,  2,  2 * durationDay   ],\n\t    [  week,  1,      durationWeek  ],\n\t    [ month,  1,      durationMonth ],\n\t    [ month,  3,  3 * durationMonth ],\n\t    [  year,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second(date) < date ? formatMillisecond\n\t        : minute(date) < date ? formatSecond\n\t        : hour(date) < date ? formatMinute\n\t        : day(date) < date ? formatHour\n\t        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = Math.max(d3Array.tickStep(start, stop, interval), 1);\n\t        interval = millisecond;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format$$1(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format$$1));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = d3Color.cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range$$1) {\n\t  var n = range$$1.length;\n\t  return function(t) {\n\t    return range$$1[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\texports.scaleBand = band;\n\texports.scalePoint = point;\n\texports.scaleIdentity = identity;\n\texports.scaleLinear = linear;\n\texports.scaleLog = log;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow;\n\texports.scaleSqrt = sqrt;\n\texports.scaleQuantile = quantile$1;\n\texports.scaleQuantize = quantize;\n\texports.scaleThreshold = threshold;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.interpolateCubehelixDefault = cubehelix$1;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.scaleSequential = sequential;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n\n/***/ 419:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-shape/ Version 1.2.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(417)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3));\n\t}(this, (function (exports,d3Path) { 'use strict';\n\t\n\tvar constant = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar abs = Math.abs;\n\tvar atan2 = Math.atan2;\n\tvar cos = Math.cos;\n\tvar max = Math.max;\n\tvar min = Math.min;\n\tvar sin = Math.sin;\n\tvar sqrt = Math.sqrt;\n\t\n\tvar epsilon = 1e-12;\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\tvar tau = 2 * pi;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n\t}\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi,\n\t        a1 = endAngle.apply(this, arguments) - halfPi,\n\t        da = abs(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = d3Path.path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau - epsilon) {\n\t      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon) {\n\t        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n\t          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon) {\n\t        var p0 = asin(rp / r0 * sin(ap)),\n\t            p1 = asin(rp / r1 * sin(ap));\n\t        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * cos(a01),\n\t          y01 = r1 * sin(a01),\n\t          x10 = r0 * cos(a10),\n\t          y10 = r0 * sin(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon) {\n\t        var x11 = r1 * cos(a11),\n\t            y11 = r1 * sin(a11),\n\t            x00 = r0 * cos(a00),\n\t            y00 = r0 * sin(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi) {\n\t          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n\t              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n\t    return [cos(a) * r, sin(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x,\n\t      y$$1 = y,\n\t      defined = constant(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = d3Path.path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area = function() {\n\t  var x0 = x,\n\t      x1 = null,\n\t      y0 = constant(0),\n\t      y1 = y,\n\t      defined = constant(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = d3Path.path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity,\n\t      sortValues = descending,\n\t      sort = null,\n\t      startAngle = constant(0),\n\t      endAngle = constant(tau),\n\t      padAngle = constant(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction lineRadial(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar lineRadial$1 = function() {\n\t  return lineRadial(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar areaRadial = function() {\n\t  var a = area().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar pointRadial = function(x, y) {\n\t  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n\t};\n\t\n\tvar slice = Array.prototype.slice;\n\t\n\tfunction linkSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction linkTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction link(curve) {\n\t  var source = linkSource,\n\t      target = linkTarget,\n\t      x$$1 = x,\n\t      y$$1 = y,\n\t      context = null;\n\t\n\t  function link() {\n\t    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n\t    if (!context) context = buffer = d3Path.path();\n\t    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  link.source = function(_) {\n\t    return arguments.length ? (source = _, link) : source;\n\t  };\n\t\n\t  link.target = function(_) {\n\t    return arguments.length ? (target = _, link) : target;\n\t  };\n\t\n\t  link.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), link) : x$$1;\n\t  };\n\t\n\t  link.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), link) : y$$1;\n\t  };\n\t\n\t  link.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n\t  };\n\t\n\t  return link;\n\t}\n\t\n\tfunction curveHorizontal(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n\t}\n\t\n\tfunction curveVertical(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n\t}\n\t\n\tfunction curveRadial$1(context, x0, y0, x1, y1) {\n\t  var p0 = pointRadial(x0, y0),\n\t      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n\t      p2 = pointRadial(x1, y0),\n\t      p3 = pointRadial(x1, y1);\n\t  context.moveTo(p0[0], p0[1]);\n\t  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n\t}\n\t\n\tfunction linkHorizontal() {\n\t  return link(curveHorizontal);\n\t}\n\t\n\tfunction linkVertical() {\n\t  return link(curveVertical);\n\t}\n\t\n\tfunction linkRadial() {\n\t  var l = link(curveRadial$1);\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t  return l;\n\t}\n\t\n\tvar circle = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau);\n\t  }\n\t};\n\t\n\tvar cross = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10);\n\tvar kx = Math.sin(tau / 10) * kr;\n\tvar ky = -Math.cos(tau / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle,\n\t  cross,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant(circle),\n\t      size = constant(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = d3Path.path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop = function() {};\n\t\n\tfunction point(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = ((function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t}))(0.85);\n\t\n\tfunction point$1(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$1(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction point$2(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$3(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar none = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$1 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant([]),\n\t      order = none$1,\n\t      offset = none,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar diverging = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n\t    for (yp = yn = 0, i = 0; i < n; ++i) {\n\t      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n\t        d[0] = yp, d[1] = yp += dy;\n\t      } else if (dy < 0) {\n\t        d[1] = yn, d[0] = yn += dy;\n\t      } else {\n\t        d[0] = yp;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none(series, order);\n\t};\n\t\n\tvar ascending = function(series) {\n\t  var sums = series.map(sum);\n\t  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$1 = function(series) {\n\t  return ascending(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum),\n\t      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$1(series).reverse();\n\t};\n\t\n\texports.arc = arc;\n\texports.area = area;\n\texports.line = line;\n\texports.pie = pie;\n\texports.areaRadial = areaRadial;\n\texports.radialArea = areaRadial;\n\texports.lineRadial = lineRadial$1;\n\texports.radialLine = lineRadial$1;\n\texports.pointRadial = pointRadial;\n\texports.linkHorizontal = linkHorizontal;\n\texports.linkVertical = linkVertical;\n\texports.linkRadial = linkRadial;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle;\n\texports.symbolCross = cross;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetDiverging = diverging;\n\texports.stackOffsetNone = none;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending;\n\texports.stackOrderDescending = descending$1;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$1;\n\texports.stackOrderReverse = reverse;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n\n/***/ 132:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-time-format/ Version 2.1.1. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(64)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3));\n\t}(this, (function (exports,d3Time) { 'use strict';\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"f\": formatMicroseconds,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"Q\": formatUnixTimestamp,\n\t    \"s\": formatUnixTimestampSeconds,\n\t    \"S\": formatSeconds,\n\t    \"u\": formatWeekdayNumberMonday,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"V\": formatWeekNumberISO,\n\t    \"w\": formatWeekdayNumberSunday,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"f\": formatUTCMicroseconds,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"Q\": formatUnixTimestamp,\n\t    \"s\": formatUnixTimestampSeconds,\n\t    \"S\": formatUTCSeconds,\n\t    \"u\": formatUTCWeekdayNumberMonday,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"V\": formatUTCWeekNumberISO,\n\t    \"w\": formatUTCWeekdayNumberSunday,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"f\": parseMicroseconds,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"Q\": parseUnixTimestamp,\n\t    \"s\": parseUnixTimestampSeconds,\n\t    \"S\": parseSeconds,\n\t    \"u\": parseWeekdayNumberMonday,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"V\": parseWeekNumberISO,\n\t    \"w\": parseWeekdayNumberSunday,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0),\n\t          week, day;\n\t      if (i != string.length) return null;\n\t\n\t      // If a UNIX timestamp is specified, return it.\n\t      if (\"Q\" in d) return new Date(d.Q);\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"V\" in d) {\n\t        if (d.V < 1 || d.V > 53) return null;\n\t        if (!(\"w\" in d)) d.w = 1;\n\t        if (\"Z\" in d) {\n\t          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n\t          week = day > 4 || day === 0 ? d3Time.utcMonday.ceil(week) : d3Time.utcMonday(week);\n\t          week = d3Time.utcDay.offset(week, (d.V - 1) * 7);\n\t          d.y = week.getUTCFullYear();\n\t          d.m = week.getUTCMonth();\n\t          d.d = week.getUTCDate() + (d.w + 6) % 7;\n\t        } else {\n\t          week = newDate(newYear(d.y)), day = week.getDay();\n\t          week = day > 4 || day === 0 ? d3Time.timeMonday.ceil(week) : d3Time.timeMonday(week);\n\t          week = d3Time.timeDay.offset(week, (d.V - 1) * 7);\n\t          d.y = week.getFullYear();\n\t          d.m = week.getMonth();\n\t          d.d = week.getDate() + (d.w + 6) % 7;\n\t        }\n\t      } else if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n\t        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekdayNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.u = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberISO(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.V = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMicroseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 6));\n\t  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction parseUnixTimestamp(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseUnixTimestampSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMicroseconds(d, p) {\n\t  return formatMilliseconds(d, p) + \"000\";\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumberMonday(d) {\n\t  var day = d.getDay();\n\t  return day === 0 ? 7 : day;\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberISO(d, p) {\n\t  var day = d.getDay();\n\t  d = (day >= 4 || day === 0) ? d3Time.timeThursday(d) : d3Time.timeThursday.ceil(d);\n\t  return pad(d3Time.timeThursday.count(d3Time.timeYear(d), d) + (d3Time.timeYear(d).getDay() === 4), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumberSunday(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMicroseconds(d, p) {\n\t  return formatUTCMilliseconds(d, p) + \"000\";\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumberMonday(d) {\n\t  var dow = d.getUTCDay();\n\t  return dow === 0 ? 7 : dow;\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberISO(d, p) {\n\t  var day = d.getUTCDay();\n\t  d = (day >= 4 || day === 0) ? d3Time.utcThursday(d) : d3Time.utcThursday.ceil(d);\n\t  return pad(d3Time.utcThursday.count(d3Time.utcYear(d), d) + (d3Time.utcYear(d).getUTCDay() === 4), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumberSunday(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tfunction formatUnixTimestamp(d) {\n\t  return +d;\n\t}\n\t\n\tfunction formatUnixTimestampSeconds(d) {\n\t  return Math.floor(+d / 1000);\n\t}\n\t\n\tvar locale;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale = formatLocale(definition);\n\t  exports.timeFormat = locale.format;\n\t  exports.timeParse = locale.parse;\n\t  exports.utcFormat = locale.utcFormat;\n\t  exports.utcParse = locale.utcParse;\n\t  return locale;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\texports.timeFormatDefaultLocale = defaultLocale;\n\texports.timeFormatLocale = formatLocale;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n\n/***/ 64:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-time/ Version 1.0.8. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar t0 = new Date;\n\tvar t1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [], previous;\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n\t    while (previous < start && start < stop);\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) {\n\t        if (step < 0) while (++step <= 0) {\n\t          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\t        } else while (--step >= 0) {\n\t          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\t        }\n\t      }\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0.setTime(+start), t1.setTime(+end);\n\t      floori(t0), floori(t1);\n\t      return Math.floor(count(t0, t1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond = 1e3;\n\tvar durationMinute = 6e4;\n\tvar durationHour = 36e5;\n\tvar durationDay = 864e5;\n\tvar durationWeek = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n\t  if (offset < 0) offset += durationHour;\n\t  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n\n/***/ 97:\n/***/ (function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\tprocess.prependListener = noop;\n\tprocess.prependOnceListener = noop;\n\t\n\tprocess.listeners = function (name) { return [] }\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ }),\n\n/***/ 943:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://github.com/topojson/topojson-client Version 3.0.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.topojson = global.topojson || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar transform = function(transform) {\n\t  if (transform == null) return identity;\n\t  var x0,\n\t      y0,\n\t      kx = transform.scale[0],\n\t      ky = transform.scale[1],\n\t      dx = transform.translate[0],\n\t      dy = transform.translate[1];\n\t  return function(input, i) {\n\t    if (!i) x0 = y0 = 0;\n\t    var j = 2, n = input.length, output = new Array(n);\n\t    output[0] = (x0 += input[0]) * kx + dx;\n\t    output[1] = (y0 += input[1]) * ky + dy;\n\t    while (j < n) output[j] = input[j], ++j;\n\t    return output;\n\t  };\n\t};\n\t\n\tvar bbox = function(topology) {\n\t  var t = transform(topology.transform), key,\n\t      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\t\n\t  function bboxPoint(p) {\n\t    p = t(p);\n\t    if (p[0] < x0) x0 = p[0];\n\t    if (p[0] > x1) x1 = p[0];\n\t    if (p[1] < y0) y0 = p[1];\n\t    if (p[1] > y1) y1 = p[1];\n\t  }\n\t\n\t  function bboxGeometry(o) {\n\t    switch (o.type) {\n\t      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n\t      case \"Point\": bboxPoint(o.coordinates); break;\n\t      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n\t    }\n\t  }\n\t\n\t  topology.arcs.forEach(function(arc) {\n\t    var i = -1, n = arc.length, p;\n\t    while (++i < n) {\n\t      p = t(arc[i], i);\n\t      if (p[0] < x0) x0 = p[0];\n\t      if (p[0] > x1) x1 = p[0];\n\t      if (p[1] < y0) y0 = p[1];\n\t      if (p[1] > y1) y1 = p[1];\n\t    }\n\t  });\n\t\n\t  for (key in topology.objects) {\n\t    bboxGeometry(topology.objects[key]);\n\t  }\n\t\n\t  return [x0, y0, x1, y1];\n\t};\n\t\n\tvar reverse = function(array, n) {\n\t  var t, j = array.length, i = j - n;\n\t  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n\t};\n\t\n\tvar feature = function(topology, o) {\n\t  return o.type === \"GeometryCollection\"\n\t      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature$1(topology, o); })}\n\t      : feature$1(topology, o);\n\t};\n\t\n\tfunction feature$1(topology, o) {\n\t  var id = o.id,\n\t      bbox = o.bbox,\n\t      properties = o.properties == null ? {} : o.properties,\n\t      geometry = object(topology, o);\n\t  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n\t      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n\t      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n\t}\n\t\n\tfunction object(topology, o) {\n\t  var transformPoint = transform(topology.transform),\n\t      arcs = topology.arcs;\n\t\n\t  function arc(i, points) {\n\t    if (points.length) points.pop();\n\t    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n\t      points.push(transformPoint(a[k], k));\n\t    }\n\t    if (i < 0) reverse(points, n);\n\t  }\n\t\n\t  function point(p) {\n\t    return transformPoint(p);\n\t  }\n\t\n\t  function line(arcs) {\n\t    var points = [];\n\t    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n\t    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n\t    return points;\n\t  }\n\t\n\t  function ring(arcs) {\n\t    var points = line(arcs);\n\t    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n\t    return points;\n\t  }\n\t\n\t  function polygon(arcs) {\n\t    return arcs.map(ring);\n\t  }\n\t\n\t  function geometry(o) {\n\t    var type = o.type, coordinates;\n\t    switch (type) {\n\t      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n\t      case \"Point\": coordinates = point(o.coordinates); break;\n\t      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n\t      case \"LineString\": coordinates = line(o.arcs); break;\n\t      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n\t      case \"Polygon\": coordinates = polygon(o.arcs); break;\n\t      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n\t      default: return null;\n\t    }\n\t    return {type: type, coordinates: coordinates};\n\t  }\n\t\n\t  return geometry(o);\n\t}\n\t\n\tvar stitch = function(topology, arcs) {\n\t  var stitchedArcs = {},\n\t      fragmentByStart = {},\n\t      fragmentByEnd = {},\n\t      fragments = [],\n\t      emptyIndex = -1;\n\t\n\t  // Stitch empty arcs first, since they may be subsumed by other arcs.\n\t  arcs.forEach(function(i, j) {\n\t    var arc = topology.arcs[i < 0 ? ~i : i], t;\n\t    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n\t      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n\t    }\n\t  });\n\t\n\t  arcs.forEach(function(i) {\n\t    var e = ends(i),\n\t        start = e[0],\n\t        end = e[1],\n\t        f, g;\n\t\n\t    if (f = fragmentByEnd[start]) {\n\t      delete fragmentByEnd[f.end];\n\t      f.push(i);\n\t      f.end = end;\n\t      if (g = fragmentByStart[end]) {\n\t        delete fragmentByStart[g.start];\n\t        var fg = g === f ? f : f.concat(g);\n\t        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n\t      } else {\n\t        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t      }\n\t    } else if (f = fragmentByStart[end]) {\n\t      delete fragmentByStart[f.start];\n\t      f.unshift(i);\n\t      f.start = start;\n\t      if (g = fragmentByEnd[start]) {\n\t        delete fragmentByEnd[g.end];\n\t        var gf = g === f ? f : g.concat(f);\n\t        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n\t      } else {\n\t        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t      }\n\t    } else {\n\t      f = [i];\n\t      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n\t    }\n\t  });\n\t\n\t  function ends(i) {\n\t    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n\t    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n\t    else p1 = arc[arc.length - 1];\n\t    return i < 0 ? [p1, p0] : [p0, p1];\n\t  }\n\t\n\t  function flush(fragmentByEnd, fragmentByStart) {\n\t    for (var k in fragmentByEnd) {\n\t      var f = fragmentByEnd[k];\n\t      delete fragmentByStart[f.start];\n\t      delete f.start;\n\t      delete f.end;\n\t      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n\t      fragments.push(f);\n\t    }\n\t  }\n\t\n\t  flush(fragmentByEnd, fragmentByStart);\n\t  flush(fragmentByStart, fragmentByEnd);\n\t  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\t\n\t  return fragments;\n\t};\n\t\n\tvar mesh = function(topology) {\n\t  return object(topology, meshArcs.apply(this, arguments));\n\t};\n\t\n\tfunction meshArcs(topology, object$$1, filter) {\n\t  var arcs, i, n;\n\t  if (arguments.length > 1) arcs = extractArcs(topology, object$$1, filter);\n\t  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n\t  return {type: \"MultiLineString\", arcs: stitch(topology, arcs)};\n\t}\n\t\n\tfunction extractArcs(topology, object$$1, filter) {\n\t  var arcs = [],\n\t      geomsByArc = [],\n\t      geom;\n\t\n\t  function extract0(i) {\n\t    var j = i < 0 ? ~i : i;\n\t    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n\t  }\n\t\n\t  function extract1(arcs) {\n\t    arcs.forEach(extract0);\n\t  }\n\t\n\t  function extract2(arcs) {\n\t    arcs.forEach(extract1);\n\t  }\n\t\n\t  function extract3(arcs) {\n\t    arcs.forEach(extract2);\n\t  }\n\t\n\t  function geometry(o) {\n\t    switch (geom = o, o.type) {\n\t      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n\t      case \"LineString\": extract1(o.arcs); break;\n\t      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n\t      case \"MultiPolygon\": extract3(o.arcs); break;\n\t    }\n\t  }\n\t\n\t  geometry(object$$1);\n\t\n\t  geomsByArc.forEach(filter == null\n\t      ? function(geoms) { arcs.push(geoms[0].i); }\n\t      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\t\n\t  return arcs;\n\t}\n\t\n\tfunction planarRingArea(ring) {\n\t  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n\t  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n\t  return Math.abs(area); // Note: doubled area!\n\t}\n\t\n\tvar merge = function(topology) {\n\t  return object(topology, mergeArcs.apply(this, arguments));\n\t};\n\t\n\tfunction mergeArcs(topology, objects) {\n\t  var polygonsByArc = {},\n\t      polygons = [],\n\t      groups = [];\n\t\n\t  objects.forEach(geometry);\n\t\n\t  function geometry(o) {\n\t    switch (o.type) {\n\t      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n\t      case \"Polygon\": extract(o.arcs); break;\n\t      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n\t    }\n\t  }\n\t\n\t  function extract(polygon) {\n\t    polygon.forEach(function(ring) {\n\t      ring.forEach(function(arc) {\n\t        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n\t      });\n\t    });\n\t    polygons.push(polygon);\n\t  }\n\t\n\t  function area(ring) {\n\t    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n\t  }\n\t\n\t  polygons.forEach(function(polygon) {\n\t    if (!polygon._) {\n\t      var group = [],\n\t          neighbors = [polygon];\n\t      polygon._ = 1;\n\t      groups.push(group);\n\t      while (polygon = neighbors.pop()) {\n\t        group.push(polygon);\n\t        polygon.forEach(function(ring) {\n\t          ring.forEach(function(arc) {\n\t            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n\t              if (!polygon._) {\n\t                polygon._ = 1;\n\t                neighbors.push(polygon);\n\t              }\n\t            });\n\t          });\n\t        });\n\t      }\n\t    }\n\t  });\n\t\n\t  polygons.forEach(function(polygon) {\n\t    delete polygon._;\n\t  });\n\t\n\t  return {\n\t    type: \"MultiPolygon\",\n\t    arcs: groups.map(function(polygons) {\n\t      var arcs = [], n;\n\t\n\t      // Extract the exterior (unique) arcs.\n\t      polygons.forEach(function(polygon) {\n\t        polygon.forEach(function(ring) {\n\t          ring.forEach(function(arc) {\n\t            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n\t              arcs.push(arc);\n\t            }\n\t          });\n\t        });\n\t      });\n\t\n\t      // Stitch the arcs into one or more rings.\n\t      arcs = stitch(topology, arcs);\n\t\n\t      // If more than one ring is returned,\n\t      // at most one of these rings can be the exterior;\n\t      // choose the one with the greatest absolute area.\n\t      if ((n = arcs.length) > 1) {\n\t        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n\t          if ((ki = area(arcs[i])) > k) {\n\t            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n\t          }\n\t        }\n\t      }\n\t\n\t      return arcs;\n\t    })\n\t  };\n\t}\n\t\n\tvar bisect = function(a, x) {\n\t  var lo = 0, hi = a.length;\n\t  while (lo < hi) {\n\t    var mid = lo + hi >>> 1;\n\t    if (a[mid] < x) lo = mid + 1;\n\t    else hi = mid;\n\t  }\n\t  return lo;\n\t};\n\t\n\tvar neighbors = function(objects) {\n\t  var indexesByArc = {}, // arc index -> array of object indexes\n\t      neighbors = objects.map(function() { return []; });\n\t\n\t  function line(arcs, i) {\n\t    arcs.forEach(function(a) {\n\t      if (a < 0) a = ~a;\n\t      var o = indexesByArc[a];\n\t      if (o) o.push(i);\n\t      else indexesByArc[a] = [i];\n\t    });\n\t  }\n\t\n\t  function polygon(arcs, i) {\n\t    arcs.forEach(function(arc) { line(arc, i); });\n\t  }\n\t\n\t  function geometry(o, i) {\n\t    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n\t    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n\t  }\n\t\n\t  var geometryType = {\n\t    LineString: line,\n\t    MultiLineString: polygon,\n\t    Polygon: polygon,\n\t    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n\t  };\n\t\n\t  objects.forEach(geometry);\n\t\n\t  for (var i in indexesByArc) {\n\t    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n\t      for (var k = j + 1; k < m; ++k) {\n\t        var ij = indexes[j], ik = indexes[k], n;\n\t        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n\t        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n\t      }\n\t    }\n\t  }\n\t\n\t  return neighbors;\n\t};\n\t\n\tvar untransform = function(transform) {\n\t  if (transform == null) return identity;\n\t  var x0,\n\t      y0,\n\t      kx = transform.scale[0],\n\t      ky = transform.scale[1],\n\t      dx = transform.translate[0],\n\t      dy = transform.translate[1];\n\t  return function(input, i) {\n\t    if (!i) x0 = y0 = 0;\n\t    var j = 2,\n\t        n = input.length,\n\t        output = new Array(n),\n\t        x1 = Math.round((input[0] - dx) / kx),\n\t        y1 = Math.round((input[1] - dy) / ky);\n\t    output[0] = x1 - x0, x0 = x1;\n\t    output[1] = y1 - y0, y0 = y1;\n\t    while (j < n) output[j] = input[j], ++j;\n\t    return output;\n\t  };\n\t};\n\t\n\tvar quantize = function(topology, transform) {\n\t  if (topology.transform) throw new Error(\"already quantized\");\n\t\n\t  if (!transform || !transform.scale) {\n\t    if (!((n = Math.floor(transform)) >= 2)) throw new Error(\"n must be ≥2\");\n\t    box = topology.bbox || bbox(topology);\n\t    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;\n\t    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};\n\t  } else {\n\t    box = topology.bbox;\n\t  }\n\t\n\t  var t = untransform(transform), box, key, inputs = topology.objects, outputs = {};\n\t\n\t  function quantizePoint(point) {\n\t    return t(point);\n\t  }\n\t\n\t  function quantizeGeometry(input) {\n\t    var output;\n\t    switch (input.type) {\n\t      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n\t      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n\t      case \"MultiPoint\": output = {type: \"MultiPoint\", coordinates: input.coordinates.map(quantizePoint)}; break;\n\t      default: return input;\n\t    }\n\t    if (input.id != null) output.id = input.id;\n\t    if (input.bbox != null) output.bbox = input.bbox;\n\t    if (input.properties != null) output.properties = input.properties;\n\t    return output;\n\t  }\n\t\n\t  function quantizeArc(input) {\n\t    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic\n\t    output[0] = t(input[0], 0);\n\t    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points\n\t    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points\n\t    output.length = j;\n\t    return output;\n\t  }\n\t\n\t  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);\n\t\n\t  return {\n\t    type: \"Topology\",\n\t    bbox: box,\n\t    transform: transform,\n\t    objects: outputs,\n\t    arcs: topology.arcs.map(quantizeArc)\n\t  };\n\t};\n\t\n\texports.bbox = bbox;\n\texports.feature = feature;\n\texports.mesh = mesh;\n\texports.meshArcs = meshArcs;\n\texports.merge = merge;\n\texports.mergeArcs = mergeArcs;\n\texports.neighbors = neighbors;\n\texports.quantize = quantize;\n\texports.transform = transform;\n\texports.untransform = untransform;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n\n/***/ 316:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Glamor) {'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _d3Collection = __webpack_require__(62);\n\t\n\tvar _constants = __webpack_require__(16);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar ClusterSelector = function (_React$Component) {\n\t  _inherits(ClusterSelector, _React$Component);\n\t\n\t  function ClusterSelector() {\n\t    _classCallCheck(this, ClusterSelector);\n\t\n\t    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n\t  }\n\t\n\t  ClusterSelector.prototype.render = function render() {\n\t    var _this2 = this;\n\t\n\t    var _props = this.props,\n\t        whisky = _props.whisky,\n\t        selectedcluster = _props.selectedcluster;\n\t\n\t    var clusters = (0, _d3Collection.map)(whisky, function (d) {\n\t      return d.cluster;\n\t    }).keys().sort();\n\t    var labels = [this.props.allstring].concat(clusters);\n\t    var buttons = labels.map(function (d, i) {\n\t      var fill = selectedcluster === d ? _constants2.default.lightred : _constants2.default.darkred;\n\t      return Glamor.createElement(\n\t        'button',\n\t        {\n\t          key: 'button' + i,\n\t          css: {\n\t            width: 100 / labels.length + '%',\n\t            padding: 0,\n\t            fontSize: 12,\n\t            backgroundColor: fill\n\t          },\n\t          onClick: function onClick(e) {\n\t            return _this2.props.onUpdate(d);\n\t          }\n\t        },\n\t        d\n\t      );\n\t    });\n\t    return Glamor.createElement(\n\t      'div',\n\t      { className: 'containerrow' },\n\t      Glamor.createElement(\n\t        'div',\n\t        { className: 'content'\n\t        },\n\t        buttons\n\t      )\n\t    );\n\t  };\n\t\n\t  return ClusterSelector;\n\t}(_react2.default.Component);\n\t\n\texports.default = ClusterSelector;\n\tmodule.exports = exports['default'];\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ }),\n\n/***/ 317:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Glamor) {'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _React = __webpack_require__(295);\n\t\n\tvar _React2 = _interopRequireDefault(_React);\n\t\n\tvar _reactDom = __webpack_require__(154);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _components = __webpack_require__(10);\n\t\n\tvar _constants = __webpack_require__(16);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tvar _Radial = __webpack_require__(183);\n\t\n\tvar _Radial2 = _interopRequireDefault(_Radial);\n\t\n\tvar _Map = __webpack_require__(182);\n\t\n\tvar _Map2 = _interopRequireDefault(_Map);\n\t\n\tvar _clustertext = __webpack_require__(559);\n\t\n\tvar _clustertext2 = _interopRequireDefault(_clustertext);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar ResponsiveMap = function (_React$Component) {\n\t  _inherits(ResponsiveMap, _React$Component);\n\t\n\t  function ResponsiveMap(props) {\n\t    _classCallCheck(this, ResponsiveMap);\n\t\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\t\n\t    _this.state = {\n\t      width: _this.props.width,\n\t      height: _this.props.height,\n\t      scalemultiplier: 1\n\t    };\n\t    _this.handleResize = _this.handleResize.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  ResponsiveMap.prototype.handleResize = function handleResize(e) {\n\t    var elem = _reactDom2.default.findDOMNode(this);\n\t    var width = elem.getBoundingClientRect().width;\n\t    // height should always be in proportion with the width\n\t    var height = width * 1.3;\n\t    // need to make the scale smaller as the width gets smaller, diverging from\n\t    // the base width of 594\n\t    var scalemultiplier = width / 594;\n\t    this.setState({\n\t      width: width,\n\t      height: height,\n\t      scalemultiplier: scalemultiplier\n\t    });\n\t  };\n\t\n\t  ResponsiveMap.prototype.componentDidMount = function componentDidMount() {\n\t    // put an event handler on\n\t    window.addEventListener('resize', this.handleResize);\n\t    this.handleResize();\n\t  };\n\t\n\t  ResponsiveMap.prototype.componentWillUnmount = function componentWillUnmount() {\n\t    window.removeEventListener('resize', this.handleResize);\n\t  };\n\t\n\t  ResponsiveMap.prototype.render = function render() {\n\t    return Glamor.createElement(\n\t      'div',\n\t      { className: 'content' },\n\t      Glamor.createElement(_Map2.default, {\n\t        width: this.state.width,\n\t        height: this.state.height,\n\t        whisky: this.props.whisky,\n\t\n\t        selectedColour: this.props.selectedColour,\n\t        landfill: this.props.landfill,\n\t        seafill: this.props.seafill,\n\t        riverColour: this.props.riverColour,\n\t        unselectedColour: this.props.unselectedColour,\n\t        disabledColour: this.props.disabledColour,\n\t\n\t        onHover: this.props.onHover,\n\t        selected: this.props.selected,\n\t        cluster: this.props.cluster,\n\t        colourcluster: this.props.colourcluster,\n\t\n\t        rotate0: this.props.rotate0,\n\t        rotate1: this.props.rotate1,\n\t        spey: this.props.spey,\n\t\n\t        scale: this.props.scale * this.state.scalemultiplier\n\t      })\n\t    );\n\t  };\n\t\n\t  return ResponsiveMap;\n\t}(_React2.default.Component);\n\t\n\tvar ResponsiveRadial = function (_React$Component2) {\n\t  _inherits(ResponsiveRadial, _React$Component2);\n\t\n\t  function ResponsiveRadial(props) {\n\t    _classCallCheck(this, ResponsiveRadial);\n\t\n\t    var _this2 = _possibleConstructorReturn(this, _React$Component2.call(this, props));\n\t\n\t    _this2.state = {\n\t      width: _this2.props.width,\n\t      height: _this2.props.height\n\t    };\n\t    _this2.handleResize = _this2.handleResize.bind(_this2);\n\t    return _this2;\n\t  }\n\t\n\t  ResponsiveRadial.prototype.handleResize = function handleResize(e) {\n\t    var elem = _reactDom2.default.findDOMNode(this);\n\t    var width = elem.getBoundingClientRect().width;\n\t    // height should always be in proportion with the width\n\t    var height = width;\n\t    this.setState({\n\t      width: width,\n\t      height: height\n\t    });\n\t  };\n\t\n\t  ResponsiveRadial.prototype.componentDidMount = function componentDidMount() {\n\t    window.addEventListener('resize', this.handleResize);\n\t    this.handleResize();\n\t  };\n\t\n\t  ResponsiveRadial.prototype.componentWillUnmount = function componentWillUnmount() {\n\t    window.removeEventListener('resize', this.handleResize);\n\t  };\n\t\n\t  ResponsiveRadial.prototype.render = function render() {\n\t    return Glamor.createElement(\n\t      'div',\n\t      null,\n\t      Glamor.createElement(_Radial2.default, {\n\t        whisky: this.props.whisky,\n\t        selected: this.props.selected,\n\t        radialFill: this.props.radialFill,\n\t        radialOverall: this.props.radialOverall,\n\t        width: this.state.width,\n\t        height: this.state.height\n\t      })\n\t    );\n\t  };\n\t\n\t  return ResponsiveRadial;\n\t}(_React2.default.Component);\n\t\n\tvar FormattedOverview = function (_React$Component3) {\n\t  _inherits(FormattedOverview, _React$Component3);\n\t\n\t  function FormattedOverview(props) {\n\t    _classCallCheck(this, FormattedOverview);\n\t\n\t    var _this3 = _possibleConstructorReturn(this, _React$Component3.call(this, props));\n\t\n\t    _this3.state = {\n\t      rotate0: _this3.props.rotate0,\n\t      rotate1: _this3.props.rotate1,\n\t      scale: _this3.props.scale,\n\t      spey: _this3.props.spey,\n\t      zoomlevel: _this3.props.zoomlevel ? _this3.props.zoomlevel : 'scotland'\n\t    };\n\t    _this3.zoomOut = _this3.zoomOut.bind(_this3);\n\t    _this3.zoomSpey = _this3.zoomSpey.bind(_this3);\n\t    _this3.zoomIslay = _this3.zoomIslay.bind(_this3);\n\t    _this3.zoomDeepSpey = _this3.zoomDeepSpey.bind(_this3);\n\t    return _this3;\n\t  }\n\t\n\t  FormattedOverview.prototype.zoomSpey = function zoomSpey(e) {\n\t    this.setState({\n\t      rotate0: 3.93,\n\t      rotate1: 0.5,\n\t      scale: 24800,\n\t      spey: true,\n\t      zoomlevel: 'spey'\n\t    });\n\t  };\n\t\n\t  FormattedOverview.prototype.zoomDeepSpey = function zoomDeepSpey(e) {\n\t    this.setState({\n\t      rotate0: 3.3,\n\t      rotate1: 0.29,\n\t      scale: 100000,\n\t      spey: true,\n\t      zoomlevel: 'deepspey'\n\t    });\n\t  };\n\t\n\t  FormattedOverview.prototype.zoomIslay = function zoomIslay(e) {\n\t    this.setState({\n\t      rotate0: 6.25,\n\t      rotate1: 1.92,\n\t      scale: 57400,\n\t      spey: false,\n\t      zoomlevel: 'islay'\n\t    });\n\t  };\n\t\n\t  FormattedOverview.prototype.zoomOut = function zoomOut(e) {\n\t    this.setState({\n\t      rotate0: 4.4,\n\t      rotate1: 0,\n\t      scale: 7000,\n\t      spey: false,\n\t      zoomlevel: 'scotland'\n\t    });\n\t  };\n\t\n\t  FormattedOverview.prototype.getzoomcontrols = function getzoomcontrols() {\n\t    return Glamor.createElement(\n\t      'div',\n\t      null,\n\t      Glamor.createElement(\n\t        'button',\n\t        {\n\t          css: {\n\t            width: '100%',\n\t            marginBottom: '1px',\n\t            backgroundColor: this.state.zoomlevel === 'scotland' ? _constants2.default.lightblue : _constants2.default.darkblue\n\t          },\n\t          onClick: this.zoomOut },\n\t        'Scotland'\n\t      ),\n\t      Glamor.createElement('br', null),\n\t      Glamor.createElement(\n\t        'button',\n\t        {\n\t          css: {\n\t            width: '100%',\n\t            marginBottom: '1px',\n\t            backgroundColor: this.state.zoomlevel === 'islay' ? _constants2.default.lightblue : _constants2.default.darkblue\n\t          },\n\t          onClick: this.zoomIslay },\n\t        'Islay'\n\t      ),\n\t      Glamor.createElement('br', null),\n\t      Glamor.createElement(\n\t        'button',\n\t        {\n\t          css: {\n\t            width: '100%',\n\t            marginBottom: '1px',\n\t            backgroundColor: this.state.zoomlevel === 'spey' ? _constants2.default.lightblue : _constants2.default.darkblue\n\t          },\n\t          onClick: this.zoomSpey },\n\t        'Speyside'\n\t      ),\n\t      Glamor.createElement('br', null),\n\t      Glamor.createElement(\n\t        'button',\n\t        {\n\t          css: {\n\t            width: '100%',\n\t            marginBottom: '1px',\n\t            backgroundColor: this.state.zoomlevel === 'deepspey' ? _constants2.default.lightblue : _constants2.default.darkblue\n\t          },\n\t          onClick: this.zoomDeepSpey },\n\t        'Closer view Speyside'\n\t      ),\n\t      Glamor.createElement('br', null)\n\t    );\n\t  };\n\t\n\t  FormattedOverview.prototype.getoverview = function getoverview() {\n\t    var selectedclusterobject = _clustertext2.default[this.props.clusterselected];\n\t    var selectedclustertext = selectedclusterobject.desc;\n\t    var clustername = selectedclusterobject.name ? Glamor.createElement(\n\t      'h4',\n\t      null,\n\t      selectedclusterobject.name\n\t    ) : null;\n\t    return Glamor.createElement(\n\t      'div',\n\t      { className: 'containerrow' },\n\t      Glamor.createElement(\n\t        'div',\n\t        { className: 'content' },\n\t        Glamor.createElement(_Radial2.default, {\n\t          whisky: this.props.whisky,\n\t          cluster: this.props.cluster,\n\t          radialFill: 'tan',\n\t          radialOverall: this.props.radialOverall,\n\t          width: 300,\n\t          height: 300\n\t        })\n\t      ),\n\t      Glamor.createElement(\n\t        'div',\n\t        { className: 'note' },\n\t        clustername,\n\t        Glamor.createElement(\n\t          'p',\n\t          null,\n\t          selectedclustertext\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  FormattedOverview.prototype.getwhiskyselectorcontrol = function getwhiskyselectorcontrol() {\n\t    var _this4 = this;\n\t\n\t    var options = this.props.whisky.map(function (d, i) {\n\t      return Glamor.createElement(\n\t        'option',\n\t        {\n\t          key: 'whiskyselectorcontroloptionid' + i,\n\t          value: d.RowID\n\t        },\n\t        d.formatname\n\t      );\n\t    });\n\t    return Glamor.createElement(\n\t      'select',\n\t      {\n\t        value: this.props.selected ? this.props.selected.RowID : '---',\n\t        onChange: function onChange(e) {\n\t          var selected = _this4.props.whisky.filter(function (d) {\n\t            return d.RowID === e.target.value;\n\t          })[0];\n\t          _this4.props.onHover(selected);\n\t        }\n\t      },\n\t      options\n\t    );\n\t  };\n\t\n\t  FormattedOverview.prototype.getclustermembership = function getclustermembership() {\n\t    if (this.props.colourcluster) {\n\t      if (this.props.selected) {\n\t        return Glamor.createElement(\n\t          'h4',\n\t          null,\n\t          'Group: ',\n\t          this.props.selected.cluster,\n\t          ', ',\n\t          _clustertext2.default[this.props.selected.cluster].name\n\t        );\n\t      } else {\n\t        return Glamor.createElement(\n\t          'h4',\n\t          null,\n\t          'Group: '\n\t        );\n\t      }\n\t    }\n\t  };\n\t\n\t  FormattedOverview.prototype.render = function render() {\n\t    var zoomcontrols = this.getzoomcontrols();\n\t    var overview = this.props.clusteroverview ? this.getoverview() : null;\n\t    var whiskyselectorcontrol = this.getwhiskyselectorcontrol();\n\t    var clustermembership = this.getclustermembership();\n\t\n\t    return Glamor.createElement(\n\t      'div',\n\t      null,\n\t      overview,\n\t      Glamor.createElement(\n\t        'div',\n\t        { className: 'containerrow',\n\t          css: {\n\t            paddingBottom: 0\n\t          }\n\t        },\n\t        Glamor.createElement(\n\t          'div',\n\t          { className: 'note' },\n\t          Glamor.createElement(\n\t            'h4',\n\t            null,\n\t            this.props.selected ? 'Distillery: ' + this.props.selected.formatname : 'Distillery:'\n\t          ),\n\t          Glamor.createElement(\n\t            'h4',\n\t            null,\n\t            this.props.selected ? 'Postcode: ' + this.props.selected.Postcode : 'Postcode:'\n\t          ),\n\t          clustermembership,\n\t          this.props.nooverview ? null : Glamor.createElement(ResponsiveRadial, {\n\t            whisky: this.props.whisky,\n\t            selected: this.props.selected,\n\t            radialFill: this.props.radialFill,\n\t            radialOverall: this.props.radialOverall,\n\t            width: 300,\n\t            height: 300\n\t          }),\n\t          this.props.controls ? zoomcontrols : null,\n\t          this.props.controls ? whiskyselectorcontrol : null\n\t        ),\n\t        Glamor.createElement(ResponsiveMap, {\n\t          width: 594,\n\t          height: 770,\n\t          whisky: this.props.whisky,\n\t\n\t          selectedColour: this.props.selectedColour,\n\t          landfill: this.props.landfill,\n\t          seafill: this.props.seafill,\n\t          riverColour: this.props.riverColour,\n\t          unselectedColour: this.props.unselectedColour,\n\t          disabledColour: this.props.disabledColour,\n\t\n\t          onHover: this.props.onHover,\n\t          selected: this.props.selected,\n\t          cluster: this.props.cluster,\n\t          colourcluster: this.props.colourcluster,\n\t\n\t          rotate0: this.state.rotate0,\n\t          rotate1: this.state.rotate1,\n\t          scale: this.state.scale,\n\t          spey: this.state.spey\n\t        })\n\t      )\n\t    );\n\t  };\n\t\n\t  return FormattedOverview;\n\t}(_React2.default.Component);\n\t\n\texports.default = FormattedOverview;\n\tmodule.exports = exports['default'];\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ }),\n\n/***/ 182:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Glamor) {'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _d3Array = __webpack_require__(29);\n\t\n\tvar _d3Collection = __webpack_require__(62);\n\t\n\tvar _d3Scale = __webpack_require__(63);\n\t\n\tvar _d3Color = __webpack_require__(33);\n\t\n\tvar _d3Geo = __webpack_require__(416);\n\t\n\tvar _topojsonClient = __webpack_require__(943);\n\t\n\tvar topojson = _interopRequireWildcard(_topojsonClient);\n\t\n\tvar _geo = __webpack_require__(560);\n\t\n\tvar _geo2 = _interopRequireDefault(_geo);\n\t\n\tvar _rivers = __webpack_require__(561);\n\t\n\tvar _rivers2 = _interopRequireDefault(_rivers);\n\t\n\tvar _d3ScaleChromatic = __webpack_require__(418);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Scotland = function (_Component) {\n\t  _inherits(Scotland, _Component);\n\t\n\t  function Scotland() {\n\t    _classCallCheck(this, Scotland);\n\t\n\t    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t  }\n\t\n\t  Scotland.prototype.render = function render() {\n\t    var _this2 = this;\n\t\n\t    var projection = this.props.proj;\n\t    var pathGenerator = (0, _d3Geo.geoPath)().projection(projection);\n\t    var features = topojson.feature(_geo2.default, _geo2.default.objects.tracts).features;\n\t    var riverfeatures = topojson.feature(_rivers2.default, _rivers2.default.objects.tracts).features;\n\t    var coast = features.map(function (d, i) {\n\t      return Glamor.createElement('path', {\n\t        className: 'scotland',\n\t        key: 'path' + i,\n\t        d: pathGenerator(d),\n\t        fill: _this2.props.landfill,\n\t        stroke: 'none'\n\t      });\n\t    });\n\t    var riverpath = null;\n\t    if (this.props.spey) {\n\t      riverpath = riverfeatures.map(function (d, i) {\n\t        return Glamor.createElement('path', {\n\t          className: 'river',\n\t          key: 'riverpath' + i,\n\t          d: pathGenerator(d),\n\t          stroke: _this2.props.riverColour,\n\t          fill: 'none'\n\t        });\n\t      });\n\t    }\n\t    return Glamor.createElement(\n\t      'g',\n\t      null,\n\t      coast,\n\t      riverpath\n\t    );\n\t  };\n\t\n\t  return Scotland;\n\t}(_react.Component);\n\t\n\tvar Distileries = function (_Component2) {\n\t  _inherits(Distileries, _Component2);\n\t\n\t  function Distileries() {\n\t    _classCallCheck(this, Distileries);\n\t\n\t    return _possibleConstructorReturn(this, _Component2.apply(this, arguments));\n\t  }\n\t\n\t  Distileries.prototype.render = function render() {\n\t    var _this4 = this;\n\t\n\t    var calcpointfill = function calcpointfill(point, selectedRow) {\n\t      var _props = _this4.props,\n\t          selectedColour = _props.selectedColour,\n\t          unselectedColour = _props.unselectedColour,\n\t          disabledColour = _props.disabledColour;\n\t\n\t      var colourScaleColour = _this4.props.colourscale(point.cluster);\n\t      var selectedCSColour = (0, _d3Color.cubehelix)(colourScaleColour);\n\t      selectedCSColour.l = (0, _d3Array.max)([0.85, selectedCSColour.l]);\n\t      // find out if this cluster should be enabled or not.\n\t      if (_this4.props.cluster) {\n\t        // if we're only highlighting a specific cluster\n\t        if (_this4.props.cluster === point.cluster) {\n\t          // this should be the selected point\n\t          return point.RowID === selectedRow ? selectedCSColour : colourScaleColour;\n\t        } else {\n\t          // this point should be disabled\n\t          return disabledColour;\n\t        }\n\t      }\n\t      if (_this4.props.colourcluster) {\n\t        // we're colouring points by the cluster\n\t        return point.RowID === selectedRow ? selectedCSColour : colourScaleColour;\n\t      }\n\t      return point.RowID === selectedRow ? selectedColour : unselectedColour;\n\t    };\n\t    var whiskyProcessed = this.props.whisky.map(function (d) {\n\t      var p = [d.long, d.lat];\n\t      var projected = _this4.props.proj(p);\n\t      d['x'] = projected[0];\n\t      d['y'] = projected[1];\n\t      return d;\n\t    });\n\t    var selectedRow = this.props.selected ? this.props.selected.RowID : null;\n\t    var enabled = function enabled(point) {\n\t      return _this4.props.cluster ? _this4.props.cluster === point.cluster : true;\n\t    };\n\t    var points = whiskyProcessed.map(function (d, i) {\n\t      return Glamor.createElement('circle', {\n\t        stroke: 'white',\n\t        strokeWidth: 0.5,\n\t        key: 'distillery' + i,\n\t        cx: d.x,\n\t        cy: d.y,\n\t        r: Math.pow(_this4.props.scale / 7000, 1 / 9) * 3,\n\t        onMouseEnter: enabled(d) ? function () {\n\t          _this4.props.onHover(d);\n\t        } : null,\n\t        fill: calcpointfill(d, selectedRow),\n\t        className: enabled(d) ? 'enabled' : 'disabled'\n\t      });\n\t    });\n\t    points = points.sort(function (a, b) {\n\t      if (a.props.className === b.props.className) {\n\t        return 0;\n\t      }\n\t      if (a.props.className === 'disabled') {\n\t        return -1;\n\t      }\n\t      if (b.props.className === 'disabled') {\n\t        return 1;\n\t      }\n\t      return a > b;\n\t    });\n\t    return Glamor.createElement(\n\t      'g',\n\t      null,\n\t      points\n\t    );\n\t  };\n\t\n\t  return Distileries;\n\t}(_react.Component);\n\t\n\tvar Map = function (_Component3) {\n\t  _inherits(Map, _Component3);\n\t\n\t  function Map() {\n\t    _classCallCheck(this, Map);\n\t\n\t    return _possibleConstructorReturn(this, _Component3.apply(this, arguments));\n\t  }\n\t\n\t  Map.prototype.render = function render() {\n\t    var _this6 = this;\n\t\n\t    var disabledColour = this.props.disabledColour;\n\t    var center0 = this.props.center0 ? this.props.center0 : 0;\n\t    var center1 = this.props.center1 ? this.props.center1 : 57.8;\n\t    var rotate0 = this.props.rotate0 ? this.props.rotate0 : 4.4;\n\t    var rotate1 = this.props.rotate1 ? this.props.rotate1 : 0;\n\t    var scale = this.props.scale ? this.props.scale : 7000;\n\t    var clusters = (0, _d3Collection.map)(this.props.whisky, function (d) {\n\t      return d.cluster;\n\t    }).keys().sort();\n\t    var colourscale = (0, _d3Scale.scaleOrdinal)(_d3ScaleChromatic.schemeSet2, clusters.length).domain(clusters);\n\t\n\t    var legendpoints = clusters.map(function (d, i) {\n\t      var fill = colourscale(d);\n\t      if (_this6.props.cluster && _this6.props.cluster !== d) {\n\t        fill = disabledColour;\n\t      }\n\t      return Glamor.createElement(\n\t        'g',\n\t        {\n\t          key: 'legendpoint' + i,\n\t          transform: 'translate (30 ' + i * 20 + ')' },\n\t        Glamor.createElement('circle', {\n\t          cx: -10,\n\t          cy: -5,\n\t          r: 5,\n\t          fill: fill\n\t        }),\n\t        Glamor.createElement(\n\t          'text',\n\t          null,\n\t          'group ' + d\n\t        )\n\t      );\n\t    });\n\t\n\t    var legend = this.props.colourcluster || this.props.cluster ? Glamor.createElement(\n\t      'g',\n\t      {\n\t        transform: 'translate(0 30)'\n\t      },\n\t      legendpoints\n\t    ) : null;\n\t\n\t    this.proj = (0, _d3Geo.geoAlbers)().center([center0, center1]).rotate([rotate0, rotate1]).parallels([50, 60]).scale(scale).translate([this.props.width / 2, this.props.height / 2]);\n\t\n\t    return Glamor.createElement(\n\t      'div',\n\t      { className: 'map' },\n\t      Glamor.createElement(\n\t        'svg',\n\t        {\n\t          ref: function ref(node) {\n\t            return _this6.node = node;\n\t          },\n\t          className: 'map',\n\t          width: this.props.width,\n\t          height: this.props.height,\n\t          style: {\n\t            backgroundColor: '' + this.props.seafill\n\t          }\n\t        },\n\t        Glamor.createElement(\n\t          'g',\n\t          null,\n\t          Glamor.createElement(Scotland, {\n\t            landfill: this.props.landfill,\n\t            spey: this.props.spey,\n\t            riverColour: this.props.riverColour,\n\t            proj: this.proj\n\t          }),\n\t          Glamor.createElement(Distileries, {\n\t            selectedColour: this.props.selectedColour,\n\t            unselectedColour: this.props.unselectedColour,\n\t            disabledColour: this.props.disabledColour,\n\t            cluster: this.props.cluster,\n\t            colourcluster: this.props.colourcluster,\n\t            whisky: this.props.whisky,\n\t            selected: this.props.selected,\n\t            proj: this.proj,\n\t            onHover: function onHover(d) {\n\t              return _this6.props.onHover(d);\n\t            },\n\t            colourscale: colourscale,\n\t            scale: scale\n\t          })\n\t        ),\n\t        legend\n\t      )\n\t    );\n\t  };\n\t\n\t  return Map;\n\t}(_react.Component);\n\t\n\texports.default = Map;\n\tmodule.exports = exports['default'];\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ }),\n\n/***/ 183:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Glamor) {'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _d3Scale = __webpack_require__(63);\n\t\n\tvar _d3Array = __webpack_require__(29);\n\t\n\tvar _d3Shape = __webpack_require__(419);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar SCALEORDER = [\"Body\", \"Tobacco\", \"Medicinal\", \"Smoky\", \"Spicy\", \"Fruity\", \"Floral\", \"Nutty\", \"Malty\", \"Honey\", \"Sweetness\", \"Winey\"];\n\t\n\tvar Radial = function (_React$Component) {\n\t  _inherits(Radial, _React$Component);\n\t\n\t  function Radial(props) {\n\t    _classCallCheck(this, Radial);\n\t\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\t\n\t    _this.middle = 25;\n\t    _this.calculatescales();\n\t    _this.bottomPad = 10;\n\t    return _this;\n\t  }\n\t\n\t  Radial.prototype.calculatescales = function calculatescales() {\n\t    var _this2 = this;\n\t\n\t    var scalelength = this.props.width / 2;\n\t    this.heightscales = {};\n\t    SCALEORDER.map(function (d) {\n\t      var dimensionValues = _this2.props.whisky.map(function (w) {\n\t        return w[d];\n\t      });\n\t      _this2.heightscales[d] = (0, _d3Scale.scaleLinear)().domain([0, (0, _d3Array.max)(dimensionValues)]).range([_this2.middle * 2, scalelength]);\n\t    });\n\t\n\t    this.anglescale = (0, _d3Scale.scaleBand)().domain(SCALEORDER).paddingInner(0.1).range([-Math.PI / 2, Math.PI / 2]);\n\t  };\n\t\n\t  Radial.prototype.componentWillReceiveProps = function componentWillReceiveProps() {\n\t    this.calculatescales();\n\t  };\n\t\n\t  Radial.prototype.calcpoints = function calcpoints() {\n\t    var _this3 = this;\n\t\n\t    var selected = this.props.selected;\n\t    var points = SCALEORDER.map(function (d, i) {\n\t      var phi = _this3.anglescale(d);\n\t      var value = selected ? selected[d] ? selected[d] : 0 : 0;\n\t      var r = _this3.heightscales[d](value);\n\t      var markerarc = (0, _d3Shape.arc)().innerRadius(_this3.heightscales[d](0)).outerRadius(r).startAngle(phi).endAngle(phi + _this3.anglescale.bandwidth());\n\t\n\t      return Glamor.createElement('path', {\n\t        key: 'arc' + i,\n\t        className: 'radial',\n\t        d: markerarc(),\n\t        fill: _this3.props.radialFill\n\t      });\n\t    });\n\t    return points;\n\t  };\n\t\n\t  Radial.prototype.calclabels = function calclabels() {\n\t    var _this4 = this;\n\t\n\t    return SCALEORDER.map(function (d, i) {\n\t      var phi = _this4.anglescale(d) + _this4.anglescale.bandwidth() / 2;\n\t      var r = _this4.heightscales[d](0) + 1;\n\t      var x = r * Math.sin(phi);\n\t      // remember that down is positive in svg space\n\t      var y = -r * Math.cos(phi);\n\t\n\t      var textanglerotate = function textanglerotate(theta) {\n\t        if (theta > 0) {\n\t          return -90 + theta * (180 / Math.PI);\n\t        } else {\n\t          return 90 + theta * (180 / Math.PI);\n\t        }\n\t      };\n\t\n\t      var textanchor = phi > 0 ? 'start' : 'end';\n\t      return Glamor.createElement(\n\t        'text',\n\t        {\n\t          key: 'label' + i,\n\t          textAnchor: textanchor,\n\t          dy: '0.5em',\n\t          transform: 'translate(' + x + ', ' + y + ')rotate(' + textanglerotate(phi) + ')',\n\t          fontSize: 8,\n\t          className: 'radiallabel',\n\t          fill: 'black'\n\t        },\n\t        d\n\t      );\n\t    });\n\t  };\n\t\n\t  Radial.prototype.averagewhisky = function averagewhisky() {\n\t    var _this5 = this;\n\t\n\t    // going to put two sets of markers on this radial chart to show\n\t    // the average value of this cluster, and also the average value\n\t    // of the average whisky\n\t    var whisky = this.props.whisky;\n\t\n\t    var markers = SCALEORDER.map(function (d, i) {\n\t      var overallvalue = (0, _d3Array.mean)(whisky.map(function (k) {\n\t        return k[d];\n\t      }));\n\t      var clustervalue = (0, _d3Array.mean)(whisky.map(function (k) {\n\t        return k.cluster === _this5.props.cluster ? k[d] : null;\n\t      }));\n\t\n\t      var phi = _this5.anglescale(d);\n\t      var zeroval = _this5.heightscales[d](0);\n\t      // first make the overall marker\n\t      var overallr = overallvalue ? _this5.heightscales[d](overallvalue) : 0;\n\t      var overallarc = (0, _d3Shape.arc)().innerRadius(zeroval).outerRadius(overallr).startAngle(phi).endAngle(phi + _this5.anglescale.bandwidth());\n\t\n\t      // now make the marker for the cluster\n\t      var clusterr = (0, _d3Array.max)([clustervalue ? _this5.heightscales[d](clustervalue) : 0, zeroval]);\n\t\n\t      var clusterarc = (0, _d3Shape.arc)().innerRadius(zeroval).outerRadius(clusterr).startAngle(phi).endAngle(phi + _this5.anglescale.bandwidth());\n\t\n\t      return Glamor.createElement(\n\t        'g',\n\t        {\n\t          key: 'overallarc' + i\n\t        },\n\t        Glamor.createElement('path', {\n\t          className: 'radialcluster',\n\t          d: clusterarc(),\n\t          fill: _this5.props.radialFill\n\t        }),\n\t        Glamor.createElement('path', {\n\t          className: 'radialoverall',\n\t          d: overallarc(),\n\t          fill: 'none',\n\t          stroke: _this5.props.radialOverall\n\t        })\n\t      );\n\t    });\n\t    return markers;\n\t  };\n\t\n\t  Radial.prototype.render = function render() {\n\t    var points = this.props.selected ? this.calcpoints() : null;\n\t    var averagewhisky = this.props.cluster !== null ? this.averagewhisky() : null;\n\t    var labels = this.calclabels();\n\t    return Glamor.createElement(\n\t      'svg',\n\t      {\n\t        width: this.props.width,\n\t        height: this.props.height,\n\t        className: 'radial'\n\t      },\n\t      Glamor.createElement(\n\t        'g',\n\t        { transform: 'translate(' + this.props.width / 2 + ' ' + (this.props.height - this.bottomPad) + ')' },\n\t        points,\n\t        averagewhisky,\n\t        labels\n\t      )\n\t    );\n\t  };\n\t\n\t  return Radial;\n\t}(_react2.default.Component);\n\t\n\texports.default = Radial;\n\tmodule.exports = exports['default'];\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ }),\n\n/***/ 559:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"0\":{\"desc\":\"This group contains the sweetest whiskies. With the exception of the Isle of Arran, all are in Speyside. Tend to have lower scores in other areas, could be quite mellow.\",\"name\":\"Light, sweet\"},\"1\":{\"desc\":\"Not medicinal, but some bigger scores in the other categories. A lot of variation in this group.\",\"name\":\"Rich, malty, nutty\"},\"2\":{\"desc\":\"The thing that stands out about this group is a medicinal flavour. This is thought to be to do with iodine in the sea air. All these distilleries are coastal. Fairly relaxed in the other flavours\",\"name\":\"Maritime, mellow\"},\"3\":{\"desc\":\"Get lower scores on the body, winey characteristics. Have a few of the other flavours hidden in there. Mainly Speyside, but interesting to see Bunnahabhain from Islay in there.\",\"name\":\"Subtle\"},\"4\":{\"desc\":\"These have a strong body, and lots of winey flavours. Mainly from Speyside. Winey might be because of the use of sherry casks when maturing these whiskies.\",\"name\":\"Strong, winey\"},\"5\":{\"desc\":\"These are big, smoky, medicinal whiskies. These come from costal distilleries. Similar to group 2, but with more oomph.\",\"name\":\"Maritime, strong\"},\"6\":{\"desc\":\"Not much honey or winey flavours in this group. You can find more fruit and spice.\",\"name\":\"Fruits and spice\"},\"7\":{\"desc\":\"These two distilleries on Islay are right next to each other. They get very similar scores, very full of flavour\",\"name\":\"South Islay\"},\"8\":{\"desc\":\"Less sweet than group 0, which is the sweetest group, but still sweeter than average. Honey, fruity, floral.\",\"name\":\"Rich, sweet\"},\"All\":{\"desc\":\"Select a group here to show more information about the group. Explore the distilleries on the map below.\",\"name\":false}}\n\n/***/ }),\n\n/***/ 560:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"type\":\"Topology\",\"bbox\":[-13.691390037536621,49.86541748046869,1.7641680240631672,61.52708435058605],\"transform\":{\"scale\":[0.00015455712618725974,0.00011661783487952238],\"translate\":[-13.691390037536621,49.86541748046869]},\"objects\":{\"tracts\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"MultiPolygon\",\"arcs\":[[[0]],[[1]],[[2]],[[3]],[[4]],[[5]],[[6]],[[7]],[[8]],[[9]],[[10]],[[11]],[[12]],[[13]],[[14]],[[15]],[[16]],[[17]],[[18]],[[19]],[[20]],[[21]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]],[[28]],[[29]],[[30]],[[31]],[[32]],[[33]],[[34]],[[35]],[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]],[[44]],[[45]],[[46]],[[47]],[[48]],[[49]],[[50]],[[51]],[[52]],[[53]],[[54]],[[55]],[[56]],[[57]],[[58]],[[59]],[[60]],[[61]],[[62]],[[63]],[[64]],[[65]],[[66]],[[67]],[[68]],[[69]],[[70]],[[71]],[[72]],[[73]],[[74]],[[75]],[[76]],[[77]],[[78]],[[79]],[[80]],[[81]],[[82]],[[83]],[[84]],[[85]],[[86]],[[87]],[[88]],[[89]],[[90]],[[91]],[[92]],[[93]],[[94]],[[95]],[[96]],[[97]],[[98]],[[99]],[[100]],[[101]],[[102]],[[103]],[[104]],[[105]],[[106]],[[107]],[[108]],[[109]],[[110]],[[111]],[[112]],[[113]],[[114]],[[115]],[[116]],[[117]],[[118]],[[119]],[[120]],[[121]],[[122]],[[123]],[[124]],[[125]],[[126]],[[127]],[[128]],[[129]],[[130]],[[131]],[[132]],[[133]],[[134]],[[135]],[[136]],[[137]],[[138]],[[139]],[[140]],[[141]],[[142]],[[143]],[[144]],[[145]],[[146]],[[147]],[[148]],[[149]],[[150]],[[151]],[[152]],[[153]],[[154]],[[155]],[[156]],[[157]],[[158]],[[159]],[[160]],[[161]],[[162]],[[163]],[[164]],[[165]],[[166]],[[167]],[[168]],[[169]],[[170]],[[171]],[[172]],[[173]],[[174]],[[175]],[[176]],[[177]],[[178]],[[179]],[[180]],[[181]],[[182]],[[183]],[[184]],[[185]],[[186]],[[187]],[[188]],[[189]],[[190]],[[191]],[[192]],[[193]],[[194]],[[195]],[[196]],[[197]],[[198]],[[199]],[[200]],[[201]],[[202]],[[203]],[[204]],[[205]]],\"properties\":{\"ID_0\":242,\"ISO\":\"GBR\",\"NAME_0\":\"United Kingdom\",\"OBJECTID_1\":82,\"ISO3\":\"GBR\",\"NAME_ENGLI\":\"United Kingdom\",\"NAME_ISO\":\"UNITED KINGDOM\",\"NAME_FAO\":\"United Kingdom\",\"NAME_LOCAL\":\"United Kingdom\",\"NAME_OBSOL\":null,\"NAME_VARIA\":\"England|Great Britain|Northern Ireland|Scotland|Wales\",\"NAME_NONLA\":null,\"NAME_FRENC\":\"Royaume-Uni\",\"NAME_SPANI\":\"Reino Unido\",\"NAME_RUSSI\":\"Ð¡Ð¾ÐµÐ´Ð¸Ð½Ñ‘Ð½Ð½Ð¾Ðµ ÐšÐ¾Ñ€Ð¾Ð»ÐµÐ²ÑÑ‚Ð²Ð¾ Ð’Ðµ\",\"NAME_ARABI\":\"Ø§Ù„Ù…Ù…Ù„ÙƒØ© Ø§Ù„Ù…ØªØ­Ø¯Ø©\",\"NAME_CHINE\":\"è‹±å›½\",\"WASPARTOF\":null,\"CONTAINS\":null,\"SOVEREIGN\":\"United Kingdom\",\"ISO2\":\"GB\",\"WWW\":null,\"FIPS\":\"UK\",\"ISON\":826,\"VALIDFR\":\"1927\",\"VALIDTO\":\"Present\",\"POP2000\":59414643,\"SQKM\":243137.203,\"POPSQKM\":244.366729019,\"UNREGION1\":\"Northern Europe\",\"UNREGION2\":\"Europe\",\"DEVELOPING\":2,\"CIS\":0,\"Transition\":0,\"OECD\":1,\"WBREGION\":null,\"WBINCOME\":\"High income: OECD\",\"WBDEBT\":\"Debt not classified\",\"WBOTHER\":null,\"CEEAC\":0,\"CEMAC\":0,\"CEPLG\":0,\"COMESA\":0,\"EAC\":0,\"ECOWAS\":0,\"IGAD\":0,\"IOC\":0,\"MRU\":0,\"SACU\":0,\"UEMOA\":0,\"UMA\":0,\"PALOP\":0,\"PARTA\":0,\"CACM\":0,\"EurAsEC\":0,\"Agadir\":0,\"SAARC\":0,\"ASEAN\":0,\"NAFTA\":0,\"GCC\":0,\"CSN\":0,\"CARICOM\":0,\"EU\":1,\"CAN\":0,\"ACP\":0,\"Landlocked\":0,\"AOSIS\":0,\"SIDS\":0,\"Islands\":0,\"LDC\":0}}]}},\"arcs\":[[[47497,288],[154,-52],[-106,-84],[-66,39],[18,97]],[[47849,615],[138,-117],[-77,-124],[-95,9],[-16,-64],[-135,115],[104,14],[-7,140],[88,27]],[[47441,874],[72,-90],[-20,-105],[-99,50],[47,145]],[[47522,884],[144,-81],[39,-136],[-90,-41],[-41,136],[-88,98],[36,24]],[[47810,981],[82,-112],[182,-35],[-149,-60],[-135,69],[20,138]],[[75801,7136],[90,-26],[3,-74],[-144,7],[51,93]],[[80150,7737],[72,-72],[97,64],[83,-26],[176,-174],[277,-88],[226,12],[144,-67],[198,-52],[54,-195],[118,-36],[68,-93],[-172,-105],[-270,-88],[-161,-117],[-72,-195],[3,-148],[-57,-81],[-388,-133],[-367,-62],[-126,126],[-464,327],[-341,119],[-144,93],[-126,121],[-284,5],[-269,-72],[-144,39],[151,23],[-7,65],[133,40],[172,255],[105,-14],[244,36],[259,140],[108,-9],[-15,-81],[137,57],[-61,47],[352,122],[18,71],[201,146],[72,0]],[[82303,8339],[122,-81],[44,-269],[-65,-55],[126,-64],[-11,-52],[-557,78],[-15,88],[173,-7],[61,72],[32,152],[-43,24],[133,114]],[[58324,11467],[101,-136],[0,-155],[54,-67],[-104,-26],[-79,146],[46,54],[-18,184]],[[92483,13182],[79,-12],[-68,-65],[-11,77]],[[92246,13229],[107,-47],[-136,-7],[29,54]],[[93015,13267],[43,-7],[4,-133],[-126,19],[-43,83],[122,38]],[[92983,13363],[53,-79],[-125,45],[72,34]],[[93410,13577],[180,-74],[108,-2],[187,-112],[427,-48],[108,-35],[54,-89],[166,-121],[93,-174],[-194,-126],[-194,-26],[-173,69],[-169,7],[-309,83],[-115,-45],[-29,138],[-237,143],[-61,117],[122,-34],[-32,136],[68,193]],[[58159,15244],[183,-50],[-54,-64],[-136,12],[7,102]],[[54467,15761],[-21,-88],[-79,-2],[100,90]],[[93561,15964],[115,-50],[-100,-24],[-105,67],[90,7]],[[93256,15995],[32,-119],[-122,21],[90,98]],[[54302,16119],[194,-93],[-122,-10],[-22,-55],[-129,48],[-14,64],[93,46]],[[94852,16664],[248,-76],[-76,-88],[-309,-129],[-295,-5],[-21,58],[176,181],[277,59]],[[54047,17267],[54,-7],[-15,-234],[-125,74],[18,141],[68,26]],[[57598,24894],[58,-12],[-33,-122],[-68,5],[-7,117],[50,12]],[[58698,29720],[-180,-103],[159,-40],[82,-103],[87,29],[57,-50],[-68,-100],[21,-112],[76,-3],[162,-185],[7,-77],[-205,-47],[-144,40],[-3,105],[-83,57],[14,148],[-244,48],[-137,-39],[-57,60],[64,52],[-111,100],[108,160],[118,-40],[277,100]],[[59945,30568],[76,-39],[302,-9],[65,-81],[111,40],[374,-71],[61,-79],[25,-138],[-68,-81],[108,-81],[-8,-62],[223,-19],[-32,-52],[75,-119],[29,-162],[101,-62],[-68,-112],[57,-33],[399,85],[61,91],[94,33],[248,-50],[161,14],[108,-45],[-118,-71],[-115,-179],[-72,-57],[-4,-100],[-370,-224],[-90,-38],[-18,-88],[-104,16],[-209,-114],[-57,-212],[-169,-55],[-252,-207],[-219,-90],[-137,40],[-3,-71],[-115,-86],[-184,105],[-143,19],[-61,138],[190,57],[47,117],[-36,85],[-61,-26],[-212,-245],[-101,-48],[-93,224],[-51,26],[-140,-62],[-25,67],[-112,26],[47,208],[-151,123],[15,77],[-83,21],[-129,107],[-15,122],[-198,152],[259,196],[-115,-29],[22,129],[-130,83],[80,90],[-8,143],[69,53],[14,155],[-61,54],[-47,177],[281,31],[147,81],[-22,-53],[162,12],[-11,60],[227,-27],[29,67],[150,53]],[[84316,33059],[7,-52],[-115,-67],[8,88],[100,31]],[[67523,36765],[-69,-83],[108,-176],[43,-205],[-21,-45],[111,-48],[33,-141],[86,-54],[79,-141],[126,53],[39,-65],[-219,-16],[-241,278],[-100,141],[-90,186],[-26,238],[141,78]],[[52074,38716],[-62,-95],[-93,36],[155,59]],[[52145,39093],[-10,-115],[-54,22],[64,93]],[[52196,39350],[50,-57],[-93,-60],[43,117]],[[52782,41313],[82,-46],[4,-71],[-165,71],[79,46]],[[46642,46196],[101,-12],[90,-93],[233,-17],[119,-55],[79,91],[245,9],[237,-116],[144,4],[201,-152],[140,-74],[410,105],[86,86],[165,-12],[133,-136],[54,7],[209,-105],[75,15],[97,-231],[126,-67],[18,-210],[-104,-107],[43,-43],[-4,-171],[-104,-179],[-32,-200],[72,-43],[363,50],[126,-43],[39,-97],[-61,-112],[-25,-201],[-108,-150],[54,-78],[104,12],[104,-105],[72,17],[144,-74],[129,-167],[108,-255],[151,-121],[122,-17],[26,-150],[100,-38],[166,-217],[-29,-90],[-79,42],[72,-188],[201,-59],[36,26],[154,-62],[-82,-7],[126,-162],[79,-172],[10,141],[-100,221],[-104,98],[-130,55],[-118,109],[64,124],[72,-57],[33,60],[118,-29],[155,-88],[197,-310],[-7,-381],[-129,-171],[-144,-69],[-194,-150],[-90,31],[-172,-70],[-4,-45],[-219,-40],[-378,-286],[-18,-105],[-90,-114],[105,-55],[-11,-83],[97,69],[18,-46],[-176,-166],[133,69],[100,126],[123,-17],[161,91],[51,64],[471,191],[161,-60],[176,10],[292,-27],[100,27],[7,107],[166,-53],[90,48],[79,-21],[187,-191],[97,-5],[10,-104],[80,-24],[-62,-141],[40,-36],[54,-204],[83,-29],[61,-136],[68,-9],[65,-153],[-47,-59],[14,-138],[76,-72],[61,-262],[187,-74],[-61,-119],[46,-26],[-7,-122],[-97,-50],[-21,-102],[-166,-67],[115,-157],[29,-159],[-32,-98],[-126,12],[11,-236],[-72,-10],[-33,-195],[-61,-7],[-54,95],[-104,48],[15,95],[-87,48],[-43,128],[-201,160],[29,203],[172,114],[47,-55],[43,91],[-47,209],[22,262],[-54,3],[-65,207],[-3,107],[-162,0],[-209,231],[-165,21],[-252,189],[-111,-91],[0,-226],[-122,-60],[154,-54],[317,-189],[-25,-95],[172,69],[-50,-71],[-133,-29],[7,145],[-76,17],[-100,-55],[32,-143],[104,36],[54,-124],[-10,-83],[50,-141],[75,67],[-82,-164],[72,-65],[-115,-159],[36,-153],[-108,-131],[25,-26],[-201,-88],[107,-48],[141,-2],[197,119],[270,36],[-18,-93],[61,-72],[65,103],[68,-124],[-4,-157],[54,-57],[-18,-158],[123,-33],[-112,-24],[-86,-78],[-43,-148],[-335,-338],[-118,102],[-97,-7],[57,-155],[-144,-119],[-104,74],[-14,102],[-97,46],[-209,-19],[-154,28],[-184,-62],[-219,-24],[-90,31],[-72,105],[112,-9],[0,219],[-148,-229],[80,-74],[-47,-81],[-313,-197],[-47,-120],[83,-81],[40,-140],[-15,-164],[-93,-174],[18,-134],[-108,-176],[-324,-193],[-64,-119],[-248,-76],[-76,-110],[-126,-43],[-187,-119],[-22,150],[-362,564],[-1009,36],[-84,22],[-190,312],[21,-112],[169,-219],[-180,-130],[-96,160],[-111,40],[-59,-89],[51,-217],[-45,-74],[-209,-79],[-246,-30],[-276,148],[-14,-102],[-203,-88],[-165,30],[-158,-51],[-150,40],[-99,-121],[-228,29],[-89,145],[-132,58],[118,257],[-15,215],[126,197],[-11,142],[-75,140],[-152,134],[-157,47],[-142,-31],[-143,-123],[-120,145],[-182,43],[-120,138],[-88,12],[-115,320],[-199,119],[53,164],[-121,417],[-204,70],[-41,198],[-380,226],[-97,111],[-150,38],[-246,-29],[-390,-385],[14,-108],[-317,-177],[-157,-11],[-15,-136],[-126,-85],[-46,-111],[158,-83],[15,-105],[166,-28],[48,-388],[-401,-66],[-233,-123],[82,-75],[-136,-49],[37,-172],[-53,-62],[-9,-133],[-139,-201],[-72,-26],[-82,50],[93,79],[-55,68],[81,106],[15,108],[-169,-28],[-142,-148],[1,-51],[119,-84],[-27,-123],[-149,6],[-165,85],[-176,-43],[89,118],[-257,-10],[11,156],[-116,-7],[-108,-83],[-119,-33],[1,-91],[-63,-37],[-321,72],[-202,-54],[-176,143],[-114,-21],[-118,73],[-47,189],[-177,120],[-90,-25],[-163,194],[-465,22],[-422,-31],[-126,111],[-44,343],[-152,346],[-95,31],[-87,-59],[-239,101],[-177,281],[-216,195],[-108,-38],[-145,61],[-319,370],[-360,247],[62,150],[-184,58],[-13,47],[199,32],[152,-16],[44,66],[151,24],[109,79],[179,14],[140,301],[141,155],[193,-2],[252,-64],[636,76],[63,153],[171,91],[35,70],[145,36],[169,125],[215,54],[81,63],[-73,162],[-212,-107],[-121,-4],[-147,106],[-220,83],[-193,-57],[-91,143],[-275,134],[-40,87],[76,114],[-120,83],[267,65],[148,216],[88,45],[542,-283],[81,7],[65,82],[297,112],[275,158],[436,26],[73,-54],[182,6],[-74,103],[40,322],[51,122],[307,183],[36,138],[125,102],[118,223],[-45,95],[24,339],[324,97],[-4,231],[-47,87],[81,80],[-31,90],[62,63],[21,131],[209,202],[275,-8],[76,64],[128,11],[66,85],[115,-28],[-136,-173],[208,31],[51,121],[104,-29],[144,24],[269,-31],[-3,-81],[93,-45],[230,12],[284,45],[259,236],[-58,174],[72,88],[162,-10],[-25,41],[183,462],[-21,241],[82,4],[187,-135],[137,-53],[377,-45],[219,31],[281,-22],[237,31],[58,170],[284,81],[122,-5],[18,114],[54,-76],[115,40],[158,-19],[147,34],[176,88],[126,-3],[22,110],[169,74],[10,48],[144,50]],[[55467,46246],[82,-60],[-115,-43],[33,103]],[[52451,46484],[137,-43],[-198,-41],[61,84]],[[48202,46710],[155,-50],[147,0],[173,-57],[-76,-169],[-3,-119],[-61,-72],[-69,72],[-7,93],[79,69],[-43,59],[-187,26],[-198,-33],[-190,10],[18,69],[165,95],[97,7]],[[52753,47708],[29,-50],[-130,19],[101,31]],[[55726,48637],[122,-167],[-69,-55],[-104,112],[-18,96],[69,14]],[[48892,49359],[-57,-72],[-68,19],[125,53]],[[51394,49514],[-11,-122],[-72,14],[83,108]],[[76937,49933],[161,-17],[-14,-164],[-190,28],[-83,103],[-126,-43],[-104,71],[183,-9],[173,31]],[[54550,50216],[374,-155],[75,-78],[198,-131],[43,-134],[108,-178],[54,-227],[-22,-133],[-129,-79],[14,-114],[270,-50],[165,-164],[-179,-91],[-115,-97],[18,-55],[302,-134],[-94,-97],[4,-117],[86,-174],[-40,-100],[-129,-102],[-334,12],[-108,-65],[-212,-4],[-299,50],[-240,114],[-173,107],[-65,145],[-14,139],[-180,61],[7,172],[83,167],[-36,207],[-147,126],[-173,257],[18,134],[54,47],[36,189],[108,193],[212,71],[79,150],[112,24],[97,93],[172,21]],[[51560,50292],[64,-102],[-115,-76],[54,-103],[-75,-116],[111,28],[-126,-93],[51,-78],[-173,-172],[-61,-19],[-36,81],[36,91],[-76,66],[83,143],[151,191],[-4,117],[116,42]],[[56599,50226],[-72,-115],[-90,117],[205,105],[-43,-107]],[[56976,50288],[-79,50],[65,33],[14,-83]],[[56861,50831],[36,-15],[-10,-188],[39,-45],[-119,-171],[-107,73],[-115,-95],[-40,64],[137,301],[179,76]],[[55194,50936],[82,-215],[-64,-40],[-62,102],[44,153]],[[55032,51979],[180,-48],[111,-121],[431,-284],[-100,-107],[183,-17],[0,-152],[72,-29],[176,36],[11,-290],[129,-310],[-43,-86],[-137,-21],[-21,-53],[144,-85],[43,-127],[-176,-71],[-151,102],[-58,246],[-259,150],[-79,-72],[-86,143],[29,119],[-83,-2],[-36,119],[18,176],[76,36],[-29,71],[-137,-19],[-118,58],[-133,119],[-137,169],[-43,150],[147,88],[76,112]],[[48961,52074],[21,-159],[-68,-251],[75,-61],[115,-320],[-14,-271],[126,-267],[154,-74],[94,-105],[-36,-154],[32,-91],[90,-26],[25,-69],[-72,-112],[108,-126],[-18,-153],[-133,-78],[-64,-96],[-105,53],[-25,-191],[-97,-24],[47,93],[-230,-133],[-158,-62],[-140,36],[-69,-53],[-82,72],[-169,-19],[-4,-105],[-122,-143],[-22,-74],[-136,-43],[-47,-76],[-302,21],[4,60],[-151,5],[50,316],[115,155],[86,55],[176,7],[65,57],[-47,227],[-126,159],[-176,119],[-183,-4],[65,219],[165,55],[79,69],[209,66],[64,74],[-43,88],[-129,-14],[-255,45],[-166,-9],[-158,-243],[-50,-165],[-245,-276],[-172,-121],[-299,-177],[-143,50],[-51,165],[155,171],[-108,24],[86,160],[162,116],[101,191],[-25,121],[-162,0],[14,103],[162,88],[-54,167],[47,24],[21,185],[184,72],[93,-72],[130,43],[136,143],[248,145],[72,-66],[-101,-143],[8,-119],[-62,-162],[130,-86],[-22,90],[151,277],[-36,62],[212,24],[94,121],[144,57],[194,136],[93,107],[155,-5],[75,69],[130,-9],[115,45]],[[48299,52851],[108,-7],[-158,-100],[-7,-72],[-115,-62],[14,103],[-115,4],[0,100],[273,34]],[[48817,53742],[79,-89],[-108,-200],[-79,-74],[-36,-119],[-97,-104],[-75,-22],[97,-93],[-22,-66],[-137,-117],[-143,38],[-184,2],[33,84],[-133,-81],[-58,38],[151,81],[-39,133],[133,74],[-72,14],[136,177],[180,121],[165,-29],[11,131],[198,101]],[[52641,53853],[-25,-102],[-93,-50],[118,152]],[[51649,53884],[112,-112],[29,-178],[-425,-579],[-21,-88],[-144,-198],[-90,-7],[-198,-369],[-68,5],[-36,-150],[-75,-98],[-7,-112],[-159,-205],[22,-136],[-93,-90],[32,100],[-97,-7],[18,-162],[-184,9],[-89,-43],[-90,-288],[68,-64],[-155,-291],[-337,48],[-87,-26],[-172,71],[-155,131],[-75,260],[25,138],[-61,57],[25,172],[126,128],[50,117],[140,155],[123,83],[154,45],[129,-31],[489,91],[83,50],[47,114],[-198,-47],[-50,-98],[-105,-14],[-122,64],[-219,64],[-90,-21],[86,214],[191,150],[3,110],[382,233],[3,46],[227,133],[309,114],[25,98],[90,24],[39,78],[79,-47],[22,66],[219,112],[-3,65],[258,116]],[[52764,53968],[-83,-110],[32,115],[51,-5]],[[72005,54261],[119,-100],[-90,7],[-29,93]],[[51775,54325],[94,-81],[-26,-69],[54,-126],[-86,2],[-86,-74],[-313,3],[-43,85],[129,91],[18,69],[259,100]],[[52293,54573],[115,-53],[18,-157],[-151,-78],[-43,104],[61,184]],[[51764,54620],[-14,-221],[50,-69],[-90,5],[-82,140],[136,145]],[[51430,54768],[-75,-95],[-141,-38],[26,81],[190,52]],[[52113,54928],[72,-160],[101,114],[25,-50],[-130,-257],[-50,-231],[18,-128],[-57,-15],[-65,96],[0,92],[-101,89],[29,119],[-36,62],[97,66],[-22,74],[119,129]],[[47264,55619],[11,-122],[-158,-212],[-169,-55],[-72,91],[158,83],[-93,53],[172,119],[151,43]],[[67659,55700],[-154,-62],[-47,38],[201,24]],[[53004,56254],[18,-97],[-190,-193],[-72,-31],[-75,-126],[-112,64],[-151,-10],[90,155],[111,100],[101,-12],[187,53],[93,97]],[[48781,56469],[25,-45],[-108,-86],[-7,74],[90,57]],[[48084,56514],[72,-36],[-72,-52],[0,88]],[[49191,56638],[86,-45],[-169,-12],[83,57]],[[47038,56886],[28,-77],[-104,-59],[76,136]],[[53605,57210],[-15,-93],[-133,-7],[148,100]],[[44885,57376],[46,-88],[137,-57],[-11,-119],[-241,-17],[-61,36],[-201,-38],[-50,-95],[97,-60],[-97,-143],[-245,34],[-180,-39],[-107,-109],[39,-250],[-137,-50],[-118,16],[-94,124],[-133,22],[-61,-60],[-57,55],[61,50],[-43,288],[-51,50],[62,107],[151,34],[17,71],[277,-50],[130,12],[100,-52],[101,119],[252,95],[168,-74],[105,19],[21,88],[90,3],[33,78]],[[53468,57419],[-50,-102],[-316,-260],[-155,-190],[-191,-91],[-89,-95],[-230,-119],[-80,2],[133,107],[40,177],[-158,-41],[413,148],[198,167],[165,183],[40,86],[136,-57],[144,85]],[[45158,57503],[36,-55],[-169,-43],[133,98]],[[53734,57626],[-72,-64],[-36,103],[141,45],[-33,-84]],[[49475,57965],[97,-127],[-140,79],[43,48]],[[48946,58232],[61,-89],[205,-62],[126,-4],[58,-93],[-69,-62],[212,-74],[119,-160],[212,-171],[-18,-62],[86,-64],[61,-219],[90,-108],[61,46],[123,-77],[111,41],[320,-5],[119,-100],[68,62],[180,-5],[136,-95],[76,-133],[154,-60],[148,31],[108,-141],[158,-73],[-25,-69],[93,-27],[65,67],[68,-62],[-32,-231],[-123,48],[-50,102],[18,-179],[151,-26],[-93,-231],[-76,-52],[-259,62],[47,188],[-219,-29],[90,-54],[-15,-72],[-133,-14],[-25,-100],[-201,-141],[205,41],[183,107],[219,12],[-3,-119],[-313,-238],[-410,-193],[-147,-31],[-22,-48],[-266,31],[-82,83],[133,62],[14,81],[104,22],[11,71],[-173,38],[-104,-21],[-190,-162],[-90,-112],[-198,-26],[-147,38],[-76,-86],[-280,-167],[-104,-4],[-151,78],[-43,-40],[-259,-5],[-61,-86],[-184,24],[-341,-5],[-58,-50],[-136,43],[-108,-207],[-61,52],[-169,34],[-29,-60],[-172,52],[35,86],[-161,-9],[-227,45],[69,119],[151,-14],[-162,76],[43,210],[129,123],[378,-31],[100,-52],[51,-164],[190,9],[-3,105],[-87,83],[137,22],[126,-79],[136,-19],[123,76],[183,-33],[115,62],[237,21],[7,43],[442,110],[98,117],[-76,76],[173,-19],[-90,69],[-126,9],[-115,-45],[-115,-119],[-68,64],[-83,-93],[-230,-57],[-194,7],[-144,-71],[-165,2],[-76,93],[-11,103],[54,90],[291,164],[202,348],[255,-26],[194,31],[79,100],[162,43],[140,143],[-54,112],[-57,14],[-137,-100],[-111,-7],[-187,-72],[-148,0],[-97,-59],[-100,19],[-162,-91],[-227,12],[-68,-43],[-101,60],[-147,-14],[-129,78],[-47,72],[-61,-93],[-18,86],[-166,-12],[-25,143],[216,2],[25,-52],[277,81],[208,-62],[144,-86],[72,57],[97,-40],[79,42],[-64,79],[-256,91],[-258,162],[-389,-48],[-341,119],[18,138],[197,48],[177,150],[-79,33],[-155,-12],[-54,224],[61,-24],[137,41],[179,-19],[26,78],[151,-33],[89,-59],[-10,247],[169,-26],[21,119],[202,-9],[122,97],[100,-21],[36,48]],[[46739,58534],[108,-45],[-32,-150],[-72,-136],[-273,-312],[-105,98],[15,-134],[-151,-93],[-15,-66],[-111,-5],[0,-62],[-126,26],[-230,-95],[-14,121],[-47,-121],[-108,-43],[11,79],[-172,11],[-69,-157],[-86,-16],[-93,140],[89,22],[126,135],[22,-59],[118,24],[123,212],[115,14],[39,152],[90,7],[190,153],[130,26],[97,136],[194,62],[65,67],[61,-34],[111,43]],[[39198,59380],[183,-60],[-172,-50],[-191,55],[-7,45],[187,10]],[[50564,59561],[266,-105],[172,-36],[-201,-71],[-119,-5],[-190,40],[72,177]],[[39288,59737],[0,-222],[-115,-83],[-205,24],[83,97],[-29,105],[176,19],[90,60]],[[48040,59880],[65,-64],[187,38],[86,-91],[-154,-98],[-65,77],[-61,-53],[-126,81],[83,48],[-15,62]],[[39568,60001],[151,-64],[-90,-74],[-212,19],[25,95],[126,24]],[[39964,60344],[107,-57],[-32,-124],[-93,-19],[-115,65],[-33,109],[166,26]],[[40442,60509],[-40,-103],[-36,93],[76,10]],[[48878,60704],[119,-76],[36,-162],[-18,-257],[-83,7],[18,-77],[-83,-64],[-169,5],[-294,143],[21,164],[137,69],[190,5],[-39,172],[165,71]],[[39622,60749],[302,-50],[-101,-45],[353,-50],[-58,-38],[-172,38],[-108,-100],[208,5],[-21,-77],[-155,3],[-144,-41],[-82,119],[144,39],[-274,66],[112,55],[-4,76]],[[41035,61197],[54,-57],[-101,-22],[47,79]],[[40905,61204],[65,-90],[-119,12],[54,78]],[[41193,61409],[32,-110],[-57,-66],[-230,69],[255,107]],[[40399,61685],[25,-85],[133,-12],[-15,-146],[-154,-52],[136,-91],[123,-11],[165,-67],[-90,-84],[129,-40],[4,-112],[-183,52],[-7,-69],[-108,-31],[3,-102],[-115,17],[76,-84],[-166,-69],[-219,5],[-18,86],[-86,-79],[-162,10],[-226,66],[36,119],[165,65],[65,-36],[50,67],[-83,47],[101,38],[36,129],[-137,57],[87,36],[190,-10],[183,86],[54,146],[-54,140],[62,14]],[[47634,61700],[374,-169],[133,-98],[29,-84],[-183,-30],[-8,-50],[234,-27],[-61,-135],[0,-167],[-68,-95],[-169,-79],[-115,-133],[-169,-10],[-87,100],[-176,50],[-39,176],[-112,10],[-176,140],[-208,98],[-47,57],[93,7],[58,84],[183,93],[61,100],[241,102],[58,-29],[154,89]],[[40783,61714],[112,-95],[-105,-81],[-104,59],[97,117]],[[46480,61795],[151,-55],[-43,-88],[166,-57],[-8,-50],[-222,33],[-90,-12],[-15,98],[-222,0],[3,-36],[-291,-93],[-101,88],[101,74],[234,22],[28,33],[309,43]],[[41495,61969],[57,-7],[-10,-127],[-65,-169],[-68,-40],[-108,45],[21,136],[-57,143],[83,-24],[147,43]],[[48443,62602],[112,-12],[32,-114],[-191,-47],[58,-86],[-191,-57],[-115,71],[-39,107],[223,67],[111,71]],[[50697,63603],[50,-95],[-118,-27],[-22,86],[90,36]],[[49773,63970],[237,-34],[230,-112],[40,-112],[-32,-114],[-187,-74],[-180,3],[-270,262],[47,140],[115,41]],[[46578,64141],[50,-21],[-32,-103],[-162,7],[144,117]],[[50797,64196],[126,-74],[-3,-79],[-155,12],[-50,112],[82,29]],[[42074,64708],[14,-136],[-205,-100],[-104,55],[68,105],[227,76]],[[40927,64718],[-65,-148],[115,59],[144,0],[129,-119],[234,-40],[94,-86],[-8,-107],[173,-74],[0,-45],[162,26],[-97,-129],[-87,-7],[-165,-90],[180,47],[97,-47],[36,-174],[147,21],[43,-69],[-75,-155],[-169,-40],[-151,-129],[61,-105],[-79,-31],[-32,-164],[-148,-36],[-147,41],[7,76],[-270,-55],[97,-28],[144,43],[58,-124],[169,0],[86,-67],[-29,-112],[101,-105],[25,-176],[-140,-107],[-119,0],[-100,57],[3,-95],[-126,-24],[61,-36],[137,38],[280,-57],[47,-105],[183,-54],[-129,-115],[22,-78],[-209,33],[-122,74],[-230,-41],[-245,-12],[-140,17],[-129,86],[11,59],[-87,96],[-50,147],[29,117],[-72,122],[-36,140],[11,205],[-65,17],[11,116],[-133,103],[90,-17],[72,62],[25,314],[100,60],[58,93],[14,269],[-46,195],[-72,124],[-112,110],[133,24],[72,95],[119,-7],[104,124]],[[41513,65323],[115,-36],[0,-81],[-86,17],[-29,100]],[[41240,65425],[54,-31],[-137,-57],[137,-38],[0,59],[140,-16],[126,-162],[79,2],[0,88],[93,-7],[259,-143],[-61,-45],[-137,57],[-7,-62],[144,-62],[-209,0],[-50,-69],[-68,83],[-40,-85],[104,-57],[51,61],[151,-19],[115,-69],[-43,-47],[82,-86],[-143,-38],[-94,16],[-11,-71],[-176,48],[-39,-34],[151,-33],[39,-60],[-169,-47],[-11,64],[-143,76],[-187,-23],[-155,69],[-154,109],[-177,3],[-32,183],[-86,45],[50,117],[-72,2],[22,79],[201,26],[83,145],[144,17],[154,-40],[22,52]],[[41969,65494],[216,-2],[76,-72],[14,-97],[-144,-131],[-97,38],[40,78],[-115,62],[21,65],[133,-31],[-144,90]],[[42275,65494],[93,-17],[-43,-54],[-50,71]],[[41570,65561],[65,-38],[223,-10],[115,-279],[-313,67],[-61,76],[-273,100],[180,-35],[75,38],[-140,74],[129,7]],[[49741,65608],[133,-145],[3,-174],[-104,-209],[-172,-110],[-40,-114],[61,-77],[32,-273],[105,-153],[61,-19],[-15,-105],[-172,-197],[-209,-39],[-104,46],[0,107],[-93,50],[0,159],[50,62],[-68,320],[32,178],[162,224],[233,-52],[44,83],[-123,122],[-18,97],[97,26],[137,-30],[29,100],[-61,123]],[[45578,65694],[65,-124],[-86,-7],[21,131]],[[39399,65754],[-32,-157],[-93,-36],[14,145],[111,48]],[[39108,65778],[40,-84],[-209,-64],[-39,50],[129,14],[79,84]],[[40693,65911],[11,-91],[90,-31],[25,72],[104,26],[194,-136],[-140,-88],[61,-47],[-32,-177],[-108,48],[-25,126],[-212,222],[32,76]],[[40496,66063],[68,-78],[115,16],[18,-76],[-111,-31],[-108,76],[18,93]],[[49888,65589],[-101,60],[44,109],[-72,101],[133,7],[-47,83],[4,152],[140,24],[36,60],[50,-126],[-79,-155],[0,-81],[-76,-234],[-32,0]],[[42318,66523],[111,-55],[-53,-31],[-58,86]],[[42965,66857],[29,-100],[-83,19],[54,81]],[[40744,66926],[118,-34],[-248,-95],[-147,12],[-25,52],[122,-12],[180,77]],[[42052,67161],[-7,-71],[201,-57],[18,-191],[-75,-64],[129,-26],[83,109],[79,-69],[-83,-55],[227,22],[-130,59],[43,50],[76,-42],[50,78],[76,-50],[-76,-74],[148,-35],[64,-96],[-226,-264],[-216,160],[-133,16],[14,-105],[-21,-231],[198,17],[71,50],[83,-21],[-108,-246],[-129,-64],[-180,-10],[-255,46],[-201,-96],[197,27],[263,-46],[36,67],[161,-24],[-28,-117],[46,-16],[-115,-160],[4,-86],[-277,5],[-381,-26],[-205,72],[-143,-67],[-126,16],[-65,101],[61,52],[-208,176],[3,48],[-284,105],[-143,135],[-141,-102],[-136,-50],[-126,45],[-54,110],[-241,86],[-21,61],[-94,-2],[33,119],[75,-86],[86,12],[4,141],[-68,24],[183,69],[39,178],[-18,70],[76,26],[158,-34],[79,29],[65,-74],[111,-2],[54,-122],[230,-2],[22,174],[147,38],[94,76],[14,117],[115,64],[50,-43],[-107,-66],[14,-70],[-97,-78],[21,-48],[284,-45],[-93,95],[140,24],[15,-74],[122,-69],[-104,107],[222,79],[22,67],[151,95],[158,59]],[[43105,67245],[36,-65],[-115,43],[79,22]],[[47494,67252],[108,-69],[133,57],[115,5],[-7,-122],[305,-171],[83,-169],[18,-138],[266,-29],[119,-124],[46,-131],[115,-152],[61,0],[-43,-179],[58,-195],[-18,-258],[-36,-131],[68,-195],[-57,-393],[-209,-145],[-75,19],[-76,-167],[87,31],[21,79],[270,-12],[115,-100],[7,-67],[-83,-131],[-57,-9],[226,-277],[43,62],[54,-57],[-79,-36],[18,-140],[-165,-15],[-184,-133],[29,-21],[227,131],[205,-22],[97,26],[161,-35],[-18,-105],[58,-50],[-241,-134],[22,-85],[327,185],[161,-131],[187,-31],[194,-81],[83,39],[148,-89],[-29,-102],[190,-12],[47,57],[187,91],[36,-34],[176,22],[198,119],[273,38],[176,-43],[-129,-81],[388,41],[147,-67],[-11,-64],[-107,-117],[21,-124],[-36,-107],[-269,-200],[-212,-67],[-126,-76],[-158,-17],[-123,65],[69,-129],[-44,-112],[133,36],[-39,-115],[-108,-150],[-154,-109],[-151,31],[-130,-219],[-65,-17],[-266,-350],[-201,-62],[-32,-64],[-169,0],[-115,-72],[-130,-7],[11,110],[-79,50],[-36,171],[101,122],[57,-12],[90,290],[83,7],[-115,91],[65,100],[154,55],[-36,24],[219,90],[62,98],[100,59],[209,19],[183,74],[97,76],[-201,-76],[-144,24],[43,-48],[-212,-21],[-75,38],[-248,-69],[-144,12],[0,148],[-108,169],[-65,7],[-21,93],[-87,64],[8,-93],[75,-95],[-18,-155],[-140,-67],[11,-76],[-105,-140],[-3,-70],[-101,-133],[-219,74],[65,260],[-87,204],[-79,-57],[-233,100],[7,-145],[-133,-52],[-165,38],[-220,-67],[-79,5],[-428,-86],[47,88],[90,38],[111,129],[-61,109],[-237,-142],[-83,-10],[-129,71],[-144,167],[40,134],[158,-3],[50,48],[18,150],[-100,-138],[-288,-26],[-147,88],[-15,76],[-136,93],[-65,136],[22,66],[-155,31],[-4,200],[220,72],[57,55],[72,-31],[-18,145],[112,-31],[266,-143],[89,-126],[112,-57],[158,21],[-151,24],[-162,176],[-266,169],[4,122],[-58,-81],[-205,-12],[-100,-60],[39,141],[-172,83],[75,81],[-104,48],[22,126],[-58,62],[-18,-107],[-187,-191],[-14,107],[47,122],[-79,69],[-126,-160],[-101,46],[25,-250],[-11,-215],[-111,-36],[-277,153],[-190,67],[-133,-10],[-158,93],[-148,45],[-118,141],[61,40],[-58,150],[-169,143],[-115,-67],[-25,177],[54,16],[-14,139],[104,7],[133,-65],[147,-9],[-147,114],[-40,129],[4,171],[119,98],[111,26],[65,-143],[172,-190],[65,-26],[-4,-96],[97,-12],[29,-83],[158,-122],[79,96],[137,-74],[0,-105],[83,69],[-87,62],[-21,114],[-184,31],[47,31],[-151,355],[133,-2],[130,64],[165,-138],[75,124],[-169,88],[-115,153],[-312,161],[79,60],[36,160],[0,233],[129,-14],[219,-157],[87,-141],[3,-171],[108,-67],[76,31],[255,-131],[287,-269],[123,140],[75,-16],[-154,-246],[107,-119],[-28,157],[97,115],[133,35],[-40,129],[36,45],[119,-66],[54,-162],[169,-48],[10,-105],[47,69],[86,-155],[18,-147],[25,257],[-68,83],[-244,174],[-36,155],[-148,157],[-18,93],[97,-2],[155,212],[-226,-38],[3,216],[-104,162],[-83,67],[-7,91],[129,42],[-25,79],[173,-7],[180,95],[71,112],[-68,93],[18,112]],[[41423,67352],[90,-29],[-43,-71],[50,-50],[-108,-12],[-64,133],[75,29]],[[51125,67502],[-69,-93],[-136,26],[-4,62],[209,5]],[[42246,67516],[119,-76],[-40,-105],[-144,10],[36,-62],[-71,-72],[-159,46],[8,-60],[-184,22],[83,73],[115,179],[237,45]],[[42742,67609],[180,-155],[-162,22],[-93,98],[75,35]],[[42771,67826],[68,-129],[-14,-71],[-169,143],[115,57]],[[41901,67914],[101,-93],[-51,-78],[-215,-55],[-169,98],[43,80],[133,43],[158,5]],[[41639,68081],[79,-41],[-97,-31],[18,72]],[[32868,68281],[79,-71],[25,59],[155,-24],[144,-105],[-151,-19],[-4,-119],[-61,76],[-180,51],[-7,152]],[[32778,68329],[-79,-96],[-83,43],[162,53]],[[52138,68452],[4,-50],[208,-107],[-10,-76],[-105,7],[-133,86],[-25,105],[61,35]],[[33645,68703],[57,-124],[-108,21],[51,103]],[[45233,68722],[281,-53],[111,-147],[-137,-50],[-68,35],[-126,-33],[-151,212],[90,36]],[[53206,68893],[61,-186],[-137,60],[-10,117],[86,9]],[[47451,68934],[54,-93],[-212,83],[158,10]],[[47598,68965],[61,-91],[-115,33],[54,58]],[[43285,69086],[93,-167],[-61,-121],[-100,-72],[-202,127],[-64,-112],[-155,-67],[-43,181],[234,26],[46,129],[69,52],[183,24]],[[43447,69296],[126,-117],[-173,88],[47,29]],[[54759,69327],[133,-41],[-108,-76],[-97,102],[72,15]],[[52936,69484],[86,-98],[-147,-24],[-47,60],[108,62]],[[53989,69732],[51,-117],[-51,-38],[0,155]],[[47045,69801],[54,-72],[-212,5],[-18,52],[176,15]],[[45086,69820],[68,-127],[-79,-66],[-104,116],[115,77]],[[53357,69891],[68,-52],[-111,-50],[43,102]],[[53479,69958],[-40,-136],[-32,50],[72,86]],[[53594,69963],[72,-39],[-36,-80],[129,-20],[-97,-73],[-158,47],[4,117],[86,48]],[[42444,70082],[169,-93],[25,-200],[-79,-19],[-72,59],[-230,38],[-72,141],[259,74]],[[53403,70215],[87,-48],[-58,-95],[-104,19],[-7,67],[82,57]],[[42494,70510],[40,-128],[-126,14],[-18,64],[104,50]],[[46994,70701],[-25,-67],[-133,-4],[158,71]],[[43770,71458],[36,-81],[-90,34],[54,47]],[[44773,71525],[50,-109],[-93,59],[43,50]],[[43975,71632],[115,-90],[-126,-10],[11,100]],[[43853,71749],[36,-69],[-97,0],[61,69]],[[43637,71856],[72,-33],[40,-107],[-130,50],[18,90]],[[44022,72085],[208,-76],[90,-69],[-18,-100],[104,-103],[76,48],[219,-167],[-3,-145],[-133,55],[-223,-22],[-191,24],[-54,112],[108,24],[-115,54],[-54,81],[-47,193],[83,-16],[-50,107]],[[55255,72221],[79,-84],[-87,12],[8,72]],[[55082,73104],[101,-71],[-54,-83],[-165,-10],[-94,33],[65,119],[147,12]],[[48080,74210],[277,-215],[-61,-40],[298,-179],[-79,-100],[18,-126],[165,-105],[-14,-112],[-133,-71],[-36,-108],[-147,-238],[158,-164],[187,-33],[-4,-36],[-205,-17],[-172,-188],[-69,-7],[-86,-198],[-183,-7],[-61,-60],[21,-145],[-111,-26],[-158,21],[-40,-81],[76,-126],[-44,-57],[-136,-2],[-22,-81],[108,-19],[252,-162],[169,71],[100,79],[83,-8],[183,129],[25,72],[263,85],[50,60],[130,-22],[10,-64],[-93,-36],[14,-88],[-111,-109],[68,-41],[-154,-157],[-202,-50],[11,-79],[-140,-62],[-176,-14],[-112,69],[-25,91],[-82,59],[-116,0],[-190,-159],[-122,19],[-4,74],[-144,31],[-89,59],[79,-288],[75,-107],[-36,-127],[33,-135],[-133,-22],[-266,7],[-364,96],[266,-112],[69,14],[50,-76],[-115,-31],[-86,-105],[-187,-17],[-234,-71],[-212,-14],[-478,-62],[36,-17],[313,40],[370,0],[50,46],[309,26],[202,-29],[-36,48],[140,81],[147,7],[94,-140],[-7,-117],[75,-31],[-72,-64],[83,-24],[3,-79],[-68,-78],[-284,9],[151,-57],[263,-14],[-54,-196],[-223,-140],[-65,78],[-176,41],[-90,-76],[-97,107],[-21,-74],[-209,-29],[-162,67],[0,-76],[-129,17],[75,-62],[403,14],[108,-60],[54,-135],[-7,-115],[-119,-35],[3,-172],[-32,-33],[-190,23],[-123,-111],[-46,100],[-115,45],[39,-114],[-11,-124],[-190,19],[-50,-69],[-159,135],[-79,158],[-194,152],[209,-302],[11,-103],[-231,76],[-43,-50],[-147,150],[-25,67],[-194,203],[-22,169],[50,50],[-61,114],[209,274],[61,-7],[79,159],[176,-2],[86,-62],[58,55],[-173,26],[-222,-19],[7,-95],[-198,-122],[-97,-112],[-262,-116],[129,-115],[104,-257],[-25,-64],[104,19],[176,-198],[58,-129],[-169,10],[11,-50],[176,-98],[36,-109],[-29,-72],[-467,53],[-205,90],[-130,-28],[40,-110],[-97,43],[-72,-38],[54,-110],[158,19],[68,-45],[112,-200],[36,28],[75,-147],[-57,-43],[-137,-5],[-215,74],[97,-167],[-274,-74],[0,100],[-115,151],[-28,-62],[79,-60],[-54,-119],[-68,79],[-44,-86],[29,-117],[-101,53],[-82,-20],[86,-142],[-158,-29],[-108,74],[86,-157],[-266,-72],[-25,-145],[-122,-24],[-86,62],[72,-129],[-259,224],[-90,12],[-79,112],[-216,143],[-126,191],[-222,69],[-101,178],[154,48],[191,-74],[43,-71],[183,33],[187,83],[79,77],[58,178],[86,-36],[288,74],[118,-52],[79,43],[-345,138],[130,133],[126,69],[237,-31],[54,-50],[161,-14],[33,50],[201,-36],[-287,134],[-47,74],[176,28],[-61,36],[-428,31],[90,93],[-155,-60],[-118,79],[-79,-12],[-255,98],[-54,-69],[-101,0],[-395,131],[-15,169],[-65,74],[-100,-86],[-47,31],[61,81],[79,12],[51,169],[75,2],[144,-81],[54,136],[366,143],[137,-14],[147,66],[-248,-14],[-377,-122],[-140,62],[-11,55],[266,64],[-244,5],[32,72],[198,64],[-29,81],[-212,-105],[0,-59],[-144,14],[-97,52],[-36,229],[-65,41],[22,85],[-165,115],[39,140],[79,-2],[176,214],[-115,124],[40,60],[140,40],[-7,-45],[223,-15],[-26,-52],[159,81],[25,62],[-115,-52],[-169,57],[126,331],[154,90],[-7,-88],[165,7],[151,-126],[61,-5],[-3,117],[83,12],[89,-145],[169,-3],[36,-112],[-230,0],[-11,-76],[83,-48],[237,-9],[69,-150],[-26,-129],[87,-238],[100,-93],[-32,122],[-93,121],[-40,143],[22,88],[86,14],[-65,60],[76,76],[248,117],[338,-83],[125,-58],[69,34],[93,-131],[79,90],[-126,-4],[18,76],[-125,-3],[-8,186],[-115,172],[-86,-7],[-198,331],[187,35],[-219,12],[-32,34],[158,76],[54,128],[165,24],[112,-28],[10,64],[137,57],[140,122],[237,66],[25,67],[137,38],[58,-90],[118,73],[83,-11],[187,116],[205,7],[-15,46],[169,205],[162,38],[50,71],[227,103],[151,150],[215,107],[126,12],[162,78],[144,162],[205,19],[61,81],[129,48],[-79,126],[151,72]],[[60197,74398],[-61,-103],[-58,69],[119,34]],[[60402,74584],[162,-5],[28,-57],[-75,-72],[-147,100],[32,34]],[[58382,74653],[21,-34],[-147,-35],[126,69]],[[56976,50288],[162,133],[29,183],[-104,296],[-108,121],[-7,551],[-65,83],[122,126],[-18,100],[51,41],[-33,181],[327,124],[90,62],[86,-50],[79,54],[195,-59],[111,-96],[129,-9],[338,-98],[284,-9],[342,-74],[287,-7],[94,28],[-36,55],[-130,3],[-151,50],[-456,109],[-115,72],[-101,-19],[-100,111],[-115,-33],[-29,48],[129,38],[-79,48],[-25,85],[-129,69],[-259,58],[-155,85],[-14,76],[-212,227],[0,86],[-97,140],[-33,-171],[112,-227],[100,-147],[90,-15],[29,-95],[133,-10],[14,-119],[-226,-42],[-223,7],[-104,50],[0,102],[-104,122],[3,190],[-90,112],[284,569],[90,34],[76,176],[194,250],[79,133],[144,86],[7,72],[-191,-100],[-320,-441],[-10,-124],[-166,-126],[-36,-93],[-154,21],[-61,189],[57,150],[-122,235],[-90,-38],[108,-157],[-54,-176],[-4,-136],[205,-140],[22,-69],[-140,-232],[-105,-81],[87,-264],[-25,-79],[54,-128],[-44,-110],[-258,107],[-133,-42],[57,-58],[140,-14],[148,-90],[-8,-100],[-158,-150],[-18,-112],[-79,-167],[-7,-100],[-169,-196],[-25,-126],[-388,57],[-108,520],[-83,207],[-244,176],[-40,141],[-93,150],[-11,-86],[72,-210],[151,-145],[83,-148],[53,-276],[-28,-71],[-223,40],[-212,164],[-212,134],[-79,81],[25,78],[-51,208],[-53,-322],[50,-40],[-83,-181],[-61,0],[-151,-119],[-7,-79],[226,-312],[-10,-114],[50,-98],[-104,-50],[-65,100],[-155,24],[-50,102],[-97,-50],[-111,24],[10,55],[-165,-26],[-18,150],[-68,121],[-133,22],[-25,128],[50,326],[86,158],[-108,69],[51,159],[-15,103],[87,97],[86,31],[86,100],[50,172],[180,233],[313,227],[83,257],[151,78],[186,15],[338,157],[130,98],[-29,71],[151,272],[183,133],[309,102],[385,260],[-36,31],[-101,-86],[-319,-143],[-331,-71],[-40,112],[-226,-241],[-47,-124],[-57,-21],[-8,-141],[-89,-150],[-155,-95],[-349,-81],[-255,-164],[-115,-131],[-11,-138],[-172,-69],[-94,-208],[-100,-59],[-65,90],[-79,-14],[61,-81],[-79,-36],[3,-190],[-50,-81],[-129,5],[-97,-151],[-180,3],[-129,52],[-15,203],[-75,-3],[-54,-243],[39,-214],[-36,-69],[36,-114],[105,-105],[61,-438],[147,-215],[-54,-40],[126,-31],[187,-241],[154,-131],[115,-293],[-14,-107],[-75,-86],[-162,-14],[-266,-95],[-97,-119],[-86,-43],[-162,-184],[11,-124],[-148,-355],[-86,-83],[39,-81],[4,-260],[108,-121],[7,-124],[-72,-35],[-11,80],[-107,-23],[-40,-301],[22,-128],[-79,-10],[-4,-97],[-72,-162],[18,-96],[-75,-28],[-144,-138],[-18,-200],[-148,-143],[-208,9],[126,-117],[223,34],[25,-93],[111,-98],[76,-202],[-22,-100],[-277,-322],[-97,-26],[-161,-110],[-266,-4],[-69,31],[-226,-29],[-219,-129],[-259,-23],[-230,78],[-40,126],[47,212],[-50,89],[3,154],[40,31],[0,191],[284,195],[3,93],[101,-17],[111,58],[54,304],[-11,382],[18,147],[54,74],[-14,138],[-76,219],[148,84],[50,86],[50,233],[40,64],[0,162],[58,134],[-87,145],[266,121],[335,432],[82,159],[115,7],[234,146],[47,85],[201,84],[54,152],[118,134],[62,185],[-130,-200],[-50,12],[-76,-138],[-90,-33],[-165,-189],[-108,-78],[-341,-172],[-155,-52],[-39,176],[68,115],[-187,-62],[-176,121],[-32,124],[46,86],[4,190],[295,391],[-25,29],[118,166],[122,38],[83,134],[-54,21],[-180,-78],[-244,-222],[-76,-5],[-115,-135],[-97,192],[159,336],[165,138],[129,153],[33,86],[136,152],[148,57],[61,115],[-194,-139],[-36,27],[201,200],[-191,-127],[-133,-19],[22,-78],[-101,-98],[-54,-114],[-129,-53],[104,162],[18,84],[-169,-250],[94,-29],[-209,-214],[36,-74],[-104,-129],[-108,48],[51,126],[133,114],[-133,-45],[-72,-95],[32,150],[158,169],[-14,45],[197,260],[-53,38],[176,26],[-61,74],[82,131],[104,93],[213,250],[230,-33],[-11,-67],[136,141],[-57,59],[-108,-26],[40,71],[-126,5],[39,122],[202,295],[82,86],[-14,52],[122,88],[-154,27],[-148,-148],[-201,-126],[-11,-86],[-158,-136],[-61,12],[169,191],[-90,-39],[54,153],[147,236],[155,162],[-7,147],[-108,65],[147,12],[126,83],[72,-24],[75,91],[97,-19],[-133,126],[-79,-88],[-280,9],[-129,-102],[-98,5],[8,135],[97,172],[-76,-22],[11,162],[-122,-54],[68,-131],[-86,-29],[-65,-100],[-75,43],[-11,183],[-126,45],[90,134],[151,90],[129,-40],[43,93],[69,-10],[140,160],[122,33],[169,-59],[76,74],[186,11],[180,79],[-25,50],[-205,-112],[-119,24],[-132,-107],[-123,138],[90,136],[-36,19],[90,126],[266,200],[-61,38],[25,112],[230,167],[11,-43],[190,48],[320,-3],[97,45],[130,-81],[82,62],[202,-59],[115,62],[180,-179],[75,69],[252,31],[118,72],[94,126],[133,40],[-47,55],[129,88],[36,91],[123,121],[21,115],[68,43],[76,154],[-18,55],[-201,-333],[-166,-158],[-129,-14],[-68,-155],[-148,-209],[-295,-105],[-158,140],[-169,-26],[-244,26],[-126,67],[-144,-9],[-50,-105],[-234,9],[36,131],[-64,134],[-108,55],[-130,-146],[-75,-40],[25,114],[-126,-62],[248,346],[212,42],[11,-88],[90,-47],[313,76],[208,124],[86,114],[119,-26],[183,62],[-14,57],[-237,-88],[-97,28],[-162,-42],[-65,-79],[-208,-110],[-94,0],[-104,172],[-111,-41],[64,84],[-100,-12],[93,116],[104,67],[177,286],[284,179],[133,124],[-15,78],[-158,7],[151,124],[162,74],[154,-2],[191,138],[248,19],[226,-98],[119,43],[129,-7],[36,83],[363,105],[-172,-2],[-439,-138],[-126,-3],[-28,50],[-105,-19],[0,81],[-395,26],[108,229],[244,205],[133,147],[40,89],[151,128],[111,136],[148,110],[0,90],[-123,57],[-161,-28],[-123,50],[-57,69],[-223,26],[-367,-14],[-424,47],[-14,-40],[158,-62],[147,0],[194,-41],[489,36],[194,-86],[180,-28],[-3,-64],[-184,-165],[-18,-52],[-435,-310],[-68,-5],[11,-109],[-155,-117],[-14,-64],[90,-81],[-216,-81],[-79,-93],[-18,93],[-79,9],[-108,-121],[-216,-115],[-100,-169],[-281,-195],[-46,41],[-148,-86],[-187,-191],[-345,19],[40,-45],[158,-40],[-144,-179],[-43,-95],[-241,-260],[-338,-210],[-71,-7],[-177,-95],[-237,-95],[-57,126],[-238,43],[-79,66],[-54,-57],[-147,136],[-68,-17],[-288,55],[-82,41],[-202,21],[-47,48],[-150,-3],[-364,279],[-82,107],[-25,100],[-176,150],[0,212],[208,-2],[187,52],[39,-33],[141,45],[-209,0],[36,103],[101,4],[205,-145],[-8,79],[97,78],[72,-81],[-140,-102],[0,-74],[94,7],[316,-119],[-133,86],[-155,43],[-43,86],[140,76],[126,-7],[202,126],[122,45],[72,84],[197,92],[162,-33],[112,-131],[136,10],[76,-50],[409,-3],[40,41],[392,16],[3,34],[-169,26],[-169,-26],[-147,12],[-97,-43],[-219,-31],[18,43],[-137,28],[-61,86],[-162,95],[-82,12],[-310,-47],[-212,-177],[-179,-107],[-144,69],[-144,-55],[-280,10],[-7,59],[-123,34],[-158,-48],[-61,-64],[-133,81],[-190,-24],[-130,110],[-144,-24],[-75,26],[-165,-45],[-44,74],[-125,-110],[-327,31],[-209,136],[-43,62],[-7,152],[93,0],[22,72],[172,23],[-57,124],[151,-7],[147,81],[162,29],[399,-41],[-22,36],[302,9],[4,58],[208,-29],[83,45],[7,81],[162,-59],[68,-91],[180,-136],[119,108],[111,-62],[-43,-93],[61,-24],[144,81],[-284,117],[-36,69],[43,100],[97,-15],[115,-76],[119,29],[43,-60],[43,129],[122,-14],[68,64],[126,-72],[133,8],[-521,171],[-212,57],[39,157],[72,43],[216,-33],[58,67],[86,-17],[277,107],[43,-36],[165,-7],[61,36],[18,110],[83,66],[144,27],[-112,66],[-165,-143],[-25,-100],[-137,-16],[-111,78],[-205,5],[14,64],[259,155],[129,5],[-72,95],[-399,-43],[-143,-55],[-40,34],[-140,-69],[-86,31],[-169,-86],[-212,57],[-18,95],[172,39],[79,78],[40,-57],[180,0],[3,112],[-144,-17],[-68,110],[130,50],[3,102],[122,231],[140,-38],[-35,93],[-105,-24],[4,167],[75,29],[11,128],[137,48],[528,33],[112,-224],[136,-43],[72,-66],[227,-36],[172,14],[47,53],[183,-10],[90,38],[359,91],[-133,43],[-262,-79],[-75,0],[-230,-86],[-112,27],[-32,59],[-97,0],[-144,143],[-43,98],[100,52],[-125,107],[-137,10],[-151,-53],[-7,-45],[-140,43],[-36,143],[-130,-53],[-100,139],[61,100],[183,150],[187,74],[54,169],[305,14],[137,64],[129,-38],[274,-28],[172,-208],[306,-97],[46,119],[115,-5],[274,71],[262,41],[-101,40],[-348,-85],[-148,-3],[-90,-40],[-230,100],[-50,176],[-108,-12],[-46,74],[-223,55],[-273,-31],[-119,45],[-65,74],[7,102],[-72,-21],[116,133],[248,136],[115,141],[-44,76],[-161,40],[7,72],[126,131],[172,24],[557,138],[248,-262],[259,-148],[65,-64],[108,90],[129,43],[-298,50],[-108,43],[-129,136],[-137,62],[-97,88],[7,60],[187,131],[-7,73],[104,48],[187,12],[-147,31],[-155,-88],[14,-46],[-233,-166],[-166,-34],[-68,27],[-79,-55],[-147,-22],[0,55],[-155,-24],[-57,60],[-141,38],[-147,-48],[-453,-2],[130,48],[-47,104],[61,158],[111,14],[40,81],[83,12],[-11,114],[172,-7],[97,52],[-7,-64],[201,-7],[162,45],[65,88],[269,-16],[205,109],[79,88],[137,62],[115,181],[94,91],[-137,40],[-137,-147],[-93,-34],[-352,-343],[-173,12],[-137,-35],[-86,30],[51,48],[-173,5],[-50,95],[284,124],[-119,93],[0,109],[-72,-140],[-100,-62],[-141,-29],[-176,-78],[-223,-181],[-133,-50],[-262,-41],[-119,96],[-32,114],[-86,-76],[-43,138],[43,200],[86,-19],[-111,114],[17,119],[105,93],[-58,53],[-223,-17],[-61,48],[-21,131],[-69,123],[15,215],[108,217],[0,190],[104,107],[-29,124],[104,5],[108,76],[68,-88],[112,-7],[90,-126],[237,-108],[119,-26],[25,107],[72,-69],[-15,-133],[180,-60],[144,-135],[32,14],[-93,248],[194,-65],[-7,-93],[68,-9],[79,124],[72,-41],[234,60],[168,-74],[90,7],[18,167],[-208,38],[-97,-12],[-216,31],[-86,-33],[-158,23],[7,-47],[-209,5],[-219,95],[-7,88],[137,-26],[-29,74],[-130,7],[-154,69],[-47,86],[18,90],[-137,143],[-125,83],[-169,67],[-119,-19],[-4,83],[213,322],[-26,95],[115,3],[83,83],[320,5],[-25,-67],[223,-62],[-51,62],[90,2],[-39,91],[-72,-7],[25,102],[-65,74],[-417,12],[-126,100],[-208,52],[40,86],[-22,98],[54,102],[3,112],[-75,181],[29,196],[-40,114],[47,81],[187,-26],[108,93],[143,-38],[101,52],[252,-31],[-40,-214],[54,-69],[140,-74],[-28,-231],[302,-284],[115,5],[25,64],[-162,112],[75,72],[44,-72],[165,26],[-18,67],[-104,19],[82,114],[4,220],[-104,14],[-4,67],[-219,66],[-137,184],[79,43],[-75,38],[122,224],[97,85],[122,12],[173,-90],[90,38],[72,-84],[3,-223],[86,-134],[320,-55],[112,-66],[115,-12],[-7,150],[75,78],[61,198],[72,62],[457,-186],[107,-85],[62,-103],[212,-78],[201,-24],[22,-36],[204,-55],[18,57],[-107,43],[-8,79],[-79,43],[-298,50],[-97,57],[-43,119],[-108,93],[-306,28],[-136,153],[64,55],[169,-26],[-14,57],[97,14],[14,-100],[256,-138],[172,-3],[191,60],[287,-76],[230,-191],[202,-102],[187,-38],[133,-236],[154,-198],[61,69],[-61,67],[-39,138],[-119,155],[-126,76],[-104,17],[-112,136],[-93,-29],[-79,121],[-101,27],[-179,147],[158,24],[-4,55],[126,36],[-29,85],[-72,-54],[-7,112],[-198,2],[-97,36],[-43,76],[-259,55],[-133,2],[-7,107],[-136,138],[-166,5],[33,117],[-115,90],[-123,-19],[-204,29],[-33,79],[79,85],[-183,76],[-112,151],[65,19],[-36,81],[108,138],[101,5],[144,-81],[129,-134],[75,-24],[44,-147],[46,-22],[11,176],[147,-19],[29,-66],[155,-34],[136,186],[-18,229],[-125,62],[244,16],[-133,27],[-97,107],[248,2],[50,81],[-277,17],[-93,45],[22,188],[-162,29],[-72,74],[22,90],[-101,10],[-43,140],[-151,117],[-126,33],[61,179],[147,88],[22,-93],[183,-26],[8,-67],[100,-14],[122,-117],[54,53],[306,140],[-158,0],[-40,60],[86,97],[65,-59],[115,0],[7,-57],[166,7],[72,-79],[158,43],[18,-102],[57,162],[72,-43],[137,59],[14,60],[165,14],[15,-47],[316,-148],[180,29],[-94,76],[-262,33],[-198,133],[-176,22],[72,95],[-129,67],[68,88],[-108,-21],[-3,62],[133,38],[-252,-19],[21,159],[-115,122],[15,40],[165,-7],[-93,52],[54,119],[125,108],[-118,9],[104,48],[-18,105],[144,64],[25,-67],[140,-57],[68,22],[195,-86],[-8,-41],[141,-16],[54,71],[-184,24],[-25,98],[119,59],[-101,2],[-61,-100],[-241,67],[4,74],[194,-17],[-162,67],[-50,-24],[-79,81],[100,41],[176,131],[306,-12],[208,-129],[54,48],[-136,36],[-36,66],[-374,34],[75,54],[-151,65],[15,76],[-126,12],[-180,-74],[-39,38],[147,36],[-50,69],[39,181],[76,157],[104,91],[187,-19],[79,40],[119,245],[72,72],[39,345],[68,84],[335,-134],[187,24],[330,-21],[169,-105],[162,-34],[47,-57],[-33,-155],[69,-152],[100,-41],[11,-59],[-180,-119],[54,-53],[194,150],[26,103],[-169,74],[61,147],[179,-9],[11,59],[-183,148],[176,41],[22,-143],[136,-34],[15,-135],[97,14],[136,-41],[11,-88],[155,-12],[-8,-35],[173,19],[14,-165],[-205,-150],[11,-35],[-205,-141],[-97,-169],[-100,-100],[-47,-105],[97,-24],[68,134],[169,52],[22,67],[197,43],[26,202],[133,129],[172,4],[119,103],[-61,181],[32,136],[119,88],[61,-43],[194,48],[295,-53],[36,-69],[348,-95],[90,-184],[-47,-52],[144,-67],[-104,-107],[-151,-64],[-50,-67],[21,-88],[-57,-55],[-97,-281],[190,181],[22,64],[118,67],[-79,107],[115,12],[234,181],[162,179],[93,43],[270,24],[230,-62],[36,-129],[118,26],[83,-33],[-90,114],[29,29],[154,-43],[18,174],[238,-62],[104,21],[65,150],[115,-16],[115,50],[136,-98],[68,12],[80,-69],[-15,102],[148,74],[-29,53],[75,119],[122,9],[47,67],[72,-303],[126,39],[133,-5],[79,40],[47,-59],[68,54],[165,-126],[79,79],[209,-36],[137,38],[154,3],[119,40],[61,-76],[86,-14],[25,97],[223,84],[191,143],[176,71],[190,129],[94,-72],[381,29],[151,38],[147,-7],[-79,-160],[230,-48],[173,98],[190,22],[180,-15],[43,-50],[180,-19],[118,-76],[87,21],[104,124],[-22,65],[-154,33],[-266,150],[50,186],[187,93],[151,-72],[65,-140],[316,-17],[144,76],[136,3],[176,-38],[29,47],[205,38],[104,-71],[65,-115],[158,8],[227,59],[262,-12],[54,24],[194,-31],[-90,-117],[18,-171],[-68,-124],[-169,-31],[79,-105],[-47,-143],[-151,-164],[-201,-119],[-76,-172],[40,-212],[133,-102],[363,50],[-36,-326],[-194,2],[108,-79],[-90,-116],[-29,-124],[-79,-81],[-43,-210],[-165,-119],[-69,-12],[-136,-133],[-115,-67],[-191,-195],[-226,-93],[-288,-33],[-43,-48],[-219,-33],[25,-34],[-298,-71],[-101,-67],[-180,-181],[-68,5],[-68,-136],[-126,-93],[-133,-209],[-50,-19],[-137,-167],[-259,-117],[-158,-129],[-277,-104],[-104,-110],[-165,-38],[-227,-183],[-298,-141],[-43,-69],[-130,-50],[-136,14],[-133,-59],[-69,-115],[-115,-40],[-75,-269],[-169,-48],[-129,-126],[-284,-38],[-105,-60],[-133,-14],[-93,-57],[-129,-291],[-155,-5],[108,134],[-227,-38],[-61,76],[-136,45],[-18,-67],[75,-112],[234,-61],[169,14],[104,-255],[-140,-103],[11,-266],[-195,71],[-312,-36],[-119,-88],[-234,5],[-32,43],[-158,7],[-237,112],[-399,-29],[21,-66],[-147,0],[-101,102],[-183,62],[-176,224],[-223,69],[111,-126],[115,17],[90,-112],[-68,-31],[29,-74],[244,-126],[83,9],[18,-81],[133,26],[93,-47],[90,52],[388,48],[15,-79],[72,10],[89,-177],[116,-40],[186,5],[-115,114],[148,-76],[230,-46],[190,-123],[162,64],[370,200],[166,-29],[57,-66],[79,28],[112,-69],[-54,-57],[126,-17],[194,31],[208,91],[-3,43],[168,205],[198,28],[-57,-178],[-342,-382],[-280,-266],[-263,-177],[15,-59],[-97,-145],[-309,-296],[-191,17],[-86,-24],[-97,64],[65,177],[93,62],[-32,100],[-141,-17],[-61,-53],[-161,12],[-220,-112],[-43,-61],[-363,-227],[-237,62],[-223,-45],[-144,-79],[-129,36],[-122,-74],[18,-126],[-259,-88],[-291,-246],[-191,-114],[47,-114],[-104,-76],[79,-19],[269,159],[324,288],[201,100],[270,179],[197,62],[338,7],[7,-150],[475,60],[349,171],[71,-43],[198,-12],[-54,-85],[-158,-86],[-496,-450],[-61,-150],[108,-129],[-245,52],[-237,-109],[-25,-112],[-72,-67],[-367,53],[148,-81],[115,16],[47,-76],[-105,-150],[-68,-21],[-90,-124],[-230,35],[-273,-23],[-205,21],[-79,52],[-191,3],[-197,-74],[259,-193],[319,43],[274,-26],[424,128],[205,-105],[133,46],[118,105],[-3,138],[104,-26],[90,30],[108,153],[334,148],[75,128],[-125,112],[-123,0],[123,91],[276,12],[29,59],[360,-102],[276,-31],[295,40],[342,115],[201,145],[-65,19],[-194,-114],[32,64],[126,64],[122,12],[231,110],[-11,-57],[294,145],[-21,81],[367,47],[176,-71],[-40,-95],[-133,-41],[414,-38],[-4,83],[-252,167],[281,-21],[309,16],[219,127],[54,126],[-75,74],[262,21],[137,67],[176,14],[161,57],[256,41],[273,-33],[172,38],[-14,-77],[212,-85],[482,-160],[377,-98],[140,-14],[317,-78],[172,-12],[234,112],[312,83],[69,93],[313,64],[158,10],[39,-81],[108,-31],[219,64],[144,-67],[151,-21],[0,-88],[241,95],[183,-64],[69,50],[158,-17],[25,-43],[291,0],[97,-36],[79,29],[115,-98],[212,5],[58,-52],[97,71],[313,-28],[251,14],[155,-19],[165,55],[65,-46],[158,65],[3,90],[159,62],[262,-140],[97,26],[216,-29],[111,-55],[108,12],[374,229],[61,-31],[180,31],[287,-69],[108,48],[147,-12],[-14,-115],[302,-81],[75,72],[177,-81],[-18,-45],[111,-91],[79,-148],[183,-140],[234,-88],[-25,-222],[47,-159],[133,-98],[-40,-236],[72,-121],[187,-77],[-4,-47],[-122,14],[25,-121],[-82,-48],[143,-86],[-50,-114],[-226,-207],[-11,-103],[-137,-128],[-72,33],[-93,-79],[7,-133],[-140,-119],[-187,-105],[-47,-79],[-341,-245],[-104,-133],[-349,-562],[-90,-191],[-101,-276],[-39,-196],[47,-181],[161,-35],[-79,-48],[72,-50],[-147,-267],[-144,-186],[7,-73],[-190,-170],[7,-38],[-259,-221],[-4,-72],[-97,-116],[-39,-153],[-162,-95],[76,-219],[-33,-67],[29,-205],[-151,-200],[36,-26],[-86,-129],[-198,-200],[-115,-28],[-4,-115],[-82,-16],[-105,-160],[-129,-117],[-208,-64],[-119,-112],[-165,0],[-169,-164],[-130,-305],[-21,-107],[-94,-31],[-86,33],[14,112],[-255,26],[-97,-152],[94,-55],[215,9],[18,51],[101,-36],[187,7],[-76,-191],[-219,-71],[-122,-79],[-61,-100],[18,-152],[176,-65],[-94,-154],[-122,-103],[-162,-247],[-122,-67],[-83,2],[-125,-74],[-101,0],[-155,-121],[-43,-88],[-129,-50],[-108,-100],[-237,-84],[-108,-226],[-65,-71],[-122,19],[-216,102],[-287,-21],[-270,-112],[-108,47],[-291,-24],[-320,-123],[-377,-3],[-65,62],[-43,-47],[-144,-15],[-136,-121],[-122,-48],[-349,-314],[-205,-146],[-191,-88],[-147,-4],[-169,-84],[0,-45],[277,12],[270,88],[111,69],[554,188],[334,138],[43,57],[305,34],[166,100],[133,40],[54,86],[100,43],[256,10],[219,-110],[219,50],[76,-29],[-22,-278],[-40,-181],[-79,-98],[-183,-76],[-198,-10],[-36,-50],[162,10],[148,-84],[89,29],[40,93],[65,-50],[50,-155],[90,7],[75,-95],[194,-2],[65,-39],[360,-23],[147,-50],[144,-181],[165,-86],[97,-5],[83,-83],[-104,-124],[-108,-22],[-227,-193],[-129,-50],[-94,-92],[-266,-98],[-89,-5],[-399,-169],[-65,-64],[-76,57],[-82,-57],[-209,33],[7,64],[-165,110],[-273,40],[-140,-19],[-176,-93],[-209,-209],[-118,-74],[-62,17],[-129,-93],[-122,-153],[-69,5],[-248,-179],[-82,0],[-86,-138],[7,-164],[-90,-176],[-270,9],[-151,-90],[-61,64],[-233,-40],[-187,-131],[0,-55],[-115,40],[-137,-105],[-173,15],[-68,-53],[-7,-131],[-86,10],[-87,76],[-460,143],[-129,2],[-43,46],[-216,2],[-190,160],[-90,-103],[-133,0],[-25,69],[-155,-2],[-172,-67],[-220,41],[-154,126],[-58,-19],[25,-265],[133,-59],[105,98],[64,-12],[-7,-124],[126,-57],[180,0],[176,50],[187,-17],[79,-52],[305,-70],[94,-52],[176,17],[284,-60],[291,-28],[241,97],[212,-155],[356,-35],[75,40],[309,-31],[194,29],[119,-22],[245,-202],[136,-69],[209,-38],[54,62],[248,-8],[183,55],[111,105],[356,36],[133,86],[79,138],[-64,74],[140,42],[122,-14],[-115,141],[72,93],[104,-8],[187,215],[187,28],[226,-62],[29,27],[316,-41],[130,45],[154,-28],[51,-45],[161,-27],[94,-85],[-18,-72],[180,-95],[-40,-55],[122,-38],[97,-76],[191,43],[118,-69],[184,-17],[93,-86],[137,10],[32,-77],[255,-85],[8,-84],[165,-114],[230,-83],[36,-55],[194,5],[151,-48],[140,-7],[212,69],[317,-136],[248,-5],[57,-71],[-43,-133],[61,-70],[277,-73],[57,-60],[26,-221],[97,-55],[0,-57],[258,-324],[58,-22],[97,-176],[-104,-41],[284,-231],[3,-28],[331,-253],[140,-62],[101,-121],[100,-234],[108,-116],[176,-69],[83,33],[83,157],[39,-128],[115,-150],[-82,-86],[54,-76],[169,114],[319,-105],[162,-167],[187,-71],[-47,-50],[151,-198],[-104,-83],[126,-150],[21,-196],[159,-78],[-4,-441],[90,-69],[-4,-207],[-82,-31],[-112,-160],[47,-202],[129,-193],[76,-14],[126,-127],[-130,-274],[-7,-128],[72,-188],[86,-119],[86,-48],[58,-181],[144,-133],[21,-103],[-97,-38],[7,-57],[-107,-110],[100,-178],[112,-100],[28,-86],[-25,-136],[130,-152],[50,-5],[111,-131],[0,-122],[141,-126],[25,-143],[72,-69],[-94,-74],[166,-116],[154,-60],[-3,-57],[136,-67],[47,-136],[-97,-154],[50,-208],[58,-64],[-61,-71],[115,-422],[115,-103],[32,-157],[57,-78],[11,-231],[83,-162],[180,-150],[183,-215],[101,-66],[316,-141],[-140,-48],[-7,-59],[107,-246],[87,-90],[-8,-112],[-118,-2],[-79,-93],[187,-3],[125,62],[98,-7],[-11,98],[97,-74],[233,-88],[227,-31],[39,-64],[284,-131],[209,-60],[172,21],[115,-19],[173,-128],[302,-3],[280,-109],[234,-17],[68,-112],[69,-9],[32,-115],[72,-21],[151,57],[122,-107],[83,-14],[46,-120],[101,-64],[205,-55],[140,-7],[201,-74],[101,-133],[241,-167],[-68,-178],[50,-86],[158,-81],[50,9],[184,-152],[158,-279],[147,-214],[-32,-81],[72,-219],[54,-79],[115,-31],[-87,-45],[8,-62],[201,-171],[72,-103],[104,22],[169,-120],[352,-116],[-133,9],[-47,-138],[54,-131],[76,-76],[269,-153],[346,-62],[244,-128],[194,-38],[133,-79],[40,-81],[-187,-88],[-223,0],[-194,-48],[-119,-152],[-72,-22],[-75,-114],[-33,-140],[-7,-241],[22,-126],[208,-527],[130,-231],[28,-121],[191,-291],[331,-364],[111,-153],[464,-514],[190,-188],[22,-57],[338,-336],[165,-205],[115,-274],[40,-195],[-44,-72],[-176,-152],[205,221],[-36,96],[-219,157],[-262,107],[-223,33],[-266,-57],[-288,-100],[-198,19],[-161,45],[-374,298],[-32,72],[-356,242],[-112,210],[-201,72],[-155,14],[-212,-38],[-388,-129],[-366,-81],[-195,31],[-284,-57],[-183,-17],[-241,155],[-108,31],[-222,-17],[-227,-66],[-165,-224],[25,-110],[43,143],[453,138],[75,-9],[87,-98],[230,-162],[126,-40],[197,9],[245,165],[345,-8],[747,143],[115,-21],[389,-498],[147,-145],[334,-191],[360,-283],[108,-41],[107,53],[76,-91],[115,-52],[316,-327],[4,-78],[108,-76],[147,26],[83,-46],[86,-126],[180,-59],[29,28],[129,-105],[122,-7],[112,-159],[28,-129],[162,-205],[79,-14],[25,-164],[94,-162],[86,-88],[183,-298],[65,-162],[212,-324],[148,-336],[7,-150],[57,-107],[51,-215],[-44,-216],[-7,-258],[-72,-290],[-276,-86],[-187,-176],[-209,-115],[-72,-81],[-323,-190],[-36,-69],[-245,-186],[-86,-93],[-21,-128],[-62,-17],[-147,-253],[-280,-226],[219,155],[4,-153],[154,-83],[162,38],[162,-164],[219,-55],[21,-119],[274,-324],[122,7],[158,-47],[108,30],[302,-23],[-47,-24],[180,-100],[262,226],[119,74],[194,50],[47,105],[-15,147],[169,279],[104,350],[263,229],[388,7],[280,-17],[216,41],[68,-50],[26,105],[-133,-38],[-15,57],[212,7],[352,-60],[40,-35],[144,31],[169,-36],[298,-14],[-43,-65],[79,-28],[94,119],[97,2],[0,-62],[194,12],[165,-78],[589,33],[-71,31],[-220,-7],[87,71],[373,-112],[547,-131],[481,-33],[231,-29],[337,-74],[281,-114],[140,-100],[399,-200],[385,-307],[215,-124],[550,-388],[263,-210],[255,-255],[93,-121],[51,-162],[186,-443],[69,-227],[-58,-321],[15,-138],[-40,-15],[7,-155],[198,-612],[-86,-78],[-119,-246],[-21,-195],[25,-57],[-36,-155],[-227,-367],[-28,-145],[-98,-181],[-140,-107],[-118,-210],[-22,-291],[-47,-335],[8,-148],[-115,-236],[-141,-581],[-32,-57],[-543,-219],[-140,-81],[-194,-205],[-54,-150],[-140,-124],[-126,-64],[-36,112],[-158,83],[-29,136],[-100,50],[50,59],[-50,95],[-4,129],[-129,79],[-40,126],[-29,-79],[144,-164],[-14,-67],[97,-78],[-47,-107],[104,-70],[40,-147],[100,-38],[72,-172],[-122,-143],[-180,-76],[-161,-198],[-18,177],[-184,104],[-39,77],[18,159],[-432,119],[-183,74],[-219,181],[82,-150],[281,-181],[126,-5],[212,-69],[54,-47],[50,-200],[-75,-43],[-112,50],[-194,-67],[-219,24],[-61,86],[-101,14],[-191,-86],[-222,-21],[-83,33],[-144,-102],[104,2],[263,-57],[338,69],[50,-53],[316,3],[97,52],[220,-28],[86,43],[-4,-112],[-122,-72],[-190,-364],[-173,-62],[370,26],[126,-81],[-7,-81],[-349,-384],[-172,-111],[-209,-84],[-302,-167],[-104,-33],[-485,-14],[-72,255],[129,33],[-251,19],[-112,91],[-64,104],[-36,170],[-8,-198],[40,-72],[-94,17],[155,-107],[-133,50],[-172,-24],[-317,-200],[-11,-107],[-111,81],[-165,12],[179,-50],[112,-115],[-61,-21],[-187,47],[-58,-16],[205,-79],[-230,-169],[-359,-12],[-166,19],[-197,-78],[-126,52],[-40,-69],[-86,55],[25,-93],[94,-72],[337,-66],[-39,-74],[288,152],[136,36],[68,-50],[234,69],[162,181],[223,29],[129,-162],[-57,-222],[53,-159],[-129,-465],[65,-86],[133,8],[-25,-58],[-216,-216],[-406,-277],[-248,-133],[-266,-172],[-101,58],[-766,109],[-50,-67],[-169,-2],[144,-93],[-115,-62],[-302,-55],[-111,20],[-58,78],[-104,-12],[-65,103],[18,-122],[119,-19],[-191,-71],[-334,12],[-115,-127],[-40,-262],[-147,-50],[36,-95],[262,83],[-25,98],[90,148],[86,40],[284,-26],[392,0],[183,-79],[205,31],[176,-62],[180,10],[133,-124],[14,-129],[-129,-85],[-187,-7],[-32,90],[-86,55],[28,-105],[-154,29],[-112,-48],[40,-69],[-148,-98],[-168,3],[-133,-46],[-137,27],[129,-127],[141,-66],[100,-3],[169,-97],[7,83],[137,-17],[7,77],[112,-29],[97,-143],[79,133],[154,-14],[-90,119],[0,136],[205,31],[-54,-57],[36,-136],[252,-143],[0,-188],[262,-14],[209,-58],[158,22],[115,-26],[111,-100],[241,45],[363,-5],[126,36],[104,119],[209,10],[57,33],[176,-10],[40,38],[431,12],[263,58],[251,-29],[205,2],[65,41],[180,-14],[406,54],[50,50],[277,-14],[137,-117],[-62,-276],[-161,-183],[-270,33],[-72,-67],[58,-52],[36,-217],[179,-483],[4,-527],[-158,-245],[-241,-95],[-11,-48],[-151,-14],[-14,-89],[-94,-2],[-212,-102],[-284,-19],[-147,-81],[-7,-50],[-230,-96],[-442,-40],[-342,-129],[-277,-209],[-154,-200],[-90,-382],[57,-216],[62,-134],[-18,-66],[-162,-17],[-414,62],[-636,133],[-133,-16],[29,-41],[-155,-31],[-154,-88],[-295,-236],[-101,-119],[-388,-105],[-57,-40],[-550,-69],[-191,-72],[-435,-62],[-291,-105],[-151,-83],[-126,-210],[-122,-45],[-280,-276],[-33,-74],[-140,-38],[-237,50],[-97,69],[-223,86],[-93,-22],[-130,31],[-345,200],[-201,-14],[-593,179],[-223,86],[-431,95],[-396,45],[-413,-12],[-295,-67],[-237,-81],[-521,-61],[-615,0],[-162,-24],[-219,-74],[-313,-31],[-535,-138],[-180,-153],[-29,-90],[-151,-174],[-61,9],[-129,127],[-335,216],[-262,98],[-61,45],[144,103],[32,119],[133,26],[173,-74],[104,41],[43,97],[-151,-100],[-108,19],[-75,89],[68,76],[4,100],[-58,9],[29,-107],[-72,-126],[-155,-55],[61,83],[-43,112],[22,81],[-130,17],[47,-150],[-7,-157],[-97,24],[-144,114],[83,183],[-130,19],[-17,-69],[-130,58],[-29,-60],[-129,67],[-129,4],[-33,-140],[-82,67],[-72,-10],[46,-71],[18,-262],[58,-62],[-392,-86],[-129,112],[-22,143],[72,47],[79,153],[-151,45],[-237,31],[-29,43],[-133,-33],[169,-38],[58,-155],[107,-98],[72,-152],[-140,-120],[-68,-9],[-104,88],[-169,36],[-148,152],[-187,103],[-427,174],[-36,88],[-94,31],[-323,295],[-72,41],[-43,-74],[-65,88],[-262,128],[-58,-35],[-165,64],[129,-86],[198,-26],[172,-226],[295,-224],[176,-62],[-57,-31],[82,-136],[112,7],[-133,-133],[-104,-162],[-223,-2],[-238,-153],[-291,-47],[-266,-127],[-133,5],[-115,-45],[43,-50],[-212,-246],[-136,98],[-475,129],[-208,28],[-187,-19],[-86,-45],[-76,-141],[-352,55],[-194,5],[-363,-57],[-227,-112],[-161,-157],[-47,21],[129,69],[0,45],[-165,108],[-183,9],[-11,-43],[-173,29],[-187,74],[-122,-24],[-68,-93],[-33,-143],[123,19],[21,72],[191,71],[-15,-286],[112,74],[118,-133],[327,52],[-68,-195],[72,-81],[119,2],[-61,-95],[-101,-33],[-54,-141],[90,-19],[-97,-145],[-306,2],[-136,-24],[-194,-105],[-58,124],[-72,36],[-197,14],[-328,160],[-161,0],[-151,59],[-112,-50],[-133,-4],[-147,45],[-374,31],[-86,62],[-191,-7],[-82,35],[-284,5],[-79,-48],[-108,-142],[61,-60],[-104,-81],[-69,-124],[51,-93],[201,-2],[104,-193],[-18,-60],[-126,-104],[-43,-86],[-100,-55],[64,398],[-122,124],[-428,338],[-456,312],[-403,224],[-632,295],[-119,46],[-769,147],[-158,-28],[-65,-91],[-316,-131],[-216,-50],[-377,38],[-87,-57],[-32,-95],[-234,14],[-388,-19],[-237,-43],[-227,-69],[-136,-150],[3,-52],[-129,-160],[-209,-38],[-208,-129],[-119,-24],[-244,79],[50,105],[-108,148],[-122,269],[-97,31],[4,-167],[97,-107],[50,-343],[122,35],[-14,-59],[-259,-245],[-50,-136],[-130,-162],[-100,33],[-331,-9],[-136,-65],[212,34],[280,4],[68,-31],[-108,-276],[-14,-205],[115,-54],[47,-155],[-194,-34],[-90,74],[-122,-105],[-51,-119],[36,-262],[169,-7],[104,-52],[191,12],[-129,-105],[46,-64],[-122,-62],[-36,-141],[25,-83],[-115,-93],[-255,93],[-29,240],[-90,60],[90,59],[-64,46],[-238,-22],[198,-14],[-4,-81],[97,-67],[-28,-88],[61,-62],[-11,-81],[76,-33],[-36,-138],[-245,-58],[-151,-131],[-79,-128],[-72,-255],[-21,-226],[118,-91],[-118,-43],[-158,31],[-162,-143],[-104,-26],[-94,110],[-216,62],[94,159],[-22,234],[-82,-93],[93,-72],[-18,-78],[-147,-112],[3,-141],[-244,57],[-86,91],[-169,62],[-69,78],[76,-4],[14,154],[-154,108],[-43,69],[-191,121],[-176,5],[-22,110],[-107,-48],[-184,31],[-147,-48],[-104,-74],[-130,15],[-154,74],[25,54],[129,7],[-198,53],[-186,-7],[-47,33],[-15,143],[-50,57],[43,67],[-68,86],[122,16],[-323,5],[-148,33],[18,89],[-57,123],[-79,72],[75,212],[126,95],[108,186],[-86,-50],[-101,-150],[-101,186],[-104,112],[50,-191],[72,-81],[-72,-93],[22,-133],[-36,-103],[-165,-50],[-108,-78],[-90,26],[-54,-107],[205,28],[83,110],[143,21],[112,-164],[-270,-83],[176,-22],[69,-76],[136,76],[61,-93],[-32,-64],[-115,-24],[-79,-90],[79,-108],[-129,5],[-76,-57],[-43,176],[-122,88],[-299,141],[-266,24],[-219,-12],[-140,38],[-313,-33],[-97,-77],[4,-69],[-140,-47],[-8,-50],[-161,26],[-15,-43],[-312,-57],[-234,71],[-108,-64],[-234,12],[33,78],[-230,-123],[-97,-8],[14,158],[-57,69],[-166,-69],[-248,-62],[-72,-65],[18,-114],[58,-31],[-191,-162],[36,-78],[-36,-136],[97,-88],[-108,-57],[11,-93],[-93,-36],[-47,-107],[-54,102],[-334,41],[-115,-96],[-137,-162],[-122,-78],[-65,97],[-165,-47],[-97,-146],[7,-173],[-65,-117],[-82,-14],[-87,-86],[-61,93],[119,62],[-187,4],[54,165],[-76,205],[-172,-12],[-104,52],[122,-129],[7,-102],[65,-24],[-61,-124],[-158,29],[68,-81],[133,-19],[-191,-103],[25,-59],[-100,-81],[-11,-88],[61,-41],[-126,-88],[-427,-19],[100,-36],[65,36],[230,-19],[158,-95],[11,-131],[68,-3],[87,-131],[-72,-42],[-18,-120],[-180,-73],[39,-86],[-61,-95],[-179,35],[-223,-19],[-44,-128],[-99,-98],[12,-105],[-97,-76],[-124,-7],[-18,112],[-197,62],[18,59],[-130,124],[68,200],[-65,131],[-86,31],[7,126],[-241,220],[-111,73],[-194,-14],[-166,124],[-122,7],[-129,-62],[-4,67],[-129,55],[-97,104],[-180,46],[-248,-41],[3,-69],[-107,-55],[93,-174],[-115,-233],[-187,-90],[-305,-24],[-80,-79],[-86,29],[-190,-69],[-234,252],[54,122],[97,38],[-50,300],[-51,97],[94,77],[-4,71],[140,148],[137,38],[133,-7],[212,226],[50,-36],[227,127],[115,102],[79,-17],[198,46],[104,-41],[72,-129],[223,-71],[21,60],[191,152],[61,119],[-18,95],[108,27],[54,-65],[158,12],[190,100],[83,115],[108,16],[64,88],[69,3],[147,109],[50,134],[-3,128],[83,34],[136,-17],[126,172],[176,66],[47,229],[-68,112],[79,28],[-8,122],[205,19],[-68,40],[151,5],[32,105],[72,-79],[180,103],[104,131],[68,202],[-50,50],[36,134],[-79,71],[126,110],[-22,121],[25,148],[-68,74],[115,7],[115,-86],[112,19],[86,138],[172,88],[-28,-111],[72,-22],[53,-240],[26,47],[183,-40],[75,35],[230,15],[-237,16],[-93,-28],[-162,119],[-32,179],[97,90],[-126,102],[111,58],[65,-84],[169,-12],[75,100],[338,3],[144,26],[155,205],[36,274],[57,152],[126,3],[86,114],[119,2],[47,72],[111,14],[32,93],[141,79],[25,185],[201,117],[47,88],[140,38],[190,136],[26,405],[3,319],[-68,162],[11,214],[129,160],[7,207],[76,108],[-7,376],[53,112],[364,-5],[133,-59],[154,-5],[194,-148],[133,-57],[169,-10],[280,60],[173,176],[129,184],[148,45],[65,162],[64,24],[51,-86],[122,-5],[0,-83],[-83,-93],[86,24],[58,109],[43,181],[126,81],[183,-19],[47,98],[187,-67],[-104,98],[-144,0],[-4,-50],[-183,-15],[-184,-80],[-43,-84],[-151,91],[-43,93],[4,250],[-151,45],[47,88],[-166,86],[43,45],[216,-24],[47,46],[39,188],[-136,133],[111,19],[54,74],[198,0],[341,119],[76,-24],[144,65],[111,2],[129,-79],[141,69],[460,29],[215,107],[223,-64],[122,59],[205,31],[205,-26],[151,119],[94,-69],[276,-19],[281,-69],[348,-36],[76,-54],[194,61],[61,62],[227,12],[251,-81],[58,10],[190,-150],[133,16],[108,-126],[176,-100],[230,22],[137,-31],[158,12],[79,-34],[248,19],[72,53],[259,57],[126,71],[133,-19],[161,76],[173,17],[190,-21],[133,-62],[133,24],[169,114],[83,12],[-83,-212],[-93,2],[-65,-62],[151,22],[212,367],[0,95],[-122,174],[50,495],[-158,62],[280,-67],[65,234],[-65,95],[166,41],[29,154],[-119,48],[248,93],[115,-21],[108,35],[118,117],[26,129],[107,71],[105,153],[194,121],[133,145],[133,26],[39,53],[274,2],[61,57],[89,-38],[-39,93],[147,138],[158,246],[18,166],[133,103],[98,181],[-112,59],[-50,-42],[-173,-24],[-201,-205],[-259,-24],[-252,-105],[-330,-174],[-176,-31],[-245,-85],[-36,21],[-287,7],[-205,76],[-58,-95],[-553,-300],[-230,-67],[-94,-197],[-140,-138],[-32,69],[-122,21],[7,-105],[93,-69],[-39,-114],[7,-193],[-133,-55],[-245,26],[-208,-71],[-29,-62],[-158,-10],[-140,58],[-194,-100],[-105,23],[-309,-23],[-104,61],[-172,-4],[-155,47],[-323,57],[-133,-21],[-123,36],[-241,340],[-287,193],[0,74],[-122,60],[-256,-48],[-118,38],[-187,260],[-147,326],[-126,207],[-54,-21],[-47,138],[-266,236],[25,79],[-115,-27],[-215,7],[-47,-45],[-158,-33],[-33,38],[-230,-17],[-111,-57],[-101,-124],[0,-121],[187,-81],[-133,-34],[-144,39],[-79,-36],[-79,38],[-140,-36],[-50,-55],[-288,103],[-223,-5],[-97,-119],[90,-60],[-32,-59],[-255,55],[-101,-17],[7,-86],[-190,48],[-317,174],[-161,21],[129,81],[-36,184],[-79,123],[47,51],[129,-8],[22,55],[147,95],[43,134],[68,-100],[227,-79],[374,95],[158,58],[93,78],[158,48],[76,88],[-83,169],[18,-183],[-36,-46],[-431,-64],[-219,229],[-151,31],[-112,-48],[-244,-21],[-101,-77],[-215,46],[-191,138],[-176,188],[-61,186],[90,-41],[75,29],[223,-67],[-101,107],[-197,10],[-72,40],[-7,131],[97,251],[118,109],[-144,-59],[-147,-236],[-137,-72],[-258,103],[68,74],[-40,61],[-93,-119],[18,-57],[169,-107],[25,-62],[-172,-86],[-205,0],[-486,67],[-125,-71],[-227,35],[-234,-35],[-158,-53],[-129,-97],[-7,-91],[72,-79],[-108,-159],[47,-50],[-144,-134],[32,-40],[-320,2],[18,-74],[-122,-9],[-29,-64],[-162,31],[4,40],[-374,31],[7,-76],[-89,-7],[-126,-77],[-54,-138],[-122,-26],[0,-107],[-162,2],[-61,60],[-202,69],[-151,-26],[-190,90],[-108,5],[-18,105],[61,90],[-108,184],[-212,26],[-154,121],[82,98],[213,-21],[0,-84],[194,-26],[25,60],[-83,31],[50,57],[133,7],[126,-43],[184,-5],[43,-131],[237,24],[-237,72],[115,121],[151,43],[100,-43],[79,74],[83,-7],[43,78],[122,3],[126,-131],[-93,159],[-137,-12],[-7,103],[72,12],[-151,64],[54,233],[-112,53],[-143,2],[-65,-69],[155,55],[82,-50],[11,-243],[83,-45],[-36,-167],[-194,-69],[-65,40],[-176,-26],[-158,-64],[-155,31],[-162,71],[-50,-31],[-295,-7],[-61,122],[-122,-88],[-378,40],[36,-64],[112,-29],[-155,-207],[-90,86],[4,162],[-104,21],[-47,93],[-115,5],[-162,85],[-3,50],[284,-35],[46,181],[112,-5],[165,150],[266,-31],[104,129],[-7,247],[-75,146],[14,52],[-83,174],[-75,64],[-252,-4],[-61,40],[-165,-7],[-40,50],[-179,-5],[-47,-43],[-94,34],[-183,-84],[-129,-14],[-29,50],[83,98],[-58,69],[133,78],[-86,110],[334,79],[147,121],[155,24],[90,150],[270,-10],[97,117],[165,-9],[101,78],[97,-5],[18,136],[-90,65],[129,97],[-108,84],[122,95],[-10,40],[334,-45],[11,-36],[187,41],[68,-100],[-68,-76],[36,-50],[258,35],[159,72],[75,83],[-4,110],[123,-38],[43,-79],[194,24],[147,-19],[-93,162],[176,135],[198,27],[176,159],[208,346],[126,-89],[97,-23],[115,-148],[18,112],[-111,152],[32,96],[76,-10],[201,81],[388,-2],[104,59],[83,-50],[248,-26],[140,72],[36,76],[115,66],[40,110],[68,-50],[151,74],[223,195],[126,136],[115,28],[43,-71],[176,24],[287,176],[144,124],[166,33],[172,112],[133,155],[7,72],[87,21],[61,117],[161,157],[112,217],[21,104],[151,284],[101,472],[101,219],[72,33],[-4,150],[-43,245],[255,-14],[147,62],[115,148],[83,-29],[61,76],[112,43],[-148,-2],[-294,-100],[-299,-55],[-100,12],[-241,419],[-148,165],[76,247],[140,248],[93,36],[162,124],[-14,181],[165,12],[126,90],[104,21],[58,108],[93,19],[166,128],[-148,-50],[-90,-69],[-251,-59],[-79,-96],[-97,-23],[-83,62],[-112,200],[-416,469],[-47,83],[172,148],[54,131],[-14,90],[-162,265],[36,76],[198,43],[205,12],[169,195],[-137,-12],[-183,-126],[-69,33],[69,84],[-148,55],[-61,-136],[-251,-53],[-310,103],[-237,-69],[-341,-12],[-72,-24],[-29,-129],[-284,41],[-129,-10],[-140,-121],[-313,-93],[-122,-141],[57,-59],[-158,-72],[-58,-100],[8,-114],[93,-26],[25,-81],[-61,-91],[-140,17],[-104,-133],[-79,59],[21,160],[-226,138],[-212,50],[-234,-217],[-108,53],[-176,-103],[-79,69],[-144,0],[-75,-178],[-155,59],[-72,93],[97,52],[15,98],[86,124],[97,40],[-25,160],[190,43],[36,121],[155,55],[0,72],[115,159],[115,-5],[83,139],[143,33],[115,107],[288,-9],[101,26],[316,236],[79,140],[137,131],[194,0],[111,129],[255,197],[69,129],[25,272],[-76,255],[61,78],[119,-217],[54,88],[11,186],[205,86],[136,193],[291,176],[18,167],[101,93],[201,52],[248,155],[115,-38],[108,26],[61,-45],[309,57],[148,67],[61,71],[262,105],[191,33],[320,177],[90,-22],[104,84],[86,-8],[-39,201],[-223,111],[61,91],[244,-48],[40,-116],[111,-15],[205,55],[83,-88],[154,-33],[4,-86],[147,-86],[403,-19],[115,19],[172,-38],[302,88],[349,141],[237,112],[79,-15],[173,74],[370,119],[144,0],[219,50],[108,-185],[133,-96],[489,-231],[136,-121],[281,-198],[298,-176],[151,43],[-144,35],[-32,222],[83,38],[-144,79],[-79,147],[-47,179],[-101,124],[-172,119],[-108,138],[-54,122],[115,128],[108,53],[410,142],[161,110],[231,55],[179,-360],[90,-262],[144,-107],[147,-260],[191,-174],[86,-9],[176,-124],[245,17],[212,109],[223,-2],[208,76],[-119,122],[-204,-48],[-166,88],[-115,-48],[-273,65],[-302,217],[-280,138],[-112,104],[-93,191],[-47,255],[-68,105],[-144,119],[14,67],[-140,235],[-14,181],[-237,177],[0,202],[93,157],[140,172],[133,228],[184,191],[158,117],[7,64],[118,169],[123,50],[-4,124],[76,36],[-8,112],[-230,16],[-255,50],[-187,160],[-75,172],[18,566],[50,200],[-22,451],[281,85],[11,-283],[79,-102],[129,-50],[-4,-162],[47,154],[-158,141],[-32,288],[438,145],[209,-35],[129,66],[151,146],[-136,45],[-54,176],[-108,141],[-40,116],[-118,103],[115,43],[82,178],[169,115],[122,31],[195,105],[43,157],[57,36],[43,138],[-118,47],[-51,131],[-89,110],[-4,105],[-191,83],[33,93],[180,83],[68,-2],[100,136],[123,69],[-79,159],[-29,-176],[-194,-69],[-61,-105],[-76,12],[-295,-95],[-86,-95],[-32,-215],[-399,-86],[-144,93],[47,136],[-245,176],[130,55],[-97,193],[-151,55],[-8,-107],[123,-46],[-25,-81],[-94,-54],[4,-86],[-69,-67],[15,-162],[-112,-78],[-61,-143],[-208,-191],[-72,-93],[-133,-83],[-104,-107],[-130,97],[4,62],[-112,84],[-111,-141],[-129,117],[-26,221],[54,200],[-133,69],[22,58],[176,7],[72,64],[21,255],[62,31],[10,233],[-75,134],[-94,59],[18,-166],[-82,-124],[-101,-74],[83,-136],[-87,-98],[-133,-4],[-43,47],[-133,-78],[-118,9],[-101,103],[-208,297],[-238,246],[-104,169],[29,138],[-58,229],[11,121],[79,81],[-18,117],[-111,-67],[61,-71],[-79,-31],[-112,100],[-158,257],[-463,493],[-105,69],[-122,184],[-118,126],[-108,21],[-155,208],[187,107],[86,214],[122,176],[-21,165],[75,109],[8,177],[-51,238],[69,-31],[32,112],[201,162],[90,112],[147,276],[216,121],[165,172],[29,219],[-46,153],[183,333],[82,238],[209,198],[137,62],[3,-41],[291,-95],[123,-98],[-26,134],[144,45],[94,172],[-151,-96],[-184,36],[-28,71],[93,151],[370,161],[162,27],[137,-46],[36,-57],[136,-35],[148,-91],[176,-2],[237,88],[54,66],[151,-2],[-198,76],[-72,-47],[-54,66],[158,131],[62,129],[-223,-95],[-194,-3],[-166,-104],[-309,97],[-115,10],[-201,-62],[-79,31],[-76,-60],[-190,34],[-133,66],[-331,-57],[-248,50],[-176,138],[-130,-155],[-151,-57],[-330,0],[-191,103],[-133,188],[15,-195],[-58,-27],[50,-114],[-61,-176],[8,-124],[89,-33],[58,-162],[-86,-110],[-123,-57],[4,-115],[-356,65],[-323,7],[-33,33],[-140,-66],[-93,-100],[-141,-70],[-179,-21],[-40,91],[-140,69],[-47,-98],[108,-69],[-3,-79],[-101,26],[-101,129],[-43,-17],[76,-119],[-133,27],[-33,-39],[162,-150],[68,-12],[-108,-97],[-111,2],[-101,-107],[-219,-81],[-201,-48],[-165,-140],[-98,-22],[-176,31],[-248,-21],[-133,98],[0,85],[108,186],[-79,117],[-11,112],[-161,-248],[-26,-379],[-89,10],[-40,83],[-309,19],[-162,165],[-14,81],[-148,47],[-72,143],[-3,186],[83,76],[-105,36],[-36,-83],[-165,-115],[-36,-59],[-205,76],[-72,-2],[-381,169],[-72,121],[-68,3],[18,92],[-93,53],[-177,-115],[22,-247],[65,-207],[126,-60],[248,-69],[75,-103],[-14,-95],[-162,34],[61,-115],[-79,-55],[104,-52],[-47,-167],[4,-266],[61,7],[7,-112],[-86,-122],[-180,-119],[-100,5],[-241,131],[-237,48],[-263,128],[-147,162],[-155,36],[-61,76],[-50,174],[-144,112],[-108,21],[-291,148],[-291,233],[-313,10],[-162,76],[-176,231],[-201,48],[-25,-91],[-270,-90],[-276,-126],[-151,-198],[133,-279],[-11,-112],[136,-164],[69,-255],[7,-114],[65,-79],[190,-95],[-93,-91],[-15,-150],[47,-116],[129,-5],[4,-48],[-147,0],[-18,38],[-263,41],[-277,219],[-54,190],[162,81],[-122,148],[50,110],[-223,43],[40,131],[-90,21],[-36,83],[36,89],[-201,150],[-140,166],[-148,46],[-75,109],[-90,5],[-241,190],[-61,81],[22,91],[-256,355],[-14,348],[54,112],[-54,95],[111,205],[87,74],[97,-17],[212,98],[126,-50],[25,-101],[72,-42],[82,-243],[-75,-31],[36,-98],[0,-167],[75,-102],[184,-129],[100,5],[137,95],[-36,172],[-65,45],[0,93],[-154,224],[-76,174],[-90,105],[-32,109],[50,212],[166,269],[86,50],[25,153],[76,59],[35,272],[116,57],[283,198],[141,224],[194,164],[126,69],[0,222],[100,185],[47,22],[4,295],[-58,114],[36,48],[205,86],[21,93],[213,93],[25,81],[-15,252],[144,164],[223,117],[144,-5],[230,58],[100,147],[-14,122],[104,62],[-3,107],[57,9],[-25,146],[-169,155],[-57,114],[-108,0],[-65,83],[97,-36],[86,43],[-50,300],[-212,172],[-316,167],[-43,50],[-137,21],[-158,-21],[-33,78],[-93,-50],[-50,48],[79,57],[-130,134],[-187,109],[-14,83],[-270,127],[8,195],[125,67]],[[68432,75751],[94,-160],[-65,-93],[-201,-26],[61,69],[46,172],[65,38]],[[68849,76225],[-11,-126],[-129,-31],[140,157]],[[68533,76594],[-97,10],[140,50],[-43,-60]],[[68723,77039],[-266,-143],[58,-31],[140,34],[18,-157],[-162,38],[-18,-43],[-212,12],[-61,126],[176,112],[327,52]],[[68087,77106],[126,-133],[-65,-74],[-93,9],[-58,115],[90,83]],[[69453,77137],[-158,-110],[-25,72],[183,38]],[[67889,77204],[51,-100],[-76,21],[25,79]],[[68022,77370],[137,-78],[-79,-67],[-58,145]],[[71344,77487],[-133,-90],[18,69],[115,21]],[[66951,77761],[115,-43],[-3,-76],[104,-40],[-36,-65],[198,-14],[327,-148],[158,-107],[-122,-57],[107,-14],[0,-89],[101,-88],[-101,-88],[151,-21],[-93,-67],[212,-24],[-201,-157],[-306,-62],[-64,-86],[133,-38],[89,24],[90,119],[194,22],[126,-17],[50,50],[105,-67],[-108,-107],[147,24],[-57,-55],[-273,-52],[-130,0],[-190,64],[79,-67],[-140,-28],[-51,59],[-277,-40],[-190,174],[-18,74],[-129,150],[-209,185],[-4,174],[-71,53],[-295,4],[-18,74],[79,115],[72,190],[108,79],[111,-3],[147,81],[83,5]],[[67214,77823],[93,-57],[104,26],[43,-119],[-89,-36],[-177,43],[-54,126],[80,17]],[[69841,78571],[18,-71],[-93,52],[75,19]],[[71944,78664],[104,-64],[-115,-60],[11,124]],[[70456,79081],[18,-150],[-115,-100],[-40,-98],[115,-100],[0,-55],[-162,-102],[-32,64],[-147,52],[-270,39],[-72,-55],[-161,19],[122,274],[122,112],[72,-124],[205,-43],[115,86],[-22,114],[155,-2],[97,69]],[[69406,79121],[83,-159],[-151,-12],[-119,66],[-3,65],[190,40]],[[69442,79424],[50,-91],[-89,-57],[-220,21],[76,79],[183,48]],[[50905,79486],[69,-146],[-187,3],[100,71],[18,72]],[[71340,79538],[18,-121],[-104,7],[-29,76],[93,-26],[22,64]],[[68357,79607],[89,-12],[-25,-71],[-64,83]],[[67900,79657],[36,-52],[183,-60],[101,-69],[97,-7],[244,-126],[76,57],[86,-95],[133,-19],[29,-74],[-97,-22],[205,-166],[136,-27],[29,-212],[-65,-19],[-53,-119],[-108,93],[-158,-17],[68,-69],[-79,-138],[-97,17],[-126,-67],[-86,-98],[258,-69],[105,5],[122,115],[234,-8],[7,-40],[194,-76],[18,-124],[133,100],[7,124],[108,69],[18,-84],[72,46],[-4,-167],[108,-17],[-133,-57],[11,-171],[165,4],[165,89],[65,102],[86,-48],[130,5],[154,98],[40,-248],[-43,43],[-140,-17],[-169,-64],[75,-57],[76,-155],[-51,-67],[198,17],[-29,-55],[122,-50],[51,98],[-97,-10],[54,129],[-173,28],[410,165],[90,2],[122,76],[86,-69],[-86,-150],[22,-240],[-252,28],[-79,-88],[-104,31],[-133,-114],[-11,-72],[-122,-69],[25,-45],[-79,-79],[-108,143],[-241,96],[-86,-41],[97,-50],[-115,-45],[-87,-129],[187,38],[-57,-102],[25,-67],[205,0],[-129,-81],[-184,-40],[115,-48],[43,-150],[-107,14],[-98,-138],[-122,-81],[79,-55],[-36,-97],[-97,-62],[202,-110],[-94,-186],[-244,-38],[-33,105],[-68,-29],[-104,181],[72,24],[-15,165],[-136,140],[-68,0],[-44,98],[87,43],[68,-67],[101,2],[-15,60],[-151,107],[-108,-74],[-79,17],[133,121],[173,-7],[176,38],[14,-81],[65,62],[255,31],[36,62],[-190,-28],[-202,52],[11,41],[158,76],[198,-79],[-104,222],[158,45],[18,98],[-219,-41],[-11,107],[-266,362],[36,129],[-79,21],[-166,-147],[-100,-41],[-302,-40],[-108,-69],[-180,28],[-93,-57],[68,-40],[-93,-29],[-184,24],[-90,-55],[-104,43],[-75,-52],[-133,112],[-94,145],[36,217],[-122,45],[4,136],[82,-22],[187,26],[43,193],[-161,172],[0,183],[-101,34],[0,-84],[-144,26],[-86,-38],[101,-83],[111,7],[61,-64],[-79,-74],[176,-184],[-313,139],[-194,2],[187,-79],[47,-104],[-129,16],[201,-140],[-94,-100],[26,-48],[-191,-7],[-14,-83],[-105,-19],[-143,45],[-8,45],[-165,48],[29,74],[-94,211],[47,270],[68,66],[-46,86],[147,38],[-93,79],[-11,207],[21,119],[-64,22],[93,114],[65,14],[104,155],[86,45],[162,7],[273,105],[259,12]],[[71872,79679],[22,-91],[-144,36],[122,55]],[[71563,79712],[108,-52],[-126,-10],[57,-93],[198,-21],[119,26],[11,-50],[-180,-17],[-43,-78],[90,-100],[341,54],[-54,-78],[54,-138],[126,-24],[-119,-96],[-151,0],[-97,-57],[-118,50],[-4,-90],[-86,31],[54,119],[-26,76],[-172,83],[-162,-50],[104,-95],[-21,-133],[-281,19],[4,83],[112,105],[-4,79],[129,40],[155,-17],[39,120],[-104,50],[-230,207],[133,-24],[144,81]],[[69625,79798],[141,-55],[-51,-336],[-129,88],[-40,236],[79,67]],[[68677,80048],[172,-24],[72,-157],[280,-5],[184,81],[93,-74],[-129,-95],[-22,-76],[86,-208],[-233,-73],[-281,-3],[-222,93],[-105,72],[-50,97],[-83,24],[-25,133],[86,93],[177,122]],[[70308,80274],[69,-98],[-79,-112],[-36,201],[46,9]],[[70876,80447],[151,-104],[-118,-59],[-97,33],[7,121],[57,9]],[[70733,80486],[32,-64],[-54,-107],[191,-67],[-94,-141],[-75,-181],[10,-193],[137,-104],[-11,-72],[-219,10],[-130,-60],[-25,193],[-208,117],[-4,159],[220,-69],[93,50],[18,146],[-94,57],[47,128],[-18,105],[184,93]],[[72932,81015],[15,-231],[266,-86],[-313,-7],[-22,52],[-136,19],[-237,-93],[-47,-109],[-155,-136],[40,76],[-58,36],[-122,-62],[108,-57],[65,-174],[-87,86],[-151,43],[-125,-7],[3,-153],[-97,53],[-61,100],[-86,-89],[3,74],[-143,24],[-69,-36],[-28,-116],[-159,-100],[-43,-153],[-97,103],[7,-155],[-64,5],[-40,190],[58,126],[194,67],[14,86],[205,121],[187,53],[-68,64],[111,0],[-136,119],[-4,117],[216,-26],[140,104],[230,-7],[-68,-95],[-115,-19],[-101,-114],[-40,-136],[115,-5],[169,48],[90,83],[201,122],[133,-22],[112,31],[3,112],[187,74]],[[69439,81422],[57,-5],[43,-104],[-93,-10],[36,-164],[-202,-12],[-32,-84],[111,22],[220,-124],[115,12],[25,-62],[101,38],[18,-100],[100,-43],[11,-171],[173,14],[111,-181],[-147,36],[-115,-177],[-72,62],[79,155],[-76,12],[-269,245],[-238,22],[133,-122],[-233,-69],[-15,-62],[-161,129],[-119,31],[43,64],[-21,167],[-241,121],[-87,134],[270,-85],[54,47],[111,-19],[159,57],[28,164],[123,62]],[[69974,81651],[58,-93],[-29,-100],[-58,7],[-39,-117],[75,-81],[-43,-147],[-86,40],[-101,-19],[-11,198],[94,97],[54,191],[86,24]],[[73188,81698],[72,-69],[-187,-16],[-94,-138],[97,-96],[-136,-69],[-58,67],[-154,14],[129,186],[-29,62],[169,2],[191,57]],[[78026,83085],[198,-60],[17,-57],[-97,-74],[11,-86],[-86,27],[-32,-122],[-133,-2],[-62,55],[65,38],[58,266],[61,15]],[[80952,86953],[158,-62],[-97,-78],[-161,23],[-41,89],[50,51],[91,-23]],[[79877,87136],[-13,-53],[-108,53],[121,0]],[[79715,87869],[4,85],[74,-45],[-78,-40]],[[79985,87940],[-175,0],[161,36],[14,-36]],[[79877,88101],[-145,22],[27,81],[101,-36],[17,-67]],[[75176,88231],[169,-45],[26,-116],[-67,-197],[-266,85],[10,49],[-145,41],[-37,67],[121,89],[189,27]],[[81643,88423],[30,-130],[91,58],[30,-120],[280,-41],[37,-40],[-54,-116],[-64,-4],[-97,120],[-91,40],[-122,-178],[-27,-215],[-256,72],[-91,76],[-7,134],[81,107],[-239,183],[17,85],[371,-9],[80,80],[31,-102]],[[77414,89856],[283,-44],[91,22],[64,-156],[-145,-23],[-54,-53],[-118,22],[-229,161],[108,71]],[[82681,90138],[-172,-130],[-7,-44],[-155,-99],[-152,-156],[-161,0],[-226,94],[101,53],[-91,85],[-185,14],[91,129],[256,-18],[-10,-49],[172,67],[80,-18],[98,103],[236,-27],[152,49],[-27,-53]],[[83668,90571],[118,13],[64,-49],[-253,-40],[-37,67],[108,9]],[[81174,90893],[-107,0],[0,62],[101,0],[6,-62]],[[80955,91085],[-67,-18],[-105,93],[38,67],[134,-142]],[[80200,91281],[41,89],[64,-49],[-105,-40]],[[82158,92215],[118,-5],[64,-67],[-91,-76],[-118,14],[11,-67],[-172,49],[188,152]],[[82981,92322],[91,-41],[107,18],[105,-76],[-20,-116],[101,-9],[188,90],[71,-103],[-17,-85],[-225,-201],[-172,94],[-17,49],[-118,-31],[-71,67],[-202,-18],[121,-54],[118,-111],[-199,-85],[-158,94],[-88,205],[-155,134],[-13,80],[64,94],[175,-18],[135,-53],[179,76]],[[80160,92246],[-57,-425],[13,-241],[-64,-85],[-212,14],[-14,-45],[199,-40],[-37,-76],[51,-85],[-14,-89],[105,-31],[-10,-148],[188,90],[108,-72],[125,121],[91,22],[118,-58],[111,-210],[135,-54],[-37,-84],[64,-58],[121,53],[10,-103],[-118,14],[-27,-90],[172,-40],[44,-85],[135,143],[145,5],[6,62],[145,76],[145,-13],[0,-72],[-320,-272],[-172,-76],[10,-121],[81,90],[253,-40],[-47,-54],[20,-205],[-145,-23],[-135,-89],[-91,49],[-232,4],[-10,-66],[145,-23],[-11,-49],[159,-76],[81,36],[81,-72],[144,50],[-74,-152],[10,-76],[-188,0],[-81,-36],[-145,-138],[118,-59],[158,14],[71,-31],[10,-85],[-290,-27],[-87,-143],[-155,-9],[47,152],[-145,-13],[37,-58],[-253,-175],[108,0],[108,54],[27,-161],[135,54],[-41,-161],[-145,-147],[10,-32],[270,179],[-10,-103],[47,-71],[-101,-161],[185,-112],[11,-49],[-156,9],[48,-134],[-155,27],[37,-121],[-54,-17],[-135,89],[37,-94],[-27,-98],[-182,-72],[101,-62],[-6,-224],[74,-62],[6,-116],[172,-22],[-54,-54],[-134,18],[-189,-36],[30,-201],[178,-160],[-57,-12],[11,-157],[-97,26],[-61,147],[-11,-80],[-295,60],[144,-155],[-40,-60],[47,-88],[-72,-52],[47,-108],[-83,-26],[-22,-114],[-104,9],[108,-85],[18,-181],[-90,-53],[90,-133],[-14,-124],[-187,195],[-69,-135],[-50,97],[72,91],[-75,131],[-130,14],[-86,-131],[-43,55],[-133,-22],[-79,241],[154,17],[-29,121],[44,131],[111,-21],[68,69],[-18,88],[-140,36],[29,121],[122,-55],[-73,114],[17,140],[134,18],[17,156],[115,98],[-27,152],[-135,-116],[-108,72],[-91,-76],[-64,22],[81,116],[78,40],[-54,125],[43,85],[128,107],[-101,45],[118,31],[54,108],[118,-50],[-20,99],[91,58],[-131,40],[74,98],[6,304],[-60,-152],[-64,-58],[-135,18],[54,36],[0,142],[-78,58],[91,121],[-134,-18],[-172,-85],[10,139],[-202,-89],[23,-139],[-104,-129],[-213,84],[-20,-223],[-118,103],[-111,31],[-145,-13],[-17,156],[-118,-13],[-94,71],[27,143],[81,36],[162,0],[-64,192],[-34,-99],[-182,-80],[-101,-134],[-213,-4],[-37,102],[118,41],[44,-50],[101,18],[-145,121],[-134,-107],[-108,-18],[-199,94],[47,53],[-330,125],[20,197],[67,152],[-128,44],[0,63],[118,94],[135,35],[351,18],[296,-89],[27,125],[162,0],[216,53],[121,-17],[-27,178],[94,54],[27,-72],[135,-35],[216,0],[64,102],[-91,-49],[-320,130],[-7,134],[-74,71],[128,9],[6,63],[172,58],[118,-32],[27,99],[-54,53],[-249,81],[10,281],[-212,139],[-17,-67],[-91,-14],[-54,116],[101,81],[-293,31],[-81,71],[-98,-102],[-91,13],[-188,-36],[-159,94],[101,54],[71,156],[108,-36],[175,90],[-23,147],[53,98],[226,94],[64,-40],[-20,-152],[118,-76],[131,14],[-114,80],[37,103],[81,0],[71,120],[235,134],[-74,116],[128,81],[-60,169],[347,-102],[242,0],[-10,138],[128,9],[98,103],[54,-125]],[[82859,94144],[128,-45],[4,-210],[64,58],[33,134],[91,23],[162,-72],[175,0],[-10,-67],[155,-44],[-37,-50],[-108,18],[-118,-67],[129,-62],[26,-152],[-289,27],[91,-192],[118,-23],[40,-152],[-115,0],[48,72],[-145,67],[-189,0],[-10,-31],[199,-5],[-27,-178],[-135,-108],[-91,-22],[-44,-192],[212,-22],[0,-81],[-171,-94],[-256,72],[-65,-13],[182,-90],[-64,-94],[-118,41],[-70,84],[-243,0],[-158,41],[-98,67],[0,-125],[175,-36],[10,-49],[-182,-98],[101,-90],[-10,-49],[-418,89],[27,-107],[135,-36],[24,-102],[-118,-148],[27,-71],[81,18],[17,-67],[104,-23],[-17,-138],[-101,-27],[10,-138],[-199,-5],[54,-98],[91,-40],[-27,-179],[-67,-161],[-229,0],[-270,90],[0,-54],[135,-18],[-17,-67],[-333,-4],[-71,103],[-91,40],[-4,120],[-101,63],[47,53],[-64,192],[24,85],[-101,27],[74,161],[-88,205],[75,45],[33,205],[182,134],[44,67],[91,5],[17,138],[64,23],[0,152],[-61,53],[74,116],[-20,99],[118,40],[135,-36],[94,54],[189,-72],[54,54],[162,-36],[104,-58],[-50,-103],[148,-71],[64,31],[-64,165],[108,54],[-10,103],[128,98],[-7,170],[47,44],[-101,134],[81,90],[101,35],[-101,27],[91,67],[108,0],[91,121],[-10,58],[97,40]]]}\n\n/***/ }),\n\n/***/ 318:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Glamor) {'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(7);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _components = __webpack_require__(10);\n\t\n\tvar _constants = __webpack_require__(16);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tvar _whisky = __webpack_require__(562);\n\t\n\tvar _whisky2 = _interopRequireDefault(_whisky);\n\t\n\tvar _Radial = __webpack_require__(183);\n\t\n\tvar _Radial2 = _interopRequireDefault(_Radial);\n\t\n\tvar _Map = __webpack_require__(182);\n\t\n\tvar _Map2 = _interopRequireDefault(_Map);\n\t\n\tvar _FormattedOverview = __webpack_require__(317);\n\t\n\tvar _FormattedOverview2 = _interopRequireDefault(_FormattedOverview);\n\t\n\tvar _ClusterSelector = __webpack_require__(316);\n\t\n\tvar _ClusterSelector2 = _interopRequireDefault(_ClusterSelector);\n\t\n\tvar _rothes = __webpack_require__(948);\n\t\n\tvar _rothes2 = _interopRequireDefault(_rothes);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar ALLSTRING = 'All';\n\t\n\tvar WhatWhiskyIndex = function (_React$Component) {\n\t  _inherits(WhatWhiskyIndex, _React$Component);\n\t\n\t  function WhatWhiskyIndex(props) {\n\t    _classCallCheck(this, WhatWhiskyIndex);\n\t\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\t\n\t    _this.onHover = function (d) {\n\t      _this.setState({\n\t        selected: d\n\t      });\n\t    };\n\t\n\t    _this.clusterupdate = function (d) {\n\t      _this.setState({\n\t        selectedcluster: d,\n\t        selected: null\n\t      });\n\t    };\n\t\n\t    _this.state = {\n\t      selected: null,\n\t      selectedcluster: ALLSTRING\n\t    };\n\t    _this.onHover.bind(_this);\n\t    _this.clusterupdate.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  WhatWhiskyIndex.prototype.render = function render() {\n\t    var theme = {\n\t      seafill: _constants2.default.vlightblue,\n\t      landfill: _constants2.default.darkgreen,\n\t      riverColour: _constants2.default.darkblue,\n\t\n\t      selectedColour: _constants2.default.lightred,\n\t      unselectedColour: _constants2.default.darkred,\n\t      disabledColour: _constants2.default.lightgrey,\n\t\n\t      radialOverall: _constants2.default.darkyellow,\n\t      radialFill: _constants2.default.lightyellow\n\t    };\n\t\n\t    return Glamor.createElement(\n\t      'article',\n\t      null,\n\t      Glamor.createElement(\n\t        _components.Paragraph,\n\t        null,\n\t        'I have nearly finished my bottle of whisky. I would like to make an informed decision when purchasing my next one. I know a little bit about whisky but not enough to make a confident decision. I found a ',\n\t        Glamor.createElement(\n\t          'a',\n\t          { href: 'https://www.mathstat.strath.ac.uk/outreach/nessie/nessie_whisky.html' },\n\t          'dataset from Glasgow University'\n\t        ),\n\t        '. Can I use data to make a better decision?'\n\t      ),\n\t      Glamor.createElement(\n\t        _components.Paragraph,\n\t        null,\n\t        'After digging around in this data, I\\'ve found a few new ways to think about my whisky purchase. I also found ',\n\t        Glamor.createElement(\n\t          'a',\n\t          { href: 'https://www.youtube.com/watch?v=t5YeM55l2_0&index=1&list=PL1ABF6820EA98D487' },\n\t          'Brian Cox'\n\t        ),\n\t        ' clearly enjoying himself while helping with the pronunciation.'\n\t      ),\n\t      Glamor.createElement(\n\t        _components.Section,\n\t        { name: 'Contents of the dataset' },\n\t        Glamor.createElement(\n\t          _components.Paragraph,\n\t          { note: 'On all these maps, hover over the points to find out more.' },\n\t          'There are 86 individual distilleries contained in this dataset. Here they all are on a map.'\n\t        ),\n\t        Glamor.createElement(_FormattedOverview2.default, _extends({\n\t          whisky: _whisky2.default\n\t        }, theme, {\n\t          selected: this.state.selected,\n\t          onHover: this.onHover,\n\t          nooverview: true\n\t        })),\n\t        Glamor.createElement(\n\t          _components.Paragraph,\n\t          null,\n\t          'Each of these distilleries is given a score between 0 and 4 over 12 different taste categories.'\n\t        ),\n\t        Glamor.createElement(\n\t          _components.Figure,\n\t          { caption: 'The average of all the scores. The average scotch has a high score in body, fruity, malty, and sweetness.' },\n\t          Glamor.createElement(_Radial2.default, _extends({}, theme, {\n\t            width: 594,\n\t            height: 300,\n\t            whisky: _whisky2.default\n\t          }))\n\t        ),\n\t        Glamor.createElement(\n\t          _components.Paragraph,\n\t          null,\n\t          'This means that there are 12 \\u2A09 86 = 1,032 observations in this dataset. We\\'d need to hold them all in our head at once to make an informed decision, which is beyond me. There are a few rules of thumb that we can use to narrow down our decision making criteria.'\n\t        )\n\t      ),\n\t      Glamor.createElement(\n\t        _components.Section,\n\t        { name: 'Geography of Scotland' },\n\t        Glamor.createElement(\n\t          _components.Paragraph,\n\t          null,\n\t          'One of the easiest things to get your head around is the geography of Scotland. The geography of Scotland is thought to have quite an impact on the characteristics of the whisky.'\n\t        ),\n\t        Glamor.createElement(\n\t          _components.Figure,\n\t          { caption: Glamor.createElement(\n\t              'div',\n\t              null,\n\t              'From ',\n\t              Glamor.createElement(\n\t                'a',\n\t                { href: 'https://www.wineware.co.uk/Content/Images/uploaded/Satelite%20Pages/scotch-whisky-map-1.jpg' },\n\t                'wineware.co.uk'\n\t              ),\n\t              ', the whisky regions of Scotland'\n\t            ) },\n\t          Glamor.createElement('img', { src: 'https://www.wineware.co.uk/Content/Images/uploaded/Satelite%20Pages/scotch-whisky-map-1.jpg' })\n\t        ),\n\t        Glamor.createElement(\n\t          _components.Paragraph,\n\t          null,\n\t          'In particular there are two regions with a very high concentration of distilleries. Islay and Speyside.'\n\t        ),\n\t        Glamor.createElement(\n\t          _components.Subsection,\n\t          { name: 'Islay' },\n\t          Glamor.createElement(\n\t            _components.Paragraph,\n\t            null,\n\t            'Islay is an island on the west coast, in the island group called the Inner Hebrides. When you think about Islay whisky, you think about big, smoky, peaty whisky. You can see that this is the case, particularly in the three distilleries in the south coast.'\n\t          ),\n\t          Glamor.createElement(_FormattedOverview2.default, _extends({}, theme, {\n\t            whisky: _whisky2.default,\n\t            selected: this.state.selected,\n\t            onHover: this.onHover,\n\t            rotate0: 6.25,\n\t            rotate1: 1.92,\n\t            scale: 57400,\n\t            spey: true\n\t          }))\n\t        ),\n\t        Glamor.createElement(\n\t          _components.Subsection,\n\t          { name: 'Speyside' },\n\t          Glamor.createElement(\n\t            _components.Paragraph,\n\t            { note: Glamor.createElement(\n\t                'a',\n\t                { href: 'https://www.thewhiskyexchange.com/c/314/speyside-single-malt-scotch-whisky' },\n\t                '60% figure comes from Whisky Exchange'\n\t              ) },\n\t            'The second area that has a high concentration of distilleries is Speyside. I\\'ve highlighted on this map the River Spey, which gives this area its name. More than 60% of Scotland\\'s whisky comes from Speyside. I can\\'t find out why so much whisky comes from Speyside. Some people claim that the area has water and climate that is particularly suitable for whisky production, but I can\\'t verify that.'\n\t          ),\n\t          Glamor.createElement(\n\t            _components.Paragraph,\n\t            null,\n\t            'When you think about Speyside whisky you think about lighter, relaxed whisky. This does seem to be the case, but you also notice that there is a lot of variation between whiskies that are even right next to each other. There\\'s something else going on here.'\n\t          ),\n\t          Glamor.createElement(_FormattedOverview2.default, _extends({}, theme, {\n\t            whisky: _whisky2.default,\n\t            selected: this.state.selected,\n\t            onHover: this.onHover,\n\t            rotate0: 3.93,\n\t            rotate1: 0.5,\n\t            scale: 24800,\n\t            spey: true\n\t          })),\n\t          Glamor.createElement(\n\t            _components.Paragraph,\n\t            null,\n\t            'It is easy to miss some of the detail on this map. There are a lot of distilleries in Speyside. We\\'ll zoom in a bit closer.'\n\t          ),\n\t          Glamor.createElement(_FormattedOverview2.default, _extends({}, theme, {\n\t            whisky: _whisky2.default,\n\t            selected: this.state.selected,\n\t            onHover: this.onHover,\n\t            rotate0: 3.3,\n\t            rotate1: 0.29,\n\t            scale: 100000,\n\t            spey: true\n\t          })),\n\t          Glamor.createElement(\n\t            _components.Paragraph,\n\t            null,\n\t            'See if you can find the Glen Rothes, Glen Spey, and Glen Grant distilleries. They\\'re towards the north of this area, right on the banks of the river. They almost overlap each other. Looking at them on a map we can see that these distilleries are about 300m apart, just down the road from each other.'\n\t          ),\n\t          Glamor.createElement(\n\t            _components.Figure,\n\t            { caption: Glamor.createElement(\n\t                'div',\n\t                null,\n\t                Glamor.createElement(\n\t                  'div',\n\t                  null,\n\t                  'Map of the village of Rothes'\n\t                ),\n\t                Glamor.createElement(\n\t                  'div',\n\t                  null,\n\t                  Glamor.createElement(\n\t                    'a',\n\t                    { href: 'https://www.google.co.uk/maps/@57.5294291,-3.2074024,1898m/data=!3m1!1e3' },\n\t                    'source'\n\t                  )\n\t                )\n\t              ) },\n\t            Glamor.createElement('img', { src: _rothes2.default })\n\t          )\n\t        )\n\t      ),\n\t      Glamor.createElement(\n\t        _components.Section,\n\t        { name: 'Putting the whisky into groups' },\n\t        Glamor.createElement(\n\t          _components.Paragraph,\n\t          { note: Glamor.createElement(\n\t              'a',\n\t              { href: 'https://github.com/dataewan/whisky-vis/blob/master/analysis/whiskyanalysis.ipynb' },\n\t              'analysis'\n\t            ) },\n\t          'The other trick we can use is to group the whiskies into groups with similar characteristics. I\\'ve found there are 9 groups in the data that can help break down the problem. Select the groups below to find out more about them.'\n\t        ),\n\t        Glamor.createElement(_ClusterSelector2.default, {\n\t          whisky: _whisky2.default,\n\t          selectedcluster: this.state.selectedcluster,\n\t          onUpdate: this.clusterupdate,\n\t          allstring: ALLSTRING\n\t        }),\n\t        Glamor.createElement(_FormattedOverview2.default, _extends({}, theme, {\n\t          whisky: _whisky2.default,\n\t          selected: this.state.selected,\n\t          clusterselected: this.state.selectedcluster,\n\t          clusteroverview: true,\n\t          onHover: this.onHover,\n\t          cluster: this.state.selectedcluster === ALLSTRING ? null : this.state.selectedcluster,\n\t          controls: true,\n\t          colourcluster: true\n\t        }))\n\t      ),\n\t      Glamor.createElement(\n\t        _components.Section,\n\t        { name: 'What am I going to buy?' },\n\t        Glamor.createElement(\n\t          _components.Paragraph,\n\t          null,\n\t          'Everyone has different tastes when it comes to whisky, and even your own tastes might change depending on the occasion. There isn\\'t going to be a single correct answer. I\\'ve learned a lot for my shopping expedition.'\n\t        ),\n\t        Glamor.createElement(\n\t          _components.Paragraph,\n\t          null,\n\t          'From past experience, I know that I personally don\\'t enjoy very strong smoky peaty whisky much. So this is groups 2, 5, and 7. I\\'ve steered clear of Islay whiskies for this reason. However, there is a lot more subtlety there than I realised. Bunnahabhain in particular, and also Bruichladdich, and Bowmore might be something that I should try.'\n\t        ),\n\t        Glamor.createElement(\n\t          _components.Paragraph,\n\t          null,\n\t          'I\\'ve also learned that there is a lot more variation in Speyside whisky than I realised. I\\'ve been introduced to the term ',\n\t          Glamor.createElement(\n\t            'a',\n\t            { href: 'https://www.thewhiskyexchange.com/c/314/speyside-single-malt-scotch-whisky' },\n\t            'lunchtime whisky'\n\t          ),\n\t          ', which looks a bit like group 0.'\n\t        ),\n\t        Glamor.createElement(\n\t          _components.Paragraph,\n\t          null,\n\t          'I\\'m not looking for lunchtime whisky. I think that I\\'m looking for something that I can sit in my chair with a book and drink. I\\'ve learned about winey whiskies (group 4), which look quite interesting. I\\'m also poking around in group 8, as I\\'ve enjoyed some whiskies from there before.'\n\t        ),\n\t        Glamor.createElement(\n\t          _components.Paragraph,\n\t          null,\n\t          'Sadly I\\'ve also learned that there is some poor quality information in this dataset. For example ',\n\t          Glamor.createElement(\n\t            'i',\n\t            null,\n\t            'Belvenie'\n\t          ),\n\t          ' should be ',\n\t          Glamor.createElement(\n\t            'i',\n\t            null,\n\t            'The Balvenie'\n\t          ),\n\t          ', and had the wrong location in the original data. I\\'ve tidied things up, and most of the data looks good quality. I\\'m probably going to incorporate some other information in my decision process.'\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  return WhatWhiskyIndex;\n\t}(_react2.default.Component);\n\t\n\texports.default = WhatWhiskyIndex;\n\tmodule.exports = exports['default'];\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ }),\n\n/***/ 561:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"type\":\"Topology\",\"objects\":{\"tracts\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"LineString\",\"arcs\":[0],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"630C90FA-3524-47E1-80C5-1A203D41BC56\",\"startNode\":\"D9AA3038-B59F-49DA-B5CB-F1BE8D9B2702\",\"endNode\":\"EA619465-2954-4504-83BA-5BD8F8FDB717\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":17,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[1],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"48AC20DE-F833-4972-A804-BA12EDA88AEF\",\"startNode\":\"EA619465-2954-4504-83BA-5BD8F8FDB717\",\"endNode\":\"46E06692-840B-4AB3-B37A-D3AFE3767747\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":717,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[2],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"F38C86A8-4C85-4EDB-A9D0-1170E438E509\",\"startNode\":\"46E06692-840B-4AB3-B37A-D3AFE3767747\",\"endNode\":\"A24594A6-00EA-43F5-BBC5-131C134D1E75\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":185,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[3],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7E0E761F-F2F4-4C96-85F8-9CFCF71BF19E\",\"startNode\":\"A24594A6-00EA-43F5-BBC5-131C134D1E75\",\"endNode\":\"841BC4D7-EB30-4A30-AD03-48C93B07D6C2\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":276,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[4],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D6B036D4-128F-4C65-BEB1-4E6C6FB11F31\",\"startNode\":\"156DDB08-56A6-4253-8E68-4214E776BA97\",\"endNode\":\"C7615DEA-E131-441D-9110-5F20261205A4\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":792,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[5],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D4089A61-EE38-4D23-8182-6EBCACCE6BB5\",\"startNode\":\"841BC4D7-EB30-4A30-AD03-48C93B07D6C2\",\"endNode\":\"156DDB08-56A6-4253-8E68-4214E776BA97\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":18,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[6],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"CC9DB557-05DA-4891-8E26-FA38B98A14E1\",\"startNode\":\"C7615DEA-E131-441D-9110-5F20261205A4\",\"endNode\":\"218E60A6-7852-40A0-94A7-4736C8558681\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":572,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[7],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"68A5DB3A-A6C0-4C79-9C9B-EF42ED7EEA5F\",\"startNode\":\"DD5186C1-C4F6-49FB-9A30-0E4EC31688CA\",\"endNode\":\"381A5B64-0BC4-4869-9380-27771A655B4B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":92,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[8],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"65F10C4C-2F3D-45ED-825C-EFA487F93CD8\",\"startNode\":\"218E60A6-7852-40A0-94A7-4736C8558681\",\"endNode\":\"72577D28-D376-47E1-8979-B95C1D741C80\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":930,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[9],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"42B88053-DF5A-41A6-AAE3-6D0D9AEE579C\",\"startNode\":\"381A5B64-0BC4-4869-9380-27771A655B4B\",\"endNode\":\"5066E4D0-D070-4D9B-8CF1-7ED3935A9472\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":308,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[10],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"327AEB53-4FD3-4C1C-BFBB-11B6DF55E33E\",\"startNode\":\"5066E4D0-D070-4D9B-8CF1-7ED3935A9472\",\"endNode\":\"72577D28-D376-47E1-8979-B95C1D741C80\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1329,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[11],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"623344EE-1F68-4839-9EAB-87F1F918877B\",\"startNode\":\"72577D28-D376-47E1-8979-B95C1D741C80\",\"endNode\":\"22B10B36-DD63-4585-BF4F-1486CAF601CA\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":656,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[12],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"009FB7E3-659B-4C60-919D-B450644D249E\",\"startNode\":\"22B10B36-DD63-4585-BF4F-1486CAF601CA\",\"endNode\":\"C5567EE1-43CB-40BE-9113-2CB73B8BB17D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":616,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[13],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"34485F1F-33FD-4579-8042-8C0EF10E3970\",\"startNode\":\"5649CD5D-4D2A-4BF7-8C77-C8140A9AB6C8\",\"endNode\":\"C5567EE1-43CB-40BE-9113-2CB73B8BB17D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":61,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[14],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E0AB476C-F8E4-49C3-B427-A0E01DAA3B8A\",\"startNode\":\"6A9A6EF3-EA35-4426-B527-F87A8B735590\",\"endNode\":\"48233DFB-AB1E-41E9-ADAB-559497070203\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":307,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[15],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"6BFFAF95-DA26-4A00-8035-8EB7025AFA7B\",\"startNode\":\"48233DFB-AB1E-41E9-ADAB-559497070203\",\"endNode\":\"F1D97C69-0E00-41D1-AB7F-C7B32726E850\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1653,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[16],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C3AA1D2F-D12F-406A-AA35-AAF8F52BF770\",\"startNode\":\"EDD1FC1D-CAC1-47EB-A365-B2E910ECA745\",\"endNode\":\"F1D97C69-0E00-41D1-AB7F-C7B32726E850\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":465,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[17],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"088A5673-53E5-4CDA-9FD2-BC02D4E9295A\",\"startNode\":\"F1D97C69-0E00-41D1-AB7F-C7B32726E850\",\"endNode\":\"1260179D-692E-49DF-BE63-FB0B268AE11D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":287,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[18],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B1D2095E-322C-4F40-B161-67F4DFA6C2B0\",\"startNode\":\"1260179D-692E-49DF-BE63-FB0B268AE11D\",\"endNode\":\"6E174DFA-E91B-4BAD-A766-EEE7FF9E0676\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":178,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[19],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D58100DC-58A7-4754-8004-8C00D605B916\",\"startNode\":\"1260179D-692E-49DF-BE63-FB0B268AE11D\",\"endNode\":\"CD0B123C-8396-4911-9F51-6D12CFEF572D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":235,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[20],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C2486D5E-5CCC-4178-A7D4-922F4193A158\",\"startNode\":\"CD0B123C-8396-4911-9F51-6D12CFEF572D\",\"endNode\":\"281AE9FC-AC48-46E6-B4BE-A650EF741304\",\"form\":\"tidalRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":454,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[21],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"6B324BCE-B60F-4A93-9561-6C2ADE945699\",\"startNode\":\"98B1410D-4E58-471E-A3EF-4DD470DA24AD\",\"endNode\":\"281AE9FC-AC48-46E6-B4BE-A650EF741304\",\"form\":\"tidalRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":150,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[22],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5C265AAC-8FCF-4A45-9D25-6796018F11AC\",\"startNode\":\"281AE9FC-AC48-46E6-B4BE-A650EF741304\",\"endNode\":\"462EE58C-B10C-40A1-AF40-CB383F44B8E5\",\"form\":\"tidalRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":334,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[23],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"2E5F5F0B-26B2-4BAE-96DA-373CF028A57F\",\"startNode\":\"038DA771-366D-4810-AFC8-0D88134B535D\",\"endNode\":\"6E174DFA-E91B-4BAD-A766-EEE7FF9E0676\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":920,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[24],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"42FD2871-77D3-4A2A-8623-C9EBA7B6DE57\",\"startNode\":\"6E174DFA-E91B-4BAD-A766-EEE7FF9E0676\",\"endNode\":\"61750415-D1FC-4AF9-9D06-F8B54E55B148\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":64,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[25],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"48CAD726-A2DA-4566-B5B7-FABD111FC943\",\"startNode\":\"61750415-D1FC-4AF9-9D06-F8B54E55B148\",\"endNode\":\"1B6AF741-11E2-420A-AD0D-AD1DAAF2657D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":146,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[26],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8D08830F-2B7C-4A3F-9016-FC671CB3C21A\",\"startNode\":\"61750415-D1FC-4AF9-9D06-F8B54E55B148\",\"endNode\":\"CF533D9B-BEF6-43E0-8AF7-8EF5030021CF\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":57,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[27],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8236B932-BA6F-454B-A6DD-ABE4A1822270\",\"startNode\":\"CF533D9B-BEF6-43E0-8AF7-8EF5030021CF\",\"endNode\":\"65E498D9-EB06-499B-90C6-8D2CF8DCE48D\",\"form\":\"tidalRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":179,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[28],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B1DE22D1-C8A5-4E90-B8E0-6D2C5E411C0C\",\"startNode\":\"1B6AF741-11E2-420A-AD0D-AD1DAAF2657D\",\"endNode\":\"65E498D9-EB06-499B-90C6-8D2CF8DCE48D\",\"form\":\"tidalRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":121,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[29],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5F33F9E5-93B2-474B-90F5-652911E52E62\",\"startNode\":\"65E498D9-EB06-499B-90C6-8D2CF8DCE48D\",\"endNode\":\"98B1410D-4E58-471E-A3EF-4DD470DA24AD\",\"form\":\"tidalRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":214,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[30],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"96AD0700-CF11-41FB-9002-33F50A0BD3FD\",\"startNode\":\"1F388FB9-2E98-4421-91E5-BB39CE953957\",\"endNode\":\"175CB59C-46B3-4668-A993-14487FD2F8CC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":668,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[31],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C1F8B179-A25D-4F79-90D8-61A4CC1D2333\",\"startNode\":\"FF687202-E16F-47EB-8AF5-574A6DAC66B6\",\"endNode\":\"175CB59C-46B3-4668-A993-14487FD2F8CC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":110,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[32],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"90956055-AA0D-44D0-B0C6-60DADB0ED751\",\"startNode\":\"175CB59C-46B3-4668-A993-14487FD2F8CC\",\"endNode\":\"E431CEB2-0DCC-4EDC-818A-52922FA69B27\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":37,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[33],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C42768C8-7C7C-4AA2-847A-A9F69E73326D\",\"startNode\":\"E431CEB2-0DCC-4EDC-818A-52922FA69B27\",\"endNode\":\"536DD0CA-379D-4773-B6DE-7309EDC182F6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":593,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[34],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"32353BE5-BA67-4925-B811-D4AA885AC55D\",\"startNode\":\"536DD0CA-379D-4773-B6DE-7309EDC182F6\",\"endNode\":\"46290F17-11C6-4311-BA36-6AA52CE9BDC3\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1620,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[35],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"6B54C38D-4141-422A-B537-A25627160543\",\"startNode\":\"603121F7-4AFF-430B-ADEB-1FA155BE4208\",\"endNode\":\"46290F17-11C6-4311-BA36-6AA52CE9BDC3\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":301,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[36],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"2E126743-E3FE-4838-B9A4-6B952975477F\",\"startNode\":\"46290F17-11C6-4311-BA36-6AA52CE9BDC3\",\"endNode\":\"5BD9A705-DAF1-4944-ACA8-FAF402CD33C6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":983,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[37],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"6115F3BF-D524-48FF-BE27-CAED8C87A577\",\"startNode\":\"F483D34C-4DC8-4AF4-8688-4D5DD32B9605\",\"endNode\":\"8B4A02E0-7E09-4E81-B684-474CDB051D5C\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":103,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[38],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"09F971E1-1E96-43FE-87B0-CF3C7E81FAC2\",\"startNode\":\"E36A2924-947C-4BF1-9583-FCDC10CF94C0\",\"endNode\":\"5BD9A705-DAF1-4944-ACA8-FAF402CD33C6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":236,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[39],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5F8C3933-E890-4F42-A90D-A94B8427A301\",\"startNode\":\"5BD9A705-DAF1-4944-ACA8-FAF402CD33C6\",\"endNode\":\"06CAF757-AF37-4CED-A29A-F9731F0B9A74\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":486,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[40],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"DCDAA40A-C4DB-432A-93F0-403FE29E32E9\",\"startNode\":\"6507723F-BE94-4B4F-9D73-39BE3B259473\",\"endNode\":\"6447F990-B55F-42BD-8112-03B905A8CE0C\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":224,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[41],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"92690DB7-09EF-4621-8A5E-0D28422B7736\",\"startNode\":\"6447F990-B55F-42BD-8112-03B905A8CE0C\",\"endNode\":\"48233DFB-AB1E-41E9-ADAB-559497070203\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1230,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[42],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"14C00BB9-0BA0-4537-A602-876FC4640083\",\"startNode\":\"CD32F251-0F18-4DCD-AEC3-B6B05056D7FC\",\"endNode\":\"A41C2B1C-F3C7-4294-97CF-4989A4B13A50\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1649,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[43],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"CB085137-E6CD-49C7-BEAA-ACE39743E4EC\",\"startNode\":\"4F956D3A-5FC9-4016-835D-803612B76A8A\",\"endNode\":\"A41C2B1C-F3C7-4294-97CF-4989A4B13A50\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":307,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[44],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E3C22A18-B8A6-48F9-8371-7F8564FDB8B3\",\"startNode\":\"E4D60C55-DDD9-4AD4-B70E-9AD1FD88F8FB\",\"endNode\":\"6B93C6AC-B0C5-4520-B248-1F6E3B0C6FC8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":663,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[45],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"956158E6-A7B1-4281-9014-421AC8449E35\",\"startNode\":\"A41C2B1C-F3C7-4294-97CF-4989A4B13A50\",\"endNode\":\"6B93C6AC-B0C5-4520-B248-1F6E3B0C6FC8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":166,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[46],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7A2E131D-EE25-4CBD-9080-B5BBDF78186A\",\"startNode\":\"6B93C6AC-B0C5-4520-B248-1F6E3B0C6FC8\",\"endNode\":\"B53DC151-DC40-49AB-A2F1-C2CB67FB7D61\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":117,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[47],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"692A6091-B9B7-445C-9571-1FC067070F8E\",\"startNode\":\"B2A372FA-4919-4074-98B0-EE499985BD7E\",\"endNode\":\"B53DC151-DC40-49AB-A2F1-C2CB67FB7D61\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":105,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[48],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"965A7C78-4627-45FD-AFCA-325ED7749DF4\",\"startNode\":\"B53DC151-DC40-49AB-A2F1-C2CB67FB7D61\",\"endNode\":\"02191D05-ED78-46D4-B6AF-7DE610F641CD\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":2228,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[49],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E10D3196-D9FD-4874-82AF-615192F23064\",\"startNode\":\"392C9FDF-011E-4FED-8034-8C06118E5EF9\",\"endNode\":\"02191D05-ED78-46D4-B6AF-7DE610F641CD\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":412,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[50],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E596ADA6-C2BE-40D4-9B2F-454BF68D9E93\",\"startNode\":\"02191D05-ED78-46D4-B6AF-7DE610F641CD\",\"endNode\":\"18315417-4E86-4671-9B63-58A7D7F65E3E\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":102,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[51],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"27644724-7D54-41C1-824E-7B9F2C9FAC64\",\"startNode\":\"18315417-4E86-4671-9B63-58A7D7F65E3E\",\"endNode\":\"1139CDED-56F5-49B4-841A-FBCCD813F614\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":529,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[52],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"58F165C8-FDFB-49E2-9EA4-75905905B1BE\",\"startNode\":\"627159DB-4C4B-4CA4-9E38-8975D0230145\",\"endNode\":\"E5474FD0-C696-4B4A-ACF6-BA096E9F482C\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1499,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[53],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"6C95CF5E-D871-4C05-AF1F-4EEF0797C271\",\"startNode\":\"E5474FD0-C696-4B4A-ACF6-BA096E9F482C\",\"endNode\":\"246FB825-EF42-4165-AF9F-07D609A64FAB\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":27,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[54],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"1752AAC4-ABAF-4284-A768-EF4E41757817\",\"startNode\":\"D7A9FE01-700F-4B8D-A260-FB245B175AE8\",\"endNode\":\"D6634043-0D30-4A0F-947F-DDB5AC97B1F2\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":818,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[55],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"72B264D8-3BCB-4373-8AAE-FC3F0B777833\",\"startNode\":\"D6634043-0D30-4A0F-947F-DDB5AC97B1F2\",\"endNode\":\"569C35B9-2FAC-4B77-9681-B0E02B3F54F8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":636,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[56],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"0760D93C-69D8-4CA9-84E2-AC3BA6E16FE5\",\"startNode\":\"569C35B9-2FAC-4B77-9681-B0E02B3F54F8\",\"endNode\":\"DA17D129-80B7-4087-B806-02DDC07DAA99\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":2845,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[57],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"A9017F7C-D8C3-4655-A6B5-3502A549F5C2\",\"startNode\":\"DA17D129-80B7-4087-B806-02DDC07DAA99\",\"endNode\":\"1E5DFAB8-55DE-4558-BC58-04FD0D729708\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1980,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[58],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"21175CEA-60B9-48FC-A832-4419D924F83A\",\"startNode\":\"1E5DFAB8-55DE-4558-BC58-04FD0D729708\",\"endNode\":\"97002789-804A-4B1C-8CD2-4684D9108E26\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":778,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[59],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E5B6D170-324E-4C47-BE05-CC174B6BF1D6\",\"startNode\":\"97002789-804A-4B1C-8CD2-4684D9108E26\",\"endNode\":\"CD32F251-0F18-4DCD-AEC3-B6B05056D7FC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":845,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[60],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D8D1C031-D341-4D1B-BADF-291CA0D6CA99\",\"startNode\":\"69544140-3528-42D0-9865-1449BCBA439F\",\"endNode\":\"CF106E3A-4AA3-416B-A48C-818CE0847D14\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":2236,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[61],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"76575344-14C3-472E-A08D-8DB611DD76A3\",\"startNode\":\"CF106E3A-4AA3-416B-A48C-818CE0847D14\",\"endNode\":\"5B88FBC5-3209-44AE-BE03-AB12E0ECF682\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":402,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[62],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"697456DB-42EF-44D1-9539-60837FDFA56A\",\"startNode\":\"5B88FBC5-3209-44AE-BE03-AB12E0ECF682\",\"endNode\":\"D7A9FE01-700F-4B8D-A260-FB245B175AE8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":489,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[63],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"33ADDC23-14FE-4AB1-AD21-7B32FFB1BD03\",\"startNode\":\"C1D22860-20B1-426B-B6A4-077FC9942BCD\",\"endNode\":\"BF9B4403-BE76-4E6B-887B-9DEECBFA27D8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":648,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[64],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"741BF8AD-CDA2-44B8-8699-283ACE773B3F\",\"startNode\":\"BF9B4403-BE76-4E6B-887B-9DEECBFA27D8\",\"endNode\":\"C604B15A-A016-414E-946E-6A50ABE76B50\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":992,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[65],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"806A1B0A-42B7-4E3C-B758-3D638CED5BC8\",\"startNode\":\"C604B15A-A016-414E-946E-6A50ABE76B50\",\"endNode\":\"04850E94-7C72-4BF8-933C-BA8C2234136D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":144,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[66],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"44E81B46-78CE-4CC5-8B33-894BA23157DA\",\"startNode\":\"04850E94-7C72-4BF8-933C-BA8C2234136D\",\"endNode\":\"590A2134-DE1B-4680-8A58-B50FB87E263D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":612,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[67],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"54006E53-CC6F-4114-A6E1-EAF19965EE6C\",\"startNode\":\"590A2134-DE1B-4680-8A58-B50FB87E263D\",\"endNode\":\"73C0F1AF-B815-4702-A4EC-96435422A8CA\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":2347,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[68],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"4D230C70-25CB-4546-8D9E-EBBD54D985E0\",\"startNode\":\"AD0F1824-753B-456A-99A4-AB9507880021\",\"endNode\":\"69544140-3528-42D0-9865-1449BCBA439F\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1505,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[69],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B8834582-41EB-4393-9932-13D22D5AA115\",\"startNode\":\"73C0F1AF-B815-4702-A4EC-96435422A8CA\",\"endNode\":\"AD0F1824-753B-456A-99A4-AB9507880021\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":271,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[70],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"4FCEA2A5-143A-4FDA-A8DC-E1A15AD09057\",\"startNode\":\"C817B9BC-69E0-4156-BB87-A5B8D57EC806\",\"endNode\":\"263D7605-8942-4D85-B8BE-4B0B58FC3F36\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1084,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[71],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"2FEE596B-0644-4C7C-89D9-CA4493996701\",\"startNode\":\"B748595D-7AC2-40DD-9BAF-D3F62F37B92B\",\"endNode\":\"4726A42A-12C2-4D8C-AFF1-A5ED1246B6EC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":389,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[72],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"FD26B181-4FED-4344-816C-033C7068D1D5\",\"startNode\":\"263D7605-8942-4D85-B8BE-4B0B58FC3F36\",\"endNode\":\"7B19EB5C-CF68-472B-8F8E-711A01419E43\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1056,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[73],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E60EBADA-6EB7-4A62-BB14-518BBA1283E4\",\"startNode\":\"6DA2CA63-A4E3-40E1-B4F7-A71004E84668\",\"endNode\":\"B748595D-7AC2-40DD-9BAF-D3F62F37B92B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":995,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[74],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7FFBF80D-EEAF-436A-9EC8-9E26B7D6BD6E\",\"startNode\":\"7B19EB5C-CF68-472B-8F8E-711A01419E43\",\"endNode\":\"83192ABB-405E-4FEC-A40A-861F01678B47\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":20,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[75],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5E6FD935-0468-40B2-B409-C6083FE045BD\",\"startNode\":\"DDA4317E-A89A-44F6-BD51-39DA150EBFFF\",\"endNode\":\"AD36269E-62F2-4AAB-84A7-18C9E9E6C5B5\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":646,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[76],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D2E6471E-5B72-4A79-B85B-22B22FBBF161\",\"startNode\":\"83192ABB-405E-4FEC-A40A-861F01678B47\",\"endNode\":\"C116B8CB-C50E-4108-8B62-E22A1DD81CAC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":762,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[77],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7930DB72-A407-4200-BCA3-80FE23CCF117\",\"startNode\":\"AD36269E-62F2-4AAB-84A7-18C9E9E6C5B5\",\"endNode\":\"6DA2CA63-A4E3-40E1-B4F7-A71004E84668\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":417,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[78],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"FD16F88A-B91B-407E-809B-A7E9DDE7614F\",\"startNode\":\"C116B8CB-C50E-4108-8B62-E22A1DD81CAC\",\"endNode\":\"B1CFF2B0-59BE-4C53-BCF1-D062475AA2BC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":401,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[79],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"DB37622F-1A37-4A98-8D69-EA4C0C2F4519\",\"startNode\":\"D75EA2AF-9F64-49B9-82B0-247E137B169C\",\"endNode\":\"C1D22860-20B1-426B-B6A4-077FC9942BCD\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1992,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[80],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E6E000EF-A5B0-4AF0-B051-81A431DEF17A\",\"startNode\":\"B1CFF2B0-59BE-4C53-BCF1-D062475AA2BC\",\"endNode\":\"421BB577-B4CA-420C-AB01-A41A282EDC14\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":385,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[81],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8630D186-ACD8-4797-BD8B-61BA121555A6\",\"startNode\":\"CC876838-B390-41E9-9950-25944B1CBA90\",\"endNode\":\"4AB0CF2A-D562-4996-A437-9B0BD04D0238\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":405,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[82],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"3D346412-C8D2-4B7E-9BF4-EDCADE3C4CB3\",\"startNode\":\"4AB0CF2A-D562-4996-A437-9B0BD04D0238\",\"endNode\":\"C5664699-E6E4-4489-AFB4-306707353AA2\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1283,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[83],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"32B4BC97-D487-4478-BEB1-7F9268E51E15\",\"startNode\":\"F45CC587-963C-47B3-B03C-77C299B8812D\",\"endNode\":\"C5664699-E6E4-4489-AFB4-306707353AA2\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":96,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[84],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"82358C1D-1E8E-445E-973F-2AEBC2208C21\",\"startNode\":\"C5664699-E6E4-4489-AFB4-306707353AA2\",\"endNode\":\"85FD50A9-5F87-485D-A41C-5920ABA41E50\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":946,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[85],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C94500C9-4612-4460-8B51-57F1C8A5C3BD\",\"startNode\":\"85FD50A9-5F87-485D-A41C-5920ABA41E50\",\"endNode\":\"DDA4317E-A89A-44F6-BD51-39DA150EBFFF\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1102,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[86],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5D1C5140-1E69-4706-ACB7-D10CF738B1EF\",\"startNode\":\"2AFA516C-4E06-4B8B-BC0E-1D9B7A791E70\",\"endNode\":\"DDA4317E-A89A-44F6-BD51-39DA150EBFFF\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":120,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[87],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E2CEEC5B-ECC8-45A2-9703-174023663C86\",\"startNode\":\"D41D493F-1216-4018-8F42-9EF77AF0DE0D\",\"endNode\":\"CC876838-B390-41E9-9950-25944B1CBA90\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":576,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[88],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"856E553D-2985-41F2-87A9-22AA6B0BA01F\",\"startNode\":\"5CE67990-1730-40A8-8FED-4C54B335AA3A\",\"endNode\":\"00779897-84C6-4105-A632-120EA0B91866\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":63,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[89],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5A85D51D-24F3-4719-89B5-378E68E80E22\",\"startNode\":\"00779897-84C6-4105-A632-120EA0B91866\",\"endNode\":\"0BA1CBF8-FF63-46B8-B1ED-45D1EA6B643E\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":206,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[90],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"9145D940-6C6C-47EC-9E74-357FC317EE50\",\"startNode\":\"A4ECAEDF-7835-4228-8299-E183ED3CCBF2\",\"endNode\":\"D41D493F-1216-4018-8F42-9EF77AF0DE0D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":265,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[91],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"0D53FEBB-7618-4244-897A-7769AB3EC086\",\"startNode\":\"02F4EBE9-00FB-4DFE-9CAE-2CCBED0BCF6F\",\"endNode\":\"0BA1CBF8-FF63-46B8-B1ED-45D1EA6B643E\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":228,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[92],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"49178108-6BDD-41C1-81AF-AE3D41BA35BA\",\"startNode\":\"0BA1CBF8-FF63-46B8-B1ED-45D1EA6B643E\",\"endNode\":\"2DEA11A8-210F-4400-B12E-426900352012\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":513,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[93],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"002CBC9E-DEFF-4A8D-B0D0-28B8E754BF4D\",\"startNode\":\"284FBC14-1685-482A-9CE1-706A322FF88D\",\"endNode\":\"01F8C2CE-30F2-4E96-98B2-51B2CF260465\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1111,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[94],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D7AD9DB5-7A3E-4F33-84DD-5E7D6C8A8DF8\",\"startNode\":\"43D1FBFC-6A70-4B8F-97FC-BA03D44E13DD\",\"endNode\":\"B777413C-3EB4-488F-9099-DF253111C953\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1197,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[95],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7FD3936D-3E47-4446-B1FF-C4C16D9DB6C0\",\"startNode\":\"403BA50E-B275-43D5-842B-5019A436DF97\",\"endNode\":\"B3CDFA9C-F9DC-40FE-BC30-D714F80BAACB\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":848,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[96],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B39A2A79-C610-4971-8018-4B1A79C3DD13\",\"startNode\":\"5F40EA81-7D84-44D6-8209-8BD45F2FFB9D\",\"endNode\":\"403BA50E-B275-43D5-842B-5019A436DF97\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":303,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[97],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B801BDB5-D9B2-41F1-894D-85A1EBC9DDC4\",\"startNode\":\"B777413C-3EB4-488F-9099-DF253111C953\",\"endNode\":\"5F40EA81-7D84-44D6-8209-8BD45F2FFB9D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":445,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[98],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"3E088DC1-8959-4464-B731-A37D18691AEB\",\"startNode\":\"B3CDFA9C-F9DC-40FE-BC30-D714F80BAACB\",\"endNode\":\"3E1DC84B-5195-4A25-B041-8241FF3C6ADF\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":790,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[99],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"47CFAAA8-2A50-412F-B2BA-32AEBAE0876A\",\"startNode\":\"3E1DC84B-5195-4A25-B041-8241FF3C6ADF\",\"endNode\":\"00779897-84C6-4105-A632-120EA0B91866\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1354,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[100],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"F0BECFA6-9EF9-4542-92F2-87BB3FF51658\",\"startNode\":\"314A355E-D5C8-4EFB-9AC5-4FEE39D20BD4\",\"endNode\":\"AACEF031-B5F0-45E4-847D-76DB19A982E0\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":894,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[101],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"33EE6229-BAD6-4973-A268-44A9247C2A4D\",\"startNode\":\"AACEF031-B5F0-45E4-847D-76DB19A982E0\",\"endNode\":\"6DB73E33-8621-4D3F-928C-E40593541D32\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":156,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[102],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5FED79F9-DCD7-4526-A6E8-ACA95740425C\",\"startNode\":\"34957072-1EC4-4EFB-9929-5903600FED69\",\"endNode\":\"E3344E44-29A2-48F5-8C09-6FADE3E0A443\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":132,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[103],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"BD7FAAA9-46F0-4C77-ACCF-49A61601E0D2\",\"startNode\":\"E3344E44-29A2-48F5-8C09-6FADE3E0A443\",\"endNode\":\"974077E7-5B1D-492B-8DC9-6247664CE7E0\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":526,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[104],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"53399B71-0B24-410F-97A1-78C697228B48\",\"startNode\":\"7D92492B-7904-4110-BF68-5A654F3B56F7\",\"endNode\":\"974077E7-5B1D-492B-8DC9-6247664CE7E0\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":193,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[105],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"92AE6BC8-BA43-4EC7-A2DC-455FADDD392F\",\"startNode\":\"EEA82326-CC1F-4951-A985-6DEF2B236BFC\",\"endNode\":\"D2BCE089-5AD6-44AB-ABED-BE444B23CF37\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":54,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[106],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"050E86AC-BDF8-45B9-8D9B-F92F9AD383A0\",\"startNode\":\"974077E7-5B1D-492B-8DC9-6247664CE7E0\",\"endNode\":\"1043FB8A-ECD4-4DF6-AF4C-73774FF66399\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":327,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[107],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"CEB138AF-5046-4808-94D8-89472331AF79\",\"startNode\":\"1043FB8A-ECD4-4DF6-AF4C-73774FF66399\",\"endNode\":\"85C03969-E6DD-43D2-8E02-972B4188AE40\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":504,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[108],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"302E6F51-8E10-49F3-BAE7-5E275D5E9D94\",\"startNode\":\"7D64F4B6-A2E4-4085-85E4-9F88F11E8E16\",\"endNode\":\"85C03969-E6DD-43D2-8E02-972B4188AE40\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":90,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[109],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8325FF33-6AAA-4C0F-80CA-4A1059C2D498\",\"startNode\":\"85C03969-E6DD-43D2-8E02-972B4188AE40\",\"endNode\":\"174EBF37-D5E3-43F3-9343-3E3EF7121FF8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":507,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[110],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C7F3B2E8-A80A-4337-B15F-588B1C3734C4\",\"startNode\":\"5BEDB126-02C8-41BE-A983-F66532E2312A\",\"endNode\":\"174EBF37-D5E3-43F3-9343-3E3EF7121FF8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":141,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[111],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"83B23BB4-9D50-48C5-B4B1-F1EDB7A31ECA\",\"startNode\":\"174EBF37-D5E3-43F3-9343-3E3EF7121FF8\",\"endNode\":\"D6A69967-32E5-4A72-B482-BF8A5A7BED60\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":592,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[112],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"DD060367-4513-45FE-9EC3-DD2D30667412\",\"startNode\":\"81873AC0-275A-4D01-A5FE-CAA775A3F18F\",\"endNode\":\"D6A69967-32E5-4A72-B482-BF8A5A7BED60\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":291,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[113],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B7573A2E-9922-44F7-9C91-DBE46A001D55\",\"startNode\":\"50DD55A1-E747-44F2-9B23-E0D0AD7F9580\",\"endNode\":\"C862DA7B-DDDC-46B5-A87B-3E4B20DEA0F6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":533,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[114],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"86E8F52C-5384-4B1C-B7D3-ABF1F9B21A59\",\"startNode\":\"69E60CBD-88BB-4A1B-BDAB-CB36E2ED0C4F\",\"endNode\":\"5074184B-CC13-4454-9D94-7DF949B6474A\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1489,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[115],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"877CCB23-D1C5-49AE-B1FC-C1920952108E\",\"startNode\":\"5074184B-CC13-4454-9D94-7DF949B6474A\",\"endNode\":\"D536FE18-6B70-4357-A39B-67332334501D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":471,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[116],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7F03E3B8-2219-4F46-81FA-66EBCC7C2DD5\",\"startNode\":\"D536FE18-6B70-4357-A39B-67332334501D\",\"endNode\":\"314A355E-D5C8-4EFB-9AC5-4FEE39D20BD4\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":863,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[117],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"F447B512-D11D-40C5-A9DA-C69B774F2F8F\",\"startNode\":\"9A0AA1FC-0ED7-4EC6-B800-A5F536DD4B9D\",\"endNode\":\"17B67A12-97BC-4231-98F3-5C2960158298\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":115,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[118],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"F88F6C1F-3AE3-468D-A9F0-A165CE194234\",\"startNode\":\"6DB73E33-8621-4D3F-928C-E40593541D32\",\"endNode\":\"9A0AA1FC-0ED7-4EC6-B800-A5F536DD4B9D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":617,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[119],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"694D151C-EBEA-49AB-8E0D-6F9A60463B16\",\"startNode\":\"97BE6F73-67AA-4A35-83F2-275C5D65F339\",\"endNode\":\"34957072-1EC4-4EFB-9929-5903600FED69\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":548,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[120],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"24AF6377-F141-4370-A9BE-7F5F6DA19D44\",\"startNode\":\"CFB46C2A-EB8B-4669-B2FF-DA230648778C\",\"endNode\":\"34957072-1EC4-4EFB-9929-5903600FED69\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":141,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[121],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8B80C080-3530-40FB-B01C-D441FCCF95C0\",\"startNode\":\"FF41E397-9380-442D-A43D-C78EBC4C0EA5\",\"endNode\":\"6DB73E33-8621-4D3F-928C-E40593541D32\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":192,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[122],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8190D3B5-4CF6-4492-971B-2D1CDA3575B3\",\"startNode\":\"2A0EE4A5-F27B-4194-BFBA-307C4EB36D5F\",\"endNode\":\"E04D9D19-4C37-43C5-A566-32601149885B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":2072,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[123],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"71C9ECA9-4F1D-471A-BD98-03B7A12AB84D\",\"startNode\":\"E04D9D19-4C37-43C5-A566-32601149885B\",\"endNode\":\"09C94578-7DE4-42D8-9D4D-6D880ACD9B71\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":924,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[124],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"911EF50C-5AEE-4477-9456-8B1D5A96B02C\",\"startNode\":\"09C94578-7DE4-42D8-9D4D-6D880ACD9B71\",\"endNode\":\"B3F135A0-D109-4A10-AC0D-CFB60929797E\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":61,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[125],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B7384900-BEAC-471E-8F36-97043F3BEA73\",\"startNode\":\"B3F135A0-D109-4A10-AC0D-CFB60929797E\",\"endNode\":\"02DCE2B6-266E-4A44-824B-B9F6865BBBA6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":250,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[126],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"346B2027-5A66-497A-9B1D-5E1AD063FFEE\",\"startNode\":\"02DCE2B6-266E-4A44-824B-B9F6865BBBA6\",\"endNode\":\"6341085F-ECE0-4E78-8906-58DE19BAF327\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":351,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[127],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"A7A0B40C-7187-46A7-8F6C-B8FB7DBB8287\",\"startNode\":\"3A2B8EC9-EBA9-4625-A5B5-DEA419BBD3C6\",\"endNode\":\"91C4F6A6-A681-4D60-8001-85A4DC0893AB\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1249,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[128],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"62C20CD2-0AAA-4693-B63C-B05D6AEDE154\",\"startNode\":\"6341085F-ECE0-4E78-8906-58DE19BAF327\",\"endNode\":\"3A2B8EC9-EBA9-4625-A5B5-DEA419BBD3C6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":551,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[129],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"6C3D9517-7A3B-4D58-A614-6CB077B0E64C\",\"startNode\":\"74BE37E1-7E57-40ED-AA6F-6C663F1DC6BD\",\"endNode\":\"3A2B8EC9-EBA9-4625-A5B5-DEA419BBD3C6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":114,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[130],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"408F7AB7-5F6A-4DCE-9939-173A6E0EF69D\",\"startNode\":\"E11893FE-528D-41E7-B1BB-826C6FB60E8E\",\"endNode\":\"6341085F-ECE0-4E78-8906-58DE19BAF327\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":37,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[131],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"EFB3936E-4C48-4E74-981D-B4A8C9C451A9\",\"startNode\":\"91C4F6A6-A681-4D60-8001-85A4DC0893AB\",\"endNode\":\"2FF9A7AE-CCD3-4F7C-AB6C-93B782E3CC84\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1060,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[132],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"0F9D9EFB-6C01-4B1E-AD74-BED3192BBA07\",\"startNode\":\"2FF9A7AE-CCD3-4F7C-AB6C-93B782E3CC84\",\"endNode\":\"50DD55A1-E747-44F2-9B23-E0D0AD7F9580\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":301,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[133],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D9F730B2-441C-4ABD-8A1F-42611340A138\",\"startNode\":\"D6A69967-32E5-4A72-B482-BF8A5A7BED60\",\"endNode\":\"284FBC14-1685-482A-9CE1-706A322FF88D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":647,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[134],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"A0C5285A-6712-4BD8-963D-0E52FD18E76E\",\"startNode\":\"2B31B111-41C8-4389-BAF1-9F3294FB1973\",\"endNode\":\"2E0791F9-C068-4F16-90BB-F73BD822DED7\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1289,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[135],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"EE50A46B-C304-45F8-8C30-B88472AA7825\",\"startNode\":\"E7E267E2-DAB7-42F0-B86B-EF4097EFBDC0\",\"endNode\":\"2B31B111-41C8-4389-BAF1-9F3294FB1973\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":77,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[136],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"05E91658-7428-4B16-B5F0-582BA95C4C0E\",\"startNode\":\"2E0791F9-C068-4F16-90BB-F73BD822DED7\",\"endNode\":\"04F8D1AC-B273-4551-95BE-62FC2A896751\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":872,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[137],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"76F3E68D-4636-49C3-B4A4-34915843B597\",\"startNode\":\"04F8D1AC-B273-4551-95BE-62FC2A896751\",\"endNode\":\"F9BD3C3F-0A00-4EA0-9A6C-9480EF99C99F\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1117,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[138],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B7241EF3-A100-4025-820C-4A610850F8E7\",\"startNode\":\"F9BD3C3F-0A00-4EA0-9A6C-9480EF99C99F\",\"endNode\":\"2A0EE4A5-F27B-4194-BFBA-307C4EB36D5F\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":2720,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[139],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8DFCB398-5241-436E-9E7C-42FCA75CCBE2\",\"startNode\":\"9AED493C-48B5-4968-AB1F-F8260C522EEE\",\"endNode\":\"332FB702-93DB-4D5F-BCAD-96538015C8EE\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":669,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[140],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5429087C-CF3F-41F9-8FF7-8D913C51A6EC\",\"startNode\":\"332FB702-93DB-4D5F-BCAD-96538015C8EE\",\"endNode\":\"6CEE9E6C-A807-4EA6-9C48-BA1C92645121\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":158,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[141],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B1BA1574-DABA-487C-92AD-F76DB2D1556D\",\"startNode\":\"6CEE9E6C-A807-4EA6-9C48-BA1C92645121\",\"endNode\":\"C1282B42-639F-4C9C-AC29-927C0D8525CC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":674,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[142],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"1997FA53-1B74-481D-A029-CEFA9529F6E9\",\"startNode\":\"C1282B42-639F-4C9C-AC29-927C0D8525CC\",\"endNode\":\"3B381727-7B07-4B29-9EE6-5B6090E7676A\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":976,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[143],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D26F7F91-5064-460E-8D1B-1CE41A0A2B71\",\"startNode\":\"3B381727-7B07-4B29-9EE6-5B6090E7676A\",\"endNode\":\"575526FA-7070-4840-B3D4-A0527CC548E4\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":213,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[144],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8C8B9518-A7F7-4FA9-A072-063DF39700E6\",\"startNode\":\"575526FA-7070-4840-B3D4-A0527CC548E4\",\"endNode\":\"CB5629FF-FD5E-48A3-98CC-869D88FBE9E6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":400,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[145],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"88D1F771-E22D-44B1-A648-16842EA7D4BC\",\"startNode\":\"CB5629FF-FD5E-48A3-98CC-869D88FBE9E6\",\"endNode\":\"80667810-F31F-479F-A649-AE763072B49A\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":271,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[146],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B8615F97-DB05-4D50-B792-4BB4C43B9F86\",\"startNode\":\"80667810-F31F-479F-A649-AE763072B49A\",\"endNode\":\"D3991260-B995-4FB5-87F5-F74A6C536357\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":302,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[147],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"1826A5A3-57A2-4C21-A747-8035AFE5F76E\",\"startNode\":\"D8AFEA9C-D404-4E14-B564-06794D8F3A8D\",\"endNode\":\"D3991260-B995-4FB5-87F5-F74A6C536357\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":103,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[148],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E9EB5F44-C400-4E90-8042-0A30A9E138BB\",\"startNode\":\"D3991260-B995-4FB5-87F5-F74A6C536357\",\"endNode\":\"B210FA9F-AE36-4167-AA75-C9E60635B336\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1364,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[149],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"48B28028-2293-4F76-8F3F-36816A39AA9B\",\"startNode\":\"B210FA9F-AE36-4167-AA75-C9E60635B336\",\"endNode\":\"B9A37525-766A-466D-A451-C8E059F758BF\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":143,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[150],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"6DDEC9AB-EDA3-4979-B085-10C09410E51D\",\"startNode\":\"B9A37525-766A-466D-A451-C8E059F758BF\",\"endNode\":\"E0696013-B5BD-477F-8F06-8D3756EBF92D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":515,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[151],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"67BE343C-6EC6-4AA7-ACB1-D63E2D8D3439\",\"startNode\":\"E0696013-B5BD-477F-8F06-8D3756EBF92D\",\"endNode\":\"BB1DDF44-3FFB-45EF-BECC-4B9113080E09\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":312,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[152],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"FD40D81A-3E63-4CAF-8AB8-A9157B2E1CD9\",\"startNode\":\"BB1DDF44-3FFB-45EF-BECC-4B9113080E09\",\"endNode\":\"E7E267E2-DAB7-42F0-B86B-EF4097EFBDC0\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1522,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[153],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"3614D3E1-8DFF-4213-BC1D-FD5D813A35A7\",\"startNode\":\"357C0B41-E5D1-4762-B4D7-3900581481B2\",\"endNode\":\"4EE09D1A-FA86-4687-A872-D019C48D8FC5\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":261,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[154],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8402269C-443A-4D50-A92F-5B28A465336B\",\"startNode\":\"4EE09D1A-FA86-4687-A872-D019C48D8FC5\",\"endNode\":\"9AED493C-48B5-4968-AB1F-F8260C522EEE\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1154,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[155],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7D62D1A8-CF6B-4C62-9677-F59802FC0A1C\",\"startNode\":\"67FF1616-5025-4496-B67D-E2A112132BA5\",\"endNode\":\"2124C7F4-6A59-43ED-BB5C-A85CB9D991AC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1376,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[156],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"956B7020-D1CD-4392-B0A8-1DA8D1D3DAB3\",\"startNode\":\"2124C7F4-6A59-43ED-BB5C-A85CB9D991AC\",\"endNode\":\"A33A586D-2D6B-4258-AE19-89AE6FC367D8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1304,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[157],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"805C6BD2-E51F-4C9B-A977-2BF85A76FF7F\",\"startNode\":\"A33A586D-2D6B-4258-AE19-89AE6FC367D8\",\"endNode\":\"3B9FD864-30AE-4F52-A74A-19756BDF7FE8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":284,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[158],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8E16D979-9524-4B61-9724-59EAE0ED31E3\",\"startNode\":\"3B9FD864-30AE-4F52-A74A-19756BDF7FE8\",\"endNode\":\"73495B18-E623-48C5-9A7D-33CAB6A4DBE6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":363,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[159],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"32E6613F-96F6-4EEE-B10E-C92D616ACD68\",\"startNode\":\"73495B18-E623-48C5-9A7D-33CAB6A4DBE6\",\"endNode\":\"357C0B41-E5D1-4762-B4D7-3900581481B2\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":911,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[160],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"123D84CC-8477-4775-B9A6-381F4D92805B\",\"startNode\":\"B1F2CBD9-E405-4E87-97E1-72588E115F94\",\"endNode\":\"357C0B41-E5D1-4762-B4D7-3900581481B2\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":98,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[161],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"30C01CAA-44A6-43E2-B28E-5311F4620BC4\",\"startNode\":\"8674B358-CC4F-4413-AB4A-5CB3CB5CEFD6\",\"endNode\":\"41E9293A-F28A-4CF9-8AC4-DE22C30F8306\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":553,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[162],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"568E0DBB-A844-4AFD-8CC3-DEC42720C9DC\",\"startNode\":\"568E64AD-A9AF-4D5A-8CA2-5ED32613CBB6\",\"endNode\":\"8674B358-CC4F-4413-AB4A-5CB3CB5CEFD6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":204,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[163],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"AC11E8BA-9982-4742-BF1B-04FD63BF6E27\",\"startNode\":\"51CB5B12-8518-40D5-9AC6-97E961298BAF\",\"endNode\":\"B5211A06-AEC2-417C-9D0F-A03B28DC1B1D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":36,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[164],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8B8338A4-387B-4F76-8F64-E4C8E00FBCA1\",\"startNode\":\"41E9293A-F28A-4CF9-8AC4-DE22C30F8306\",\"endNode\":\"F3331A13-053D-42CC-A974-933A36B89BA1\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":614,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[165],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"223065D0-7132-4996-827B-2605A26D0558\",\"startNode\":\"13EB9616-9D77-4B50-9433-A477F9151D29\",\"endNode\":\"3B2F8C20-62F7-48A7-8161-303BE6183301\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1259,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[166],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"73590963-542E-46CE-A3EE-483BDCC8855C\",\"startNode\":\"C1AEB77F-A5FF-44B3-BE0D-8FE98B30C245\",\"endNode\":\"67FF1616-5025-4496-B67D-E2A112132BA5\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":206,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[167],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"84C8FFD7-C5BD-496E-B01D-F491C95D7009\",\"startNode\":\"3B2F8C20-62F7-48A7-8161-303BE6183301\",\"endNode\":\"C1AEB77F-A5FF-44B3-BE0D-8FE98B30C245\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":244,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[168],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"08E65293-041E-490B-A480-F47600A79EFA\",\"startNode\":\"7B3595CC-BD7B-4D65-A04E-A66547F14DFA\",\"endNode\":\"F4404184-30B2-49A4-8539-F6BF3482A031\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":81,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[169],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B97DE34E-DEF9-42BA-8B6B-D578FC50249F\",\"startNode\":\"F4404184-30B2-49A4-8539-F6BF3482A031\",\"endNode\":\"AA54173A-2C5B-405E-B965-DD675CFA5561\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":158,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[170],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"0280B914-1A25-44A3-B823-2A4EFE20257E\",\"startNode\":\"80B04DCE-ECA6-4500-9B6D-C78C3C734588\",\"endNode\":\"AA7D52E0-6FDD-4CA5-A90E-AFE4DC3C7831\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":395,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[171],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B6D686FF-2F39-434E-9876-8EEB40E9E8FB\",\"startNode\":\"AA54173A-2C5B-405E-B965-DD675CFA5561\",\"endNode\":\"AA7D52E0-6FDD-4CA5-A90E-AFE4DC3C7831\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":306,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[172],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"CE80D772-208A-4297-9C19-5C63DB090D0A\",\"startNode\":\"AA7D52E0-6FDD-4CA5-A90E-AFE4DC3C7831\",\"endNode\":\"2EEC6E1E-B9A0-4ED9-8133-C7BBCE54E90B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":301,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[173],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D174769F-36EC-49BA-8DAD-FECC9F435221\",\"startNode\":\"1598EDBD-5F0D-4D16-BE09-A09EB94E281D\",\"endNode\":\"2EEC6E1E-B9A0-4ED9-8133-C7BBCE54E90B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":110,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[174],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"1EBF65A3-5163-4B3C-B9B9-4B70285B3FD1\",\"startNode\":\"2EEC6E1E-B9A0-4ED9-8133-C7BBCE54E90B\",\"endNode\":\"AEB0A1B8-A96D-46C1-B2E5-6B9026B3EBC5\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1180,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[175],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"94013371-B2C2-4B7F-A640-925966F6DE85\",\"startNode\":\"AEB0A1B8-A96D-46C1-B2E5-6B9026B3EBC5\",\"endNode\":\"08AB3FE0-854E-4373-BBB1-C7C9FAC84930\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1208,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[176],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"92F19462-3560-4FA8-B74A-37CE27A51E1D\",\"startNode\":\"00F4BC68-AB96-448A-B229-C14B004E942A\",\"endNode\":\"08AB3FE0-854E-4373-BBB1-C7C9FAC84930\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":52,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[177],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"58F48F76-0A0D-47B7-B79C-DA1090E069AE\",\"startNode\":\"08AB3FE0-854E-4373-BBB1-C7C9FAC84930\",\"endNode\":\"A155A0F2-A1C0-478A-BB3D-801FF72B1471\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1109,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[178],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"3CEEF85D-DFB1-479E-8321-C30FAB61D7E0\",\"startNode\":\"A155A0F2-A1C0-478A-BB3D-801FF72B1471\",\"endNode\":\"D8E27BDF-A878-4092-A0FD-4DF7D599AD6A\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":403,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[179],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8CD9CED1-25F7-472B-A8B9-D403D77906C7\",\"startNode\":\"D8E27BDF-A878-4092-A0FD-4DF7D599AD6A\",\"endNode\":\"B5211A06-AEC2-417C-9D0F-A03B28DC1B1D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1510,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[180],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"776F4152-1AF6-4CC8-8822-8EE30BA875BA\",\"startNode\":\"B5211A06-AEC2-417C-9D0F-A03B28DC1B1D\",\"endNode\":\"BCB06545-2DFE-4857-A5F3-920AE75584A6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":730,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[181],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"95784E8F-A49C-4209-AC32-74B69C4CED79\",\"startNode\":\"C4E22F8E-8CC7-4001-A900-92E8EFB41E87\",\"endNode\":\"BCB06545-2DFE-4857-A5F3-920AE75584A6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":47,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[182],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"501D6839-5D1F-4105-A2E7-02296ADE2D20\",\"startNode\":\"BCB06545-2DFE-4857-A5F3-920AE75584A6\",\"endNode\":\"8674B358-CC4F-4413-AB4A-5CB3CB5CEFD6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":107,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[183],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"717E6A35-B3F1-42A1-A45D-44E9D50BD813\",\"startNode\":\"B5957662-207F-4C78-96BD-351A9F8F463B\",\"endNode\":\"F3331A13-053D-42CC-A974-933A36B89BA1\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":511,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[184],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"0CA7A6CF-5A78-44C6-9990-9FD410EE60A0\",\"startNode\":\"F3331A13-053D-42CC-A974-933A36B89BA1\",\"endNode\":\"E07922A3-EB0F-4256-96C6-956DBB4B7803\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":98,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[185],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"AEF24040-378A-4CC8-9D3C-55862468F024\",\"startNode\":\"E07922A3-EB0F-4256-96C6-956DBB4B7803\",\"endNode\":\"42A2C020-5613-42FE-B3F6-B7CDB43141C2\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":856,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[186],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D7C3AA06-49C6-4009-95B4-11E357F6941F\",\"startNode\":\"47B47273-0FED-4E86-BA69-9F1ADBE4FFD1\",\"endNode\":\"42A2C020-5613-42FE-B3F6-B7CDB43141C2\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":259,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[187],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"51B90BD1-9A4E-4FAC-9B01-91E8803A3DCF\",\"startNode\":\"42A2C020-5613-42FE-B3F6-B7CDB43141C2\",\"endNode\":\"2F3613D0-0F22-4E8C-8024-C080B45C2E6D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1564,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[188],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"070BBACB-CB0A-4DBB-9CAC-71EF7A10E168\",\"startNode\":\"2F3613D0-0F22-4E8C-8024-C080B45C2E6D\",\"endNode\":\"C59C16DC-F060-460A-8FAF-D86AEA53A929\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":628,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[189],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"2F8887D5-024D-4663-A054-5FA5A9557CAA\",\"startNode\":\"C59C16DC-F060-460A-8FAF-D86AEA53A929\",\"endNode\":\"C6CDA271-7BFE-4E81-A754-C773C87F54FE\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1417,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[190],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"669AF7F3-A6FB-4E1B-A29C-56C35792C095\",\"startNode\":\"C6CDA271-7BFE-4E81-A754-C773C87F54FE\",\"endNode\":\"29F7467A-14ED-46B3-A2FD-CE2ECFD73758\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1591,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[191],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"A8151013-0BBC-4D71-863A-996ED28F1F2F\",\"startNode\":\"29F7467A-14ED-46B3-A2FD-CE2ECFD73758\",\"endNode\":\"13EB9616-9D77-4B50-9433-A477F9151D29\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":355,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[192],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"F74A40EA-470C-4D4B-84A8-C2E0358CBAE5\",\"startNode\":\"2A717750-2E8D-487D-B4A6-0B72873C154D\",\"endNode\":\"760FA747-1B77-42C5-B8FE-A07BAFD6FE66\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1268,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[193],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C1D2F8DF-72E3-4825-A2B7-F7B094372A87\",\"startNode\":\"4A2D0624-807C-4EFE-AA81-BBA80FEC82B3\",\"endNode\":\"760FA747-1B77-42C5-B8FE-A07BAFD6FE66\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":133,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[194],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8DFA7424-263B-4D58-9D24-77F83D09DDBA\",\"startNode\":\"760FA747-1B77-42C5-B8FE-A07BAFD6FE66\",\"endNode\":\"9BA00987-CA0F-4256-86A5-729218167720\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":188,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[195],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"803810C3-27A2-4197-A2E8-AD1C1AB09E39\",\"startNode\":\"9BA00987-CA0F-4256-86A5-729218167720\",\"endNode\":\"F4404184-30B2-49A4-8539-F6BF3482A031\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1761,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[196],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B687EAD4-A99D-462A-AAD7-B9C92ADC77EE\",\"startNode\":\"BDB125DD-3803-4498-8644-72F2F545ED3B\",\"endNode\":\"297CEE28-81CF-474B-8E34-096FDE61BF54\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":334,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[197],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"EE0E91F3-B406-4FA3-B8CC-828F06FFC26D\",\"startNode\":\"297CEE28-81CF-474B-8E34-096FDE61BF54\",\"endNode\":\"AAD28F37-1BBD-4C07-A19B-1E1EA202ADE3\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1348,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[198],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"20A2EA6F-1136-4FCD-82AC-CBBF368A72AF\",\"startNode\":\"AAD28F37-1BBD-4C07-A19B-1E1EA202ADE3\",\"endNode\":\"408BA632-EC5A-44EC-BFC8-5E97CA703FDA\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":370,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[199],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"A28109C2-9937-4AB6-BCEC-375EAC97DC16\",\"startNode\":\"408BA632-EC5A-44EC-BFC8-5E97CA703FDA\",\"endNode\":\"A9A39E7D-052F-458F-8B9D-BA213DB89F77\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":262,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[200],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C938799E-17D6-4E62-A062-8F2DB9BD79E6\",\"startNode\":\"A9A39E7D-052F-458F-8B9D-BA213DB89F77\",\"endNode\":\"9248AA29-FA7B-401D-AFB6-0085B5909C23\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1105,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[201],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7EE02746-9F4F-4742-B846-CA353251BDB2\",\"startNode\":\"9248AA29-FA7B-401D-AFB6-0085B5909C23\",\"endNode\":\"4DCF2659-912F-4504-8F18-849F8B7C0B50\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1102,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[202],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7D244479-BFA3-4809-AF69-5252270D27F2\",\"startNode\":\"4DCF2659-912F-4504-8F18-849F8B7C0B50\",\"endNode\":\"C43BC65C-E2FB-4B7C-9821-821541DAD122\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":621,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[203],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"60B20531-DE1C-4AE9-919D-F32FFFC045FA\",\"startNode\":\"C43BC65C-E2FB-4B7C-9821-821541DAD122\",\"endNode\":\"E22FE5CE-4C9F-4F79-86DF-28AEE5E1B42E\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":3668,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[204],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"CC86A15B-06EB-45AC-B84E-FA74C6FABFCA\",\"startNode\":\"E22FE5CE-4C9F-4F79-86DF-28AEE5E1B42E\",\"endNode\":\"9375BCE6-251A-4DBD-BD56-0618DE7B8D75\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":189,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[205],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"051C020D-DC35-4C09-A109-22D67C7180FC\",\"startNode\":\"9375BCE6-251A-4DBD-BD56-0618DE7B8D75\",\"endNode\":\"6CF7F37F-B869-415C-91B9-0BDD2E918091\",\"form\":\"lake\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":433,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[206],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"78A94AC4-10B0-446A-A315-36BDABC10DEF\",\"startNode\":\"6CF7F37F-B869-415C-91B9-0BDD2E918091\",\"endNode\":\"6F138498-0680-4762-A6C3-BAA14D5E1739\",\"form\":\"lake\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1011,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[207],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"21580E6F-4A18-4A5A-8E85-B833AF710E61\",\"startNode\":\"6F138498-0680-4762-A6C3-BAA14D5E1739\",\"endNode\":\"D63250B8-CE7B-4093-A59B-D30789049A72\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":11,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[208],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"BE31104B-9D5B-4498-BEBD-C9EBADB0AF0B\",\"startNode\":\"D63250B8-CE7B-4093-A59B-D30789049A72\",\"endNode\":\"9339133F-F3DB-4216-87D3-B76620EA9861\",\"form\":\"lake\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":615,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[209],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"36F8E393-905B-415A-8BD9-DF12CE702066\",\"startNode\":\"9339133F-F3DB-4216-87D3-B76620EA9861\",\"endNode\":\"EC66A777-73A5-451E-9CC9-833FB27990EA\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":405,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[210],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5959FB1A-DFBC-40C5-AEC5-12D5073AE180\",\"startNode\":\"EC66A777-73A5-451E-9CC9-833FB27990EA\",\"endNode\":\"2A717750-2E8D-487D-B4A6-0B72873C154D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":123,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[211],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"1B2AC0BD-2C17-4953-9594-FE0CACF23D7E\",\"startNode\":\"FADDBB66-2C22-4A05-B590-41F28C3BCEFE\",\"endNode\":\"28EFFA43-460E-410D-B807-03C52E1A54D8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1731,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[212],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"3BC27F40-82AC-4198-B2B3-D9D70D24F63F\",\"startNode\":\"28EFFA43-460E-410D-B807-03C52E1A54D8\",\"endNode\":\"A9825F94-81D6-4B53-BCFA-0D0CFDD15783\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":12,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[213],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"1A701352-9C2D-425F-868F-519F013EA651\",\"startNode\":\"A9825F94-81D6-4B53-BCFA-0D0CFDD15783\",\"endNode\":\"BDB125DD-3803-4498-8644-72F2F545ED3B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":607,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[214],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"11D8878F-93CF-4C8D-AD62-4093313C91D3\",\"startNode\":\"2521114C-A616-4B82-919B-184DBD2493C1\",\"endNode\":\"BDB125DD-3803-4498-8644-72F2F545ED3B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":82,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[215],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B796DBD2-4C2E-4203-8A7A-D0D5D87FB874\",\"startNode\":\"D39E3199-100F-4252-A803-E03D3ABE780D\",\"endNode\":\"2B524E04-DB5E-48F4-9B18-1FA7E465F6B1\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":608,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[216],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"45C1AD86-E23C-42CD-A5DF-B3C1847C5EBA\",\"startNode\":\"4BF2F931-DEE6-4BDB-9D28-9755B75FC8B2\",\"endNode\":\"614C7E15-4589-456C-B870-068CB5698AD0\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":978,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[217],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"12980AFA-05D4-4542-9A8A-A88CBB3993A6\",\"startNode\":\"6A56AC6C-320F-4E8C-91C9-090498CF6492\",\"endNode\":\"614C7E15-4589-456C-B870-068CB5698AD0\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":84,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[218],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"CC197185-AE87-4700-B82A-1A2B7BBEA757\",\"startNode\":\"614C7E15-4589-456C-B870-068CB5698AD0\",\"endNode\":\"56B61C5E-FDC6-492F-ABA3-6FD069F9E2BC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1367,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[219],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B39D35BD-625B-470E-A70D-7360EFA798EA\",\"startNode\":\"C53D3471-6686-4D36-96C6-2694BA4DDFAA\",\"endNode\":\"E91E070D-AAB7-4614-88E9-873CB0854B84\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":3746,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[220],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"1C45BFBE-094D-4F57-BECB-CFB687EB77FD\",\"startNode\":\"56B61C5E-FDC6-492F-ABA3-6FD069F9E2BC\",\"endNode\":\"C53D3471-6686-4D36-96C6-2694BA4DDFAA\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":157,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[221],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"A27C3FCA-C8DE-4FD4-BEA2-B1A14CB83926\",\"startNode\":\"E91E070D-AAB7-4614-88E9-873CB0854B84\",\"endNode\":\"4314849A-60DD-4ADD-BBE2-D04BC451D6F2\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1156,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[222],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7DF877FA-3697-4B70-A9D7-63EBC73274DE\",\"startNode\":\"C5567EE1-43CB-40BE-9113-2CB73B8BB17D\",\"endNode\":\"E5B90FDD-F528-414E-A626-CB5E53853A1F\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":408,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[223],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"2560B046-9679-41EA-9E0F-D3DEA1B7A4F6\",\"startNode\":\"6646F3D7-71EA-411F-9773-54E246882856\",\"endNode\":\"D04F9735-3597-4F3A-9515-343DD1A5356C\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":67,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[224],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C9D1BDC0-422E-4E8E-97C3-9A74A3D2F79E\",\"startNode\":\"D04F9735-3597-4F3A-9515-343DD1A5356C\",\"endNode\":\"E5B90FDD-F528-414E-A626-CB5E53853A1F\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":99,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[225],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"F02303E4-D6A6-44A5-8C08-9440422EE42F\",\"startNode\":\"E5B90FDD-F528-414E-A626-CB5E53853A1F\",\"endNode\":\"81126C4E-FAE0-48FB-91DB-EAFFE4597237\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":405,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[226],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"3A49F799-BB2D-4881-8EF1-F407F85568AB\",\"startNode\":\"F019262B-AD43-4880-8AFF-B96DE1ACE9EA\",\"endNode\":\"22AF1BBD-C735-4342-B1F6-44B3073AA9F4\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":754,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[227],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C3417E25-5186-4A68-8BC7-3596672236F7\",\"startNode\":\"E286FD15-2B49-4A36-96DB-2858D467E8B3\",\"endNode\":\"3E1556D3-52D6-420E-876F-67388239C1DC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":57,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[228],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"CD43111E-D5F6-4D94-8B61-4840265B7AE3\",\"startNode\":\"9EB6B583-0D3E-4437-B255-56E2D256B76D\",\"endNode\":\"8B0A0E41-AC45-4B44-83BF-6A8B3A0D0592\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":180,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[229],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"07E92BDC-E196-49AE-8E3F-882223831FC4\",\"startNode\":\"8B0A0E41-AC45-4B44-83BF-6A8B3A0D0592\",\"endNode\":\"299EBB82-C66B-4AD7-A5C1-7D1564B2F6B5\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":283,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[230],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5CBF9E5C-52A9-4282-AC2C-EE3ADCBD5D4C\",\"startNode\":\"9C45F10A-22FA-466B-983D-0326AE5118AC\",\"endNode\":\"8B0A0E41-AC45-4B44-83BF-6A8B3A0D0592\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1762,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[231],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E1873889-0F84-47CE-A6B1-9D1129F3BBD1\",\"startNode\":\"76457108-E588-4825-99AB-16999EAC8D33\",\"endNode\":\"0ED5CC5A-C415-4D98-B040-F161365A4923\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":203,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[232],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"45C7B9F6-CC12-4E0C-8E9D-780D2C6D2D7D\",\"startNode\":\"A2A63847-899F-435E-B69F-764E1658BC2B\",\"endNode\":\"76457108-E588-4825-99AB-16999EAC8D33\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":753,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[233],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"41C48579-761D-4F8A-BD94-DFD2B7D26EB6\",\"startNode\":\"212B988D-06B4-4B98-8248-12B4FE07F47C\",\"endNode\":\"299EBB82-C66B-4AD7-A5C1-7D1564B2F6B5\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":212,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[234],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"AEFCE97B-2EB6-4783-96A9-B4ACF2E5F90A\",\"startNode\":\"299EBB82-C66B-4AD7-A5C1-7D1564B2F6B5\",\"endNode\":\"01269D3B-EEE8-45E3-88A7-22C6410A1FA8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":297,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[235],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"F6026E23-F1B3-4163-BC7E-C9E9D1DF2984\",\"startNode\":\"0B3906A6-5C63-447C-B0C8-0FCF6F523AA2\",\"endNode\":\"01269D3B-EEE8-45E3-88A7-22C6410A1FA8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":217,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[236],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"ED11763A-FAD7-4658-9F20-17752C04DB1B\",\"startNode\":\"01269D3B-EEE8-45E3-88A7-22C6410A1FA8\",\"endNode\":\"A2A63847-899F-435E-B69F-764E1658BC2B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":127,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[237],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"3EDA0A49-5910-419A-96ED-42FF328EFC9A\",\"startNode\":\"64DBF809-544B-4FF0-84F0-0F7CAC51370C\",\"endNode\":\"A2A63847-899F-435E-B69F-764E1658BC2B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":27,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[238],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"1D4A2D0C-933D-401D-AAD2-0DEF60854FAF\",\"startNode\":\"3E1556D3-52D6-420E-876F-67388239C1DC\",\"endNode\":\"A69821A3-C53A-4A2B-8247-BD9CB3F78F33\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":2682,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[239],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"80A5116E-30AF-4912-8D5C-A9BDF95BE96F\",\"startNode\":\"A69821A3-C53A-4A2B-8247-BD9CB3F78F33\",\"endNode\":\"9C45F10A-22FA-466B-983D-0326AE5118AC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1108,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[240],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"9AED3835-4D24-44C6-A251-310A9C93155F\",\"startNode\":\"4314849A-60DD-4ADD-BBE2-D04BC451D6F2\",\"endNode\":\"FADDBB66-2C22-4A05-B590-41F28C3BCEFE\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1091,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[241],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"6BFDC70E-0DF8-4E02-ADFC-86EEBD644FF4\",\"startNode\":\"83797AD6-1A81-414B-BD7B-F19F2F7C3876\",\"endNode\":\"A58B7092-C90A-4653-86DA-6C21905A6C76\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1165,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[242],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5D7E184D-0C01-41D7-B23A-C996BD11EA9F\",\"startNode\":\"A58B7092-C90A-4653-86DA-6C21905A6C76\",\"endNode\":\"274AFD35-8EFF-4D70-B118-9361286BD31B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1194,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[243],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"24573DD1-BB68-4F42-9394-06F8CF41843C\",\"startNode\":\"274AFD35-8EFF-4D70-B118-9361286BD31B\",\"endNode\":\"C7590260-3681-4D60-AA28-ED204A8E1C76\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":927,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[244],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"A286DAA9-D38C-4692-8989-5C8575E28137\",\"startNode\":\"C7590260-3681-4D60-AA28-ED204A8E1C76\",\"endNode\":\"4AAD20F7-EEC7-4C85-8557-BDD78C7DAD03\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":660,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[245],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"36E10235-44E3-4489-8591-ECA21564814D\",\"startNode\":\"4AAD20F7-EEC7-4C85-8557-BDD78C7DAD03\",\"endNode\":\"FF3CA07B-0FCD-4602-916B-72684043F2FC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":200,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[246],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"FD15F9C5-784E-4C99-92E7-50BA556CDE06\",\"startNode\":\"FF3CA07B-0FCD-4602-916B-72684043F2FC\",\"endNode\":\"CB87E627-48EA-4C9F-8438-96764B7FE816\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":17,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[247],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"41045ED3-7307-4B8F-BA67-3922608863FC\",\"startNode\":\"CB87E627-48EA-4C9F-8438-96764B7FE816\",\"endNode\":\"D39E3199-100F-4252-A803-E03D3ABE780D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":3696,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[248],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"96C1C8CB-2FC5-45DC-82A4-F0FCD6C2810F\",\"startNode\":\"81126C4E-FAE0-48FB-91DB-EAFFE4597237\",\"endNode\":\"F019262B-AD43-4880-8AFF-B96DE1ACE9EA\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":158,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[249],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"4D820C96-F959-4D64-A4E5-4B6E5851C632\",\"startNode\":\"22AF1BBD-C735-4342-B1F6-44B3073AA9F4\",\"endNode\":\"6A22BFAB-A6EE-45AC-B752-9282A6D4A156\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":688,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[250],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"9F7FC56E-F4C5-40CA-A8D0-D63A53562870\",\"startNode\":\"575BEC86-F3A4-460B-A34C-6A9967128D48\",\"endNode\":\"6A22BFAB-A6EE-45AC-B752-9282A6D4A156\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":44,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[251],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"050F1F2D-F406-4827-9791-2BC190E4712F\",\"startNode\":\"6A22BFAB-A6EE-45AC-B752-9282A6D4A156\",\"endNode\":\"C260E2FC-1438-4745-BFBE-2ACDE97568E3\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":322,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[252],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E2629B33-4CAD-43FD-995E-1E13858E506E\",\"startNode\":\"C260E2FC-1438-4745-BFBE-2ACDE97568E3\",\"endNode\":\"3E1556D3-52D6-420E-876F-67388239C1DC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":944,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[253],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D66AA5DA-9D61-42CD-9756-FB4838CD43F0\",\"startNode\":\"561A0CAB-FBAA-4116-AC6D-6467074141E7\",\"endNode\":\"451194AA-16AB-4A63-8F39-3FF87CF863B5\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":2033,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[254],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D7B05B62-7C76-493D-8C6A-65E14F47265C\",\"startNode\":\"AC0B7B63-D776-4FB1-AE33-0254714762D6\",\"endNode\":\"EC840A23-52AB-452C-B2AC-2D2AE62DE27F\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":812,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[255],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"17606830-4EBC-4D4B-B523-1A43FC0E2B9C\",\"startNode\":\"B16F2A3D-9FF1-4579-B1A9-31E44FA4A6C7\",\"endNode\":\"C7F4539A-5127-445D-B453-715CE9ADEE29\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":200,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[256],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"A3D24E15-54F2-4B44-82FE-67DAEB48CBD3\",\"startNode\":\"C7F4539A-5127-445D-B453-715CE9ADEE29\",\"endNode\":\"96E6DA13-EFE9-4FF3-AFD1-AFD9FCA0DD0C\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":129,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[257],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"CFCE4155-FEE2-4077-89EF-EEB978154422\",\"startNode\":\"0ED5CC5A-C415-4D98-B040-F161365A4923\",\"endNode\":\"B16F2A3D-9FF1-4579-B1A9-31E44FA4A6C7\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1569,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[258],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"130AB411-2738-4761-846B-F1964CFE2F1E\",\"startNode\":\"96E6DA13-EFE9-4FF3-AFD1-AFD9FCA0DD0C\",\"endNode\":\"2E4B0885-CCB8-43F6-8610-5F7AD9983DF9\",\"form\":\"lake\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1846,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[259],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C8324116-65B2-40CC-8B02-0864705169AD\",\"startNode\":\"1DABACD7-A66A-4EC7-A570-D21536D68C36\",\"endNode\":\"B16F2A3D-9FF1-4579-B1A9-31E44FA4A6C7\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":28,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[260],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8D0789DF-AD54-4154-A3DC-74F26265BF09\",\"startNode\":\"23BDE209-9D71-423D-B565-AAD74CACCD7C\",\"endNode\":\"1DABACD7-A66A-4EC7-A570-D21536D68C36\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":72,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[261],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"14441A4A-27A7-4EA1-99DA-22159931D0FE\",\"startNode\":\"2E4B0885-CCB8-43F6-8610-5F7AD9983DF9\",\"endNode\":\"561A0CAB-FBAA-4116-AC6D-6467074141E7\",\"form\":\"lake\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":89,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[262],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E43C36D7-FFB3-4AEC-B347-D46168FD7BB5\",\"startNode\":\"EC840A23-52AB-452C-B2AC-2D2AE62DE27F\",\"endNode\":\"5D125C55-70C7-4CFD-A3E8-7F3DF7C12936\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1362,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[263],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"AA46195C-9FA4-4DE8-AE06-E0095C8D5EA6\",\"startNode\":\"5D125C55-70C7-4CFD-A3E8-7F3DF7C12936\",\"endNode\":\"F35ADB8A-1BC1-4E5B-932F-2B29C9A7DA86\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":220,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[264],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C48249B5-8CFF-456F-A160-5F673C6E5C79\",\"startNode\":\"F35ADB8A-1BC1-4E5B-932F-2B29C9A7DA86\",\"endNode\":\"8B0A455F-DE10-44E5-8C17-083B1012DC0F\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":864,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[265],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"2625FF23-81D2-421E-B302-52A44BC59FE9\",\"startNode\":\"8B0A455F-DE10-44E5-8C17-083B1012DC0F\",\"endNode\":\"83797AD6-1A81-414B-BD7B-F19F2F7C3876\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1116,\"name2\":null}}]}},\"arcs\":[[[-4.5948822297823,57.00848736503577],[-4.594639698268275,57.008571480580244]],[[-4.594639698268275,57.008571480580244],[-4.5943343654054045,57.0088866945058],[-4.592754037059848,57.0090140888367],[-4.592167615285217,57.00934977105691],[-4.591159485529921,57.009041373439],[-4.590777550051798,57.0095250524144],[-4.590398715266141,57.00943538861948],[-4.5901907455624285,57.00966140252079],[-4.588454972343878,57.01005087388338],[-4.587937707985016,57.01049124042832],[-4.5873808204429,57.010596222854204],[-4.586522826335943,57.011194699755585],[-4.586054212337098,57.01127349651084],[-4.585710890689298,57.01116870529853]],[[-4.585710890689298,57.01116870529853],[-4.584084270260819,57.011409371686554],[-4.583879187821979,57.01186286373386],[-4.583483179595449,57.01202912169766]],[[-4.583483179595449,57.01202912169766],[-4.582301550439272,57.01213583624502],[-4.581418143906651,57.011856150271015],[-4.5811753845638075,57.011911575477406],[-4.580611457714384,57.01244085484396],[-4.579686846163809,57.01254359088558]],[[-4.5793862460027555,57.01252273795955],[-4.579363105126706,57.01293301814611],[-4.578447454674381,57.01398610520597],[-4.577811167100247,57.01434449336418],[-4.576916859422974,57.01453357708684],[-4.576315965000065,57.014956203644275],[-4.576262569727617,57.01523212245897],[-4.575392856445565,57.015465173633785],[-4.575004950730846,57.015425706711184],[-4.5744305379763075,57.01513107402368],[-4.5739466440194,57.015292548670196],[-4.573859340108344,57.01559297905597],[-4.5741034163789935,57.01602076655849],[-4.573685167349151,57.01635271882187],[-4.57292603513346,57.01614105318347],[-4.57237228180176,57.015625537969214]],[[-4.579686846163809,57.01254359088558],[-4.5793862460027555,57.01252273795955]],[[-4.57237228180176,57.015625537969214],[-4.571647836250868,57.01577739011327],[-4.570884175256546,57.01614635801685],[-4.569652981102505,57.016234288163574],[-4.568558411738236,57.01689132618397],[-4.5667345100120125,57.017425189308746],[-4.566616189726005,57.01768050689961],[-4.56712625080654,57.018026642135936],[-4.567092822922528,57.0182132662717],[-4.566890536008345,57.018333257007555],[-4.566140608430642,57.01834118012576]],[[-4.570780417398609,57.01799115989623],[-4.571211777249728,57.01818953396576],[-4.571053791968192,57.01870269589671]],[[-4.566140608430642,57.01834118012576],[-4.565328671437673,57.01854906962987],[-4.564554041977386,57.018353937212495],[-4.563384176863884,57.01829531995041],[-4.561840753745031,57.01881527544416],[-4.561638199233907,57.01923335679575],[-4.5608173196257065,57.01959210899598],[-4.559696850748504,57.01985696092832],[-4.559356314427087,57.02043737719447],[-4.55892120887663,57.02051951869745],[-4.557839185864272,57.020471634047205],[-4.557303682623145,57.02089121089728],[-4.555688755558458,57.02095323230841],[-4.5537831160727995,57.02163649429476]],[[-4.571053791968192,57.01870269589671],[-4.570410717840252,57.0188862093279],[-4.56955386746883,57.0186294390242],[-4.569454952841901,57.018497296234656],[-4.568800026254693,57.01865713964527],[-4.568731403548999,57.01951553657903],[-4.568580228623024,57.01973396538611],[-4.568247127675619,57.0198326485427]],[[-4.568247127675619,57.0198326485427],[-4.566830565396583,57.02007524335094],[-4.565964676430464,57.01994552839238],[-4.5651930295629395,57.02030105326703],[-4.564837654581044,57.020676889196196],[-4.5648933244923615,57.02090374471533],[-4.565220862677057,57.02113293554952],[-4.5659301715143386,57.021163596374066],[-4.566037322849654,57.02158261330086],[-4.56540949633249,57.02203862844225],[-4.564173153229637,57.021138682560505],[-4.563185669561771,57.02117437152121],[-4.561369867043092,57.02094644126147],[-4.560523555441848,57.02100312443458],[-4.559743591408155,57.021780267926076],[-4.55939899131954,57.02163561879511],[-4.55898921813872,57.021166079216336],[-4.556939580377215,57.02164015539222],[-4.555121270583729,57.02158185721257],[-4.554139689733297,57.02172303907296],[-4.5537831160727995,57.02163649429476]],[[-4.5537831160727995,57.02163649429476],[-4.552460449881844,57.02157343317705],[-4.5511070657737625,57.02133376430907],[-4.549519461083603,57.0219225848206],[-4.546677533241091,57.02234280323432],[-4.545083237528802,57.02311251662097],[-4.544619769041084,57.02324344357265],[-4.544084686148977,57.023221072099005]],[[-4.544084686148977,57.023221072099005],[-4.541992980584558,57.02439600559972],[-4.540134407535819,57.02513759073357],[-4.53879491292686,57.025160189815004],[-4.537710485501477,57.02471118857294],[-4.536949007740411,57.0248851550371],[-4.535638823473836,57.02490973236064]],[[-4.536442431737163,57.02523781985771],[-4.535638823473836,57.02490973236064]],[[-3.101243250810859,57.65193885665691],[-3.101264769067867,57.65217896433507],[-3.102111713922903,57.652264200853715],[-3.1022708504116503,57.652417231571725],[-3.101328875376201,57.65422814505911]],[[-3.101328875376201,57.65422814505911],[-3.10129752352314,57.65629576306623],[-3.101496100853838,57.656632692354876],[-3.102688143389343,57.657555188142695],[-3.1031465720421703,57.658418677523684],[-3.103181258807821,57.65919684055339],[-3.102946425449511,57.65985841936121],[-3.1012571813915533,57.660837192403406],[-3.1008014185519177,57.66128932069755],[-3.0997426986925665,57.661756213194074],[-3.098086017478791,57.66274777471458],[-3.0982739186004213,57.662936492540155],[-3.0968022634324384,57.66361939195312],[-3.0965014492002765,57.6642711094598],[-3.0965802822171806,57.665316762326036],[-3.097955886757639,57.666367245280355],[-3.0991825513045765,57.66679199654534]],[[-3.1002047700137565,57.66268516682207],[-3.0996155341152702,57.66392868373921],[-3.0997529298483455,57.66500113426998],[-3.0991825513045765,57.66679199654534]],[[-3.0991825513045765,57.66679199654534],[-3.0991780551865693,57.668089266177454],[-3.098672494103686,57.66895503485603],[-3.0982393618268973,57.66924517290393]],[[-3.0982393618268973,57.66924517290393],[-3.0968925454571408,57.6696792373915],[-3.0955087133159487,57.66980980417242]],[[-3.0982393618268973,57.66924517290393],[-3.098206817006326,57.67031451806234],[-3.0986169014031106,57.670581075050066],[-3.0994533787337226,57.67074960448716],[-3.099719838541812,57.67091778504739]],[[-3.099719838541812,57.67091778504739],[-3.0998862394684314,57.67112007202693],[-3.0998352870977692,57.67192880214864],[-3.1001411128103733,57.67256043000344],[-3.1000340294198465,57.67299937045471],[-3.0994154910931004,57.673452278513615],[-3.0973628115350125,57.67430183261176]],[[-3.0955788333035734,57.67335144702933],[-3.0973628115350125,57.67430183261176]],[[-3.0973628115350125,57.67430183261176],[-3.098465688040357,57.67501008954478],[-3.0999403897688085,57.676932205767464]],[[-3.0961040763370664,57.66253410298401],[-3.0961752175635002,57.662814294163425],[-3.0948642514241946,57.66502593694394],[-3.0947403545680428,57.66569821653117],[-3.093510682784002,57.66758728023944],[-3.0937705703481884,57.66783952065315],[-3.094768035844883,57.66792377584528],[-3.095639270774449,57.668402480559486],[-3.0960182339098377,57.66903348470723],[-3.0955087133159487,57.66980980417242]],[[-3.0955087133159487,57.66980980417242],[-3.094594285252233,57.67011846937944]],[[-3.094594285252233,57.67011846937944],[-3.092754200564857,57.67098820791308]],[[-3.094594285252233,57.67011846937944],[-3.094198354605901,57.67058766107846]],[[-3.094198354605901,57.67058766107846],[-3.0937141787033746,57.67168426548131],[-3.0930695768485257,57.67202508071148]],[[-3.092754200564857,57.67098820791308],[-3.0926521245663716,57.67147937932805],[-3.0930695768485257,57.67202508071148]],[[-3.0930695768485257,57.67202508071148],[-3.0935424054744654,57.67248846734951],[-3.0955788333035734,57.67335144702933]],[[-3.1120524701337886,57.61052149560371],[-3.1126134351122405,57.61082036538337],[-3.112589728024907,57.61120567805364],[-3.1116211569819257,57.612308607737084],[-3.1089933722618395,57.61371310844515],[-3.107699188471559,57.61397912765605],[-3.1057844052296137,57.614667288602895]],[[-3.1060005590605906,57.61374346667807],[-3.1055811125143378,57.61446631966993],[-3.1057844052296137,57.614667288602895]],[[-3.1057844052296137,57.614667288602895],[-3.105388918895954,57.614928382080144]],[[-3.105388918895954,57.614928382080144],[-3.1052428920826225,57.6156816301729],[-3.106236501216488,57.61748059606131],[-3.1065610092253837,57.61959730507972],[-3.1068283561353813,57.620147241814685]],[[-3.1068283561353813,57.620147241814685],[-3.1054269556651244,57.62093707789045],[-3.104093329652717,57.62245617785705],[-3.103327478288459,57.62308449118731],[-3.1013872753495377,57.624140568835024],[-3.1010388926805206,57.62475642622005],[-3.0981136226482318,57.62588983876893],[-3.0970814586279625,57.62649931606967],[-3.0967923509624553,57.626957174222724],[-3.096875742133611,57.62862890945949],[-3.0975040630486332,57.62946229046055],[-3.0994925184765214,57.6305935807725],[-3.1021062402352877,57.631221012808915]],[[-3.1004866740236756,57.62895774573729],[-3.1018645039866404,57.62981970225006],[-3.1026427354272976,57.63071032087269],[-3.1021062402352877,57.631221012808915]],[[-3.1021062402352877,57.631221012808915],[-3.1062691877393016,57.63240535600195],[-3.1066629880074252,57.63289750298683],[-3.106704519304689,57.63382760123218],[-3.1063031662418075,57.63439794278931],[-3.101067233175029,57.63621555153984],[-3.100318542948509,57.63700152561422]],[[-3.102644711373671,57.63375869215857],[-3.1018707285037976,57.63458603897161]],[[-3.100615661488395,57.634936619074004],[-3.100647746422042,57.63583077856901],[-3.100176363870926,57.636415453528066],[-3.100318542948509,57.63700152561422]],[[-3.100318542948509,57.63700152561422],[-3.099999162390854,57.63824297214329],[-3.1000800470728933,57.63952692860585],[-3.100839913475537,57.640989486096174],[-3.1013034719067787,57.64116807387898]],[[-3.096218851517912,57.643399619316135],[-3.0959239571935293,57.643759159889086],[-3.096129979936584,57.6440358470235],[-3.0955499496262417,57.64430102138199],[-3.0950111468180843,57.64516212720732]],[[-3.0950111468180843,57.64516212720732],[-3.0939787323687167,57.64662927248862],[-3.0932805051750374,57.64810807221822],[-3.0935431602974206,57.649069675730374],[-3.0949780890975362,57.65007170787529],[-3.097671593766351,57.65111661407571],[-3.0989341055816824,57.65271090966513],[-3.0992913601710765,57.653553014177845],[-3.0997331049384838,57.6539083135004],[-3.101328875376201,57.65422814505911]],[[-3.1417456183481214,57.559564782259024],[-3.141263030517625,57.56068485486121],[-3.1393442824187474,57.562752859459906],[-3.1357835905139955,57.56767599564473],[-3.134838801430017,57.56816257259955],[-3.132986183588575,57.568498288303395],[-3.131477759557743,57.56924878931115],[-3.1312139453900047,57.56997097207504],[-3.130769909750701,57.570413505673216],[-3.1297407993812607,57.57125338679692],[-3.1284957893785537,57.57195280574298]],[[-3.1305825486165784,57.56950959232803],[-3.1288410959461204,57.57091207737007],[-3.1285916225977966,57.571213804854814],[-3.1284957893785537,57.57195280574298]],[[-3.1358056625022606,57.56965119242307],[-3.1354631781084286,57.57029800467108],[-3.135028385308406,57.57050960344244],[-3.1321593231261926,57.57118555589118],[-3.1302103523010207,57.57208632457223],[-3.1293879833830553,57.57293073006652],[-3.128688270146471,57.5732447474171],[-3.1278717583941322,57.57337789539616]],[[-3.1284957893785537,57.57195280574298],[-3.1277839050657668,57.573099933204],[-3.1278717583941322,57.57337789539616]],[[-3.1278717583941322,57.57337789539616],[-3.1262402588640064,57.57395929013681]],[[-3.126530040655282,57.573131874422614],[-3.125961956945593,57.573675479055446],[-3.1262402588640064,57.57395929013681]],[[-3.1262402588640064,57.57395929013681],[-3.1251174639522192,57.5745008291593],[-3.1242062628095884,57.57527349713636],[-3.124096806674277,57.57602941340005],[-3.12369459900499,57.576841294055114],[-3.1237511886227147,57.57726120085539],[-3.1230491228707855,57.578773106432095],[-3.1228675738270133,57.581364284510606],[-3.1224329359840017,57.5825323593738],[-3.1210554214070187,57.58400300057478],[-3.119066940224685,57.58511872721784],[-3.1185502202129167,57.58567244098578],[-3.1179740804862677,57.58687948060761],[-3.1175787079607775,57.58842959976529],[-3.1184419100605387,57.58929853163255],[-3.118210770653477,57.59010088218434],[-3.1176928247461158,57.59094448702216],[-3.115819587584041,57.59221724168841]],[[-3.1167844688013657,57.58876693208586],[-3.116230884612683,57.589457863901416],[-3.116099896538749,57.5902056064579],[-3.115374718019151,57.59160376194062],[-3.115426024440964,57.59211022497085],[-3.115819587584041,57.59221724168841]],[[-3.115819587584041,57.59221724168841],[-3.1150599629417517,57.59303278606509]],[[-3.1150599629417517,57.59303278606509],[-3.1147445387571113,57.5943751280502],[-3.114945663104661,57.595534866776326],[-3.1174752575629894,57.59730545384242]],[[-3.117129221347638,57.59829171283762],[-3.115944235842771,57.60008137405949],[-3.1151485899125326,57.60076401616396],[-3.114089866133104,57.601266077356215],[-3.112727914826507,57.60159320467825],[-3.1110232180564945,57.601639915264386],[-3.107787621719329,57.60205073264603],[-3.1061769950708893,57.602886973078725],[-3.1063483426635683,57.60346506043478],[-3.1086891595320845,57.60530242212339],[-3.1105180858406927,57.60710642192612],[-3.110695565515474,57.60752598830134]],[[-3.110695565515474,57.60752598830134],[-3.110617475600872,57.607764097065]],[[-3.1934407233640876,57.52449597606176],[-3.1907480644424546,57.524867178420685],[-3.189552732518756,57.52543415739735],[-3.188724884330172,57.52628270342514],[-3.188301409667534,57.526981009360696],[-3.1881921482693842,57.52784182783235],[-3.1889633319920523,57.529760040956205],[-3.1893786943006677,57.53018112617315]],[[-3.1893786943006677,57.53018112617315],[-3.190132454149503,57.53097712565691],[-3.1922378125415776,57.53177572176945],[-3.193950377826689,57.53310370109473],[-3.1937855819876524,57.53400951679487],[-3.1941142561897813,57.534897189595455]],[[-3.1941142561897813,57.534897189595455],[-3.1938947264746367,57.53718892370445],[-3.1931272348626876,57.53861140549489],[-3.1916141983867243,57.53958565016626],[-3.1894173905815486,57.54034137992687],[-3.1873774492086393,57.54129502379318],[-3.186246193913973,57.541985692281244],[-3.185167383996219,57.542173065145874],[-3.1838292655609512,57.54192726281888],[-3.1829999111074145,57.54139433584888],[-3.1816993361119237,57.53960807035946],[-3.1812852108801755,57.53939616879001],[-3.1817570511564974,57.539089465737064],[-3.181500922690983,57.53842746182455],[-3.1802719433919635,57.537341475093754],[-3.17921859064883,57.5367105446625],[-3.1785965670637846,57.5366542800235],[-3.1738282658241834,57.53419445333694],[-3.17232837583338,57.533970606878654],[-3.1707526582689742,57.53411602870756],[-3.1674325305126656,57.53489391776702],[-3.1651535785288796,57.53609177995366]],[[-3.1651535785288796,57.53609177995366],[-3.1647823267744157,57.53652307797159],[-3.162425668165763,57.53828710097158],[-3.159383859110337,57.53970882395222],[-3.155898450144041,57.540392071886345],[-3.151398456384356,57.54065400572679],[-3.149362967533255,57.54118657497101],[-3.1489552834327386,57.54150820206554],[-3.148867449104855,57.541854405808785],[-3.149512508981914,57.54349488566674],[-3.1495017701021824,57.54616685772678],[-3.149142329800069,57.547141483596725],[-3.148239648672781,57.54828544277413]],[[-3.148239648672781,57.54828544277413],[-3.147326474041545,57.548938019767164],[-3.145260686959976,57.54959718822415],[-3.1442370286164967,57.54971328022772],[-3.1422850028575997,57.54965397098241],[-3.1414286902261406,57.549767717447416],[-3.141180972253328,57.549925365943416],[-3.1413451369724186,57.55003464462484],[-3.140375334405622,57.55081075180019],[-3.139864144356459,57.55095954818583],[-3.139464906472083,57.552135636858125]],[[-3.139464906472083,57.552135636858125],[-3.139370200789294,57.55275776826538],[-3.1400897973711714,57.555683741088906],[-3.1405854124032855,57.55720487769563],[-3.1417896031700954,57.559005002319495],[-3.1417456183481214,57.559564782259024]],[[-3.1853849118362816,57.506728927875386],[-3.1874209657956487,57.507064172432884],[-3.1902569232115128,57.50719645327095],[-3.1916379662457444,57.50707651496955],[-3.194382327728402,57.5064278400701],[-3.1957558793726295,57.50629445238642],[-3.196985935167803,57.50643766020632],[-3.1984272262905757,57.50722519971902],[-3.199754002610481,57.50847807015592],[-3.199978415005904,57.50964484569796],[-3.1990219750027395,57.51128728577094],[-3.1974363359474047,57.51317033475411],[-3.197239103736274,57.51427320103992],[-3.2008524095922586,57.5180219166522],[-3.201187162471718,57.518773867531216]],[[-3.201187162471718,57.518773867531216],[-3.2015092063929553,57.519753216245235],[-3.2013857324278296,57.52077597365269],[-3.200878553385608,57.52164625293849],[-3.2002159370218615,57.52222802734919]],[[-3.2002159370218615,57.52222802734919],[-3.198553652318425,57.52313110701743],[-3.196728289896874,57.52387544877833],[-3.1948333757831455,57.524343736737904],[-3.1934407233640876,57.52449597606176]],[[-3.234063044575947,57.469304909039444],[-3.230617714451162,57.47093601525172],[-3.22868874707226,57.47170152880299],[-3.2251406259107838,57.47246254245093]],[[-3.2251406259107838,57.47246254245093],[-3.2231462115302185,57.473046781724534],[-3.218048600797833,57.47542695973866],[-3.214390929828607,57.4775925589902],[-3.2126020659380616,57.478177882804815]],[[-3.2126020659380616,57.478177882804815],[-3.2104471422686376,57.47874495540339]],[[-3.2104471422686376,57.47874495540339],[-3.2087920283549165,57.479010659512404],[-3.2055556943835546,57.48009628827582],[-3.2014023631698367,57.48124294511633]],[[-3.2014023631698367,57.48124294511633],[-3.1974223038965106,57.48211652109137],[-3.1967623966575727,57.482470530874465],[-3.1961020026340248,57.483111020821994],[-3.1962207650343033,57.483779423545094],[-3.198142897374763,57.48541869522096],[-3.1987552942084028,57.48657604011468],[-3.1985915280105273,57.48798223311547],[-3.1982215058808583,57.488729929564286],[-3.197427106987964,57.48964164787197],[-3.1967332931076364,57.49014635939651],[-3.194946481573429,57.49110762938353],[-3.192770589206237,57.49166174548959],[-3.19169876292999,57.49117222386623],[-3.1895099429327476,57.49070985177772],[-3.1885238603646884,57.490674859877004],[-3.1860970485164244,57.49188413285839],[-3.183836283974478,57.49271315267929],[-3.1818644285604036,57.493677767659804]],[[-3.1813677183058364,57.49594406031716],[-3.1827002384552294,57.49689997469266],[-3.183181970358785,57.497952523604425],[-3.1831306990075,57.498776145469506],[-3.1820464900965564,57.500047925889724],[-3.178698169529281,57.50188247508157],[-3.1785211120861216,57.502627856824205],[-3.179313112804134,57.50376537712885],[-3.1819782988071204,57.50558767086144],[-3.1853849118362816,57.506728927875386]],[[-3.1818644285604036,57.493677767659804],[-3.1811917332928776,57.49418408037833],[-3.180966527258607,57.49466032851467],[-3.1810385820999345,57.495480998320225],[-3.1813677183058364,57.49594406031716]],[[-3.303654474008646,57.45383014112447],[-3.3021802928612365,57.45328947725906],[-3.2990734221227007,57.4526126440548],[-3.296390702411668,57.452450981050134],[-3.2954091662913068,57.452528179299556],[-3.294656626366059,57.45271423418992],[-3.2946490850715056,57.45334953735816],[-3.293800272224128,57.45448604523105],[-3.293618070721222,57.4544897119331],[-3.2929851363831824,57.45519000387801],[-3.2916228303373622,57.45604635559479],[-3.29152574686878,57.45626618900421],[-3.290835337470553,57.45651060555819]],[[-3.310203049928157,57.456651264572244],[-3.308638524093788,57.456134971408694],[-3.3066476391922475,57.45501902549019],[-3.3052356805391616,57.45444047015029]],[[-3.290835337470553,57.45651060555819],[-3.289651664660578,57.45692832705518],[-3.2884379584315964,57.45706641776079],[-3.287542526066526,57.45683750363292],[-3.283994352829745,57.4564288311986],[-3.2797032711023597,57.456445516298004],[-3.2771471954208145,57.456890609635686],[-3.275895845519527,57.45733682527322],[-3.2746649987397785,57.45807604233376]],[[-3.3222044057114317,57.461777566755956],[-3.320371938943794,57.46174197296188],[-3.3183145818695574,57.46072437597225],[-3.317808096201927,57.46031948222861],[-3.3163519761213607,57.45820792781904],[-3.315910578024192,57.45794752128282],[-3.3146309798679643,57.45756712304795],[-3.312290367524168,57.45717817777086],[-3.310203049928157,57.456651264572244]],[[-3.2746649987397785,57.45807604233376],[-3.2745595334082362,57.45824968170608]],[[-3.3330819490937995,57.457518345476906],[-3.332983002623427,57.459878121798376],[-3.3324490389575634,57.46117749235958],[-3.3314682197843277,57.46173270941569],[-3.3302089556294003,57.461860543677005],[-3.3289927550314493,57.461811024758795]],[[-3.2745595334082362,57.45824968170608],[-3.2741603602124076,57.45872472175004],[-3.2728797946845427,57.45945534992621],[-3.269418043102601,57.46056584952236],[-3.2674642965570624,57.46218510678405],[-3.266516691435653,57.46329088430336]],[[-3.3289927550314493,57.461811024758795],[-3.3275813010910755,57.46154857357684],[-3.3257181044514175,57.46142839656556],[-3.3222044057114317,57.461777566755956]],[[-3.266516691435653,57.46329088430336],[-3.2658603548213465,57.464688387972686],[-3.2655596482712075,57.46684510498427]],[[-3.259843254700837,57.46905695001528],[-3.2592119786236977,57.46905588987216],[-3.2547681295109863,57.46983414151591],[-3.2539599928362404,57.46975198754726],[-3.248953152053931,57.46794839868911],[-3.2461930015206306,57.46643442118453],[-3.244160179810179,57.46553576133744],[-3.241565161193243,57.46482919300195],[-3.24023960996305,57.46502981419778],[-3.2389758393310686,57.46557361034422],[-3.237896008565821,57.46635176212073],[-3.236641425238388,57.46783609905512],[-3.234063044575947,57.469304909039444]],[[-3.2655596482712075,57.46684510498427],[-3.2643226703361967,57.46782260984944],[-3.263353373338328,57.46832129637266],[-3.261850611916861,57.46891461104527],[-3.2608906406173093,57.469085647807724]],[[-3.365391288687422,57.45155765945548],[-3.366082669359506,57.45256576916736],[-3.366131211724349,57.45324611343942],[-3.365471171902682,57.45440667511591],[-3.36437112104157,57.454722862750515]],[[-3.36437112104157,57.454722862750515],[-3.362719612800769,57.45502299364949],[-3.3603106608838176,57.45507003505407],[-3.3598003587127527,57.454846638119356],[-3.3556966011408447,57.45394010422531],[-3.3542146120112566,57.45385407058468],[-3.3533427814164236,57.454241554779536],[-3.3515138360884293,57.45472581084162],[-3.3513493056383665,57.45510892941269],[-3.3527468097720488,57.45550556906767],[-3.3529252606055917,57.45603647234853],[-3.3525102481721847,57.45706550756574],[-3.350973193344501,57.45766772159118],[-3.3509371545565934,57.457838437134306]],[[-3.3524417634022416,57.45781520645368],[-3.3518234311898087,57.45797474000835],[-3.3509371545565934,57.457838437134306]],[[-3.3509371545565934,57.457838437134306],[-3.3485345741589922,57.45732604403237],[-3.346436752145504,57.45638767191079],[-3.3429733529958927,57.45405429408098],[-3.3406787244008793,57.45171414635378]],[[-3.3406787244008793,57.45171414635378],[-3.339598376358525,57.451027876265414],[-3.3389327262462043,57.45090342910203],[-3.335259281477384,57.45167168627354],[-3.333188011324837,57.452433320386604],[-3.332885095532533,57.453071663937244],[-3.333163188382824,57.45475027159723],[-3.332812182415878,57.4555561281449],[-3.3330819490937995,57.457518345476906]],[[-3.33423753611433,57.456731464737665],[-3.3335981236863357,57.45743966952392],[-3.3330819490937995,57.457518345476906]],[[-3.3612219374925734,57.446969622212066],[-3.361782415994303,57.44812865644933],[-3.362861428213339,57.44944190142599],[-3.363723966026504,57.450157821533],[-3.3644599319570676,57.45054846081672],[-3.365391288687422,57.45155765945548]],[[-3.3608738310334934,57.43084664314805],[-3.360688286683544,57.430963368374584],[-3.3613484863835557,57.43117750488881]],[[-3.3613484863835557,57.43117750488881],[-3.3598249061054415,57.432837338004234]],[[-3.3609238973997306,57.44459855313211],[-3.3612219374925734,57.446969622212066]],[[-3.3602667604086953,57.431090007702146],[-3.359484405682345,57.43171365245398],[-3.359332785309193,57.43205370277259],[-3.359356420715526,57.43271347737915],[-3.3598249061054415,57.432837338004234]],[[-3.3598249061054415,57.432837338004234],[-3.3595044261733813,57.43345249357055],[-3.3590035010648385,57.4357737941981],[-3.359369320921353,57.43639376332741],[-3.359440745034976,57.43737167221867]],[[-3.4272112687242635,57.40204607647345],[-3.4259684363854386,57.40267743198427],[-3.4253437607249935,57.4033959308497],[-3.426186517516199,57.405577899937775],[-3.426214546553441,57.40642745038827],[-3.42580049664531,57.407161892485526],[-3.424608861107185,57.40814796244671],[-3.4198280836472064,57.41010641827313]],[[-3.417173083579846,57.41121320403434],[-3.4159612497941967,57.41191391191439],[-3.4094423884334155,57.414438513079176],[-3.406157326156859,57.415221148152526],[-3.404330563452061,57.41528527743762],[-3.399785339055518,57.41465112516533]],[[-3.387446478212508,57.41415230348514],[-3.3819884931462316,57.413569605872745],[-3.37980463300968,57.41388929032972],[-3.3785439263238,57.41436943814411],[-3.3779012973292524,57.4149012977866],[-3.377960998354989,57.41539582704098],[-3.378878921919173,57.41652249205405],[-3.378851630338266,57.416722139377825]],[[-3.3924471213552163,57.41432674970422],[-3.390581783158398,57.41437394723323],[-3.3883107820418075,57.414290922507675],[-3.387446478212508,57.41415230348514]],[[-3.399785339055518,57.41465112516533],[-3.3962127771005672,57.4143031250741],[-3.3934973022824213,57.41423895448803],[-3.3924471213552163,57.41432674970422]],[[-3.378851630338266,57.416722139377825],[-3.3794797683092854,57.41694659306839],[-3.3804214465721176,57.417936793904786],[-3.3803550456215805,57.41840215916346],[-3.379890555392473,57.41891689384455],[-3.3770676170422456,57.41987005058837],[-3.37553981075977,57.42107088350929],[-3.373422186891047,57.42166076866483]],[[-3.373422186891047,57.42166076866483],[-3.3713063089368283,57.42193401335986],[-3.370101063505974,57.42225535693723],[-3.3677734663643957,57.42348805605224],[-3.3670462678559088,57.4244846032687],[-3.365718441650834,57.425752137565105],[-3.3651646647933138,57.427182142012114],[-3.363581722660849,57.429256454827126],[-3.3625781928977827,57.430267642857046],[-3.3613484863835557,57.43117750488881]],[[-3.4689682640476724,57.374593047952764],[-3.468701088283915,57.376288016340325],[-3.469204700971338,57.37806382964304],[-3.4691548217685204,57.37902065933973],[-3.469450185025432,57.37947296599681],[-3.469568341142801,57.38070498790972],[-3.468982601791697,57.38137681264656],[-3.4676289679494734,57.382222353025554]],[[-3.4676289679494734,57.382222353025554],[-3.468745472452279,57.38348307102668]],[[-3.469011287852424,57.394198388977884],[-3.468534607588021,57.3953599059508]],[[-3.468534607588021,57.3953599059508],[-3.4675518688773206,57.397275047933874],[-3.466984122315917,57.397729958712794],[-3.4657364114793925,57.39966038922246],[-3.4657994464457587,57.39979692921379]],[[-3.4679406389285705,57.39866149150366],[-3.466996282136471,57.39955381450787],[-3.4663379460734576,57.39977511823509],[-3.4657994464457587,57.39979692921379]],[[-3.4666332842223295,57.381452715610116],[-3.4669382306502374,57.381912013564055]],[[-3.4657994464457587,57.39979692921379],[-3.463905929066078,57.40081131275956],[-3.4611613152942518,57.40101810212211]],[[-3.4611613152942518,57.40101810212211],[-3.4545552069860803,57.401572964229985],[-3.4539618251072564,57.40153777169864],[-3.4530189154366804,57.40122442663817]],[[-3.4543742145963847,57.4011299043901],[-3.45341977678426,57.40103796785248],[-3.4530189154366804,57.40122442663817]],[[-3.4530189154366804,57.40122442663817],[-3.45044823291104,57.400629502197816],[-3.4473305148887343,57.39936549799737],[-3.445825965620195,57.398893430148405]],[[-3.4479706295480304,57.39868812431471],[-3.447443750297972,57.39861620136924],[-3.4468325762503254,57.39875304110538],[-3.4460463660235154,57.39873880307764],[-3.445825965620195,57.398893430148405]],[[-3.445825965620195,57.398893430148405],[-3.444134147688132,57.39862203511705],[-3.4427797565332243,57.39859820990184],[-3.440712813090892,57.39911364834895],[-3.4390433874901802,57.39979457470009],[-3.436683930853125,57.39985538245427]],[[-3.4395535307781,57.39819671897125],[-3.4397764059471223,57.398333690055956],[-3.4389658629889217,57.39853466926403],[-3.4381436007239308,57.399230965889956],[-3.436651395010459,57.39962792370419],[-3.436683930853125,57.39985538245427]],[[-3.5226831607823734,57.36559146389511],[-3.521193783771383,57.366492422454606],[-3.5190792302080554,57.367299120540224],[-3.517712668961412,57.36755817409693],[-3.5151472761865286,57.36772168499482]],[[-3.5112243742410083,57.36818857790152],[-3.506454249568035,57.36869792256745],[-3.5042407721375244,57.3691178030452],[-3.5018631243344913,57.37000964492914],[-3.498561442924025,57.371655599141526],[-3.4960499840142973,57.372401045594735],[-3.4950429000887504,57.37252405232225],[-3.4928902041844334,57.37251680946908],[-3.488826147076284,57.372178901594026]],[[-3.488826147076284,57.372178901594026],[-3.4872981039538216,57.37188046049709],[-3.484539405635834,57.37157118597882],[-3.48344818932831,57.37159599911292],[-3.4812787161254604,57.37200426309688]],[[-3.4812787161254604,57.37200426309688],[-3.477039449134632,57.37183738462722],[-3.473779647461555,57.372224797608126],[-3.471334877314877,57.37290464145834],[-3.470121231463517,57.373399370969324],[-3.4689682640476724,57.374593047952764]],[[-3.4754880558397727,57.38719310912137],[-3.476156470189737,57.38816047808974]],[[-3.468745472452279,57.38348307102668],[-3.469425542875669,57.384377928326415],[-3.470325272620247,57.38505765789378],[-3.4708699117401256,57.3852900886632],[-3.4730101101063635,57.38566000079546],[-3.474631451592026,57.38613280130186],[-3.4754880558397727,57.38719310912137]],[[-3.474716896935534,57.39050938953655],[-3.4734500419787144,57.39145764780812],[-3.4709140110169527,57.39293981421321],[-3.4704418714587253,57.393016480905025],[-3.469600977701037,57.39339580505462],[-3.469142514248081,57.39380192618939],[-3.469011287852424,57.394198388977884]],[[-3.4708257730910037,57.39344933336985],[-3.469568581468573,57.3941244174454],[-3.469011287852424,57.394198388977884]],[[-3.4698087431707783,57.38192812580129],[-3.469291444168564,57.382477420796434],[-3.46911543980992,57.38332117685017],[-3.468745472452279,57.38348307102668]],[[-3.559617566952428,57.32421163763153],[-3.557354520079767,57.3245803565377],[-3.555408741019834,57.32528129770226],[-3.5539752982097057,57.32642724224365],[-3.5533924045816994,57.327460339525246],[-3.553354764006216,57.328693516155205],[-3.5529648053028544,57.33032418773579],[-3.5529489550655446,57.33473073411845],[-3.552675607798093,57.33783111153902],[-3.5534839038408528,57.34101408598791]],[[-3.5534839038408528,57.34101408598791],[-3.553368861404982,57.34152804974668],[-3.552344355761509,57.34301714225569],[-3.5516130502838568,57.343399093025546],[-3.5488723184439364,57.34414215649539],[-3.5475047340375365,57.34418189366603],[-3.5459751030862066,57.34395615075848],[-3.5438644628358213,57.34272654052243],[-3.5427316424745707,57.342372267940625]],[[-3.5427316424745707,57.342372267940625],[-3.5417217635370495,57.342302442316175]],[[-3.5417217635370495,57.342302442316175],[-3.5392490135848775,57.34265803182193],[-3.537957331166136,57.343168670566676]],[[-3.537957331166136,57.343168670566676],[-3.5369658066697363,57.343768974050285],[-3.5353538229722297,57.345946988199934]],[[-3.5359096884369214,57.35075728129131],[-3.5369731467677843,57.35247732253638],[-3.5369936620331424,57.35332588624113],[-3.5364084351352796,57.35420906855707],[-3.5349200053315224,57.35481523864381],[-3.533331621668136,57.35498688203606],[-3.532148858728237,57.3549165681955],[-3.5304329110500103,57.35470754646542],[-3.5257888272737827,57.353620001598934],[-3.524633480549423,57.35351595431661],[-3.5232307550630435,57.353671205713944]],[[-3.5353538229722297,57.345946988199934],[-3.5349562312172482,57.34710341694716],[-3.5360695296938847,57.34884262264005],[-3.5362204255088696,57.34977727958969],[-3.5359096884369214,57.35075728129131]],[[-3.5350586126707584,57.349997911942815],[-3.5353274843463165,57.350590095379665],[-3.5355466949261083,57.3507689884809],[-3.5359096884369214,57.35075728129131]],[[-3.534848009811665,57.34575676753425],[-3.5353538229722297,57.345946988199934]],[[-3.5232307550630435,57.353671205713944],[-3.522689360350965,57.35421212832203],[-3.521648641281274,57.35831936887503],[-3.521540084737288,57.35944772769723],[-3.5221060499556485,57.36161349119225],[-3.5229120356345165,57.36298979658294]],[[-3.5229120356345165,57.36298979658294],[-3.5233885909542164,57.36411439935599],[-3.523209938980089,57.36498675407279],[-3.5226831607823734,57.36559146389511]],[[-3.436683930853125,57.39985538245427],[-3.4349463185040223,57.40023804981343],[-3.4312857186029935,57.40180039679994],[-3.430370260300987,57.40205407914554],[-3.427752942988389,57.401959082574884],[-3.4272112687242635,57.40204607647345]],[[-3.6253915033085984,57.303786582350725],[-3.625528191632463,57.304770032277986],[-3.6248029546170004,57.30598554613321],[-3.6246976185912336,57.306645814551466],[-3.6250860524070934,57.307198449522005],[-3.6260332170411447,57.30780962446519],[-3.6263241395494106,57.3082210259132],[-3.6264247468350144,57.30875114504755],[-3.6261635661603844,57.309205174525275],[-3.6263886244150774,57.30984661659454],[-3.6251592125708725,57.310496621721036],[-3.623736082689709,57.31071912850039],[-3.621704766718228,57.31234355302103],[-3.6194087868724627,57.31312260798819]],[[-3.626067768708588,57.303237882693196],[-3.6256486642289865,57.30339630447492],[-3.6253915033085984,57.303786582350725]],[[-3.6194087868724627,57.31312260798819],[-3.617190388080877,57.313545654478595],[-3.616151805175591,57.314433982833144],[-3.61596625869823,57.31484074856129],[-3.6159638441201536,57.31592446043698],[-3.6153738561943918,57.31710089130413],[-3.613144658069508,57.31961077347202]],[[-3.613144658069508,57.31961077347202],[-3.612004722222212,57.32051914173611],[-3.6107429987342927,57.32096825732969],[-3.6071566273270594,57.32146792978862],[-3.6046741946536183,57.321410862186646],[-3.6028397835721235,57.32108692303965],[-3.60061653151561,57.320225798644294],[-3.599914801834202,57.319772578964496],[-3.5984130585343332,57.31833003118675]],[[-3.5984130585343332,57.31833003118675],[-3.5973341625244126,57.31771331605054],[-3.5960120004918714,57.317390678027195],[-3.594417052835468,57.31719870133697],[-3.5923344902978873,57.31729219836547],[-3.58995559153259,57.318437145422976],[-3.582445619490172,57.320352328441096],[-3.5801932140132826,57.32140709066705],[-3.5779369189981924,57.3226917653047],[-3.575859901801034,57.324276649073475],[-3.574005050056823,57.324974854752185],[-3.573095333014449,57.32515989940672],[-3.5706682855373675,57.32538518626719],[-3.5689319033700913,57.325394548562315],[-3.5662373638690323,57.32503713948404],[-3.561937945480096,57.32423612050781],[-3.560922102693965,57.32414801890492],[-3.559617566952428,57.32421163763153]],[[-3.711893495551996,57.26672530685655],[-3.71024249897694,57.2676371633851],[-3.7082214014874695,57.26847298890756],[-3.7027933349643276,57.27007689558965]],[[-3.7027933349643276,57.27007689558965],[-3.7017141512117395,57.270474971475394],[-3.700478153174686,57.27071334955052]],[[-3.700478153174686,57.27071334955052],[-3.699382111703488,57.27074291043766],[-3.6972282714288425,57.27103490345571],[-3.69112216520659,57.27249741349161],[-3.6901307991098813,57.272839940360406]],[[-3.6901307991098813,57.272839940360406],[-3.6887690679534586,57.27320082351052],[-3.68754929460837,57.273927968087335],[-3.6869609849366345,57.2746530047153],[-3.6868395068413102,57.27535497249416],[-3.686389926627392,57.27618371109245],[-3.6857655594198495,57.27695217084811],[-3.6850230651410256,57.27749202977815],[-3.684071387399973,57.27805391389189],[-3.6828690529693886,57.27851807215375],[-3.6810907933345365,57.27891418450512],[-3.680194478743944,57.278971271721666]],[[-3.680194478743944,57.278971271721666],[-3.6766725800922684,57.279050468348295]],[[-3.6766725800922684,57.279050468348295],[-3.675513402982522,57.279342736520285],[-3.6743932427743373,57.28003428038006],[-3.6738678424119784,57.28015771656577],[-3.672983618233022,57.28025547006233],[-3.6708035754790926,57.280205495969355]],[[-3.6708035754790926,57.280205495969355],[-3.666367227534481,57.28057588025569]],[[-3.666367227534481,57.28057588025569],[-3.666351567030227,57.28077626020327],[-3.6654833469781054,57.28092055716163],[-3.6631463972546174,57.28226906232066],[-3.6628319372147757,57.28224141810365]],[[-3.663346513603043,57.281376600462146],[-3.663035671409278,57.28160918664566],[-3.6628319372147757,57.28224141810365]],[[-3.6628319372147757,57.28224141810365],[-3.661628105672922,57.284028250027525],[-3.6614813227558995,57.2876031880634],[-3.6610098516658054,57.28920639147883],[-3.6601535511224985,57.29039735118061],[-3.658244218537719,57.29237162028029],[-3.657041629490448,57.293072624984376],[-3.655836955163677,57.29328507581934]],[[-3.655836955163677,57.29328507581934],[-3.653470462491779,57.29339375850955]],[[-3.653470462491779,57.29339375850955],[-3.6525998719057338,57.293355971717624],[-3.6488259873979563,57.29374684034406],[-3.647023960541193,57.29421096415567],[-3.646221982852672,57.29456143575017],[-3.645813180677255,57.2949315523072]],[[-3.645813180677255,57.2949315523072],[-3.6453298083090475,57.2962036824192],[-3.6439567990850392,57.2975122429468]],[[-3.6439567990850392,57.2975122429468],[-3.640883085689524,57.299471268962314],[-3.6391288162475885,57.301173859942004],[-3.636974081406035,57.3020635278147],[-3.6356515212598572,57.30241136242983],[-3.6335384274798277,57.30245060303026],[-3.633106187650728,57.302345531336],[-3.631889783990929,57.30135508297304],[-3.6309741522835353,57.30100094330463],[-3.630204080160459,57.30096888374355],[-3.629585668968679,57.30111588753567],[-3.6290832273533233,57.30143073971602],[-3.627927089611724,57.30250325560078],[-3.626067768708588,57.303237882693196]],[[-3.7275411284181077,57.26136490756347],[-3.7270414792244915,57.261908692216565],[-3.726918762744811,57.26241836456865],[-3.7271212053896305,57.263636490589484]],[[-3.7271212053896305,57.263636490589484],[-3.727278666152632,57.26429028702898],[-3.726968027430651,57.26500092077638],[-3.726551333506957,57.265362614139555],[-3.7257680485484648,57.26566168781919],[-3.72473673587057,57.26581663516929],[-3.723648121302865,57.26576041506283],[-3.720295722852786,57.265143387822974],[-3.7188713218704534,57.26509729358984],[-3.717126671107665,57.2652816103143],[-3.714120748650757,57.265890471920876],[-3.711893495551996,57.26672530685655]],[[-3.7630041298040533,57.23559802398391],[-3.7621007566056655,57.23607664503008],[-3.760383273282789,57.23579345485726],[-3.758533341378676,57.235825030747485],[-3.754551335446914,57.23721071580069],[-3.7516244176656914,57.23792604454215],[-3.750478593696237,57.23885575425986],[-3.7483523159102314,57.24002911021213],[-3.747938881407904,57.24063144219655],[-3.74689512897433,57.241540110523545],[-3.7463067578647613,57.24239338352008]],[[-3.7463067578647613,57.24239338352008],[-3.745733644931167,57.243489295058],[-3.745620494553543,57.244149079141835],[-3.746169027594694,57.24479670174615],[-3.747319070734742,57.24554323253592],[-3.747814922994076,57.24879459834507],[-3.747383862542048,57.25147414021383],[-3.747710610864562,57.25265798674119],[-3.7472525708842332,57.25370082005636]],[[-3.7472525708842332,57.25370082005636],[-3.746681624555694,57.254635339638924],[-3.7459139725720343,57.25485022951034],[-3.7439201733859924,57.25506408159144]],[[-3.7439201733859924,57.25506408159144],[-3.742135628871419,57.25528281693371],[-3.739009785507559,57.255407433242326],[-3.738017329137549,57.25559879148703]],[[-3.738017329137549,57.25559879148703],[-3.734668651065928,57.257536321229566],[-3.7338827144607905,57.258264496838756],[-3.7299913008557324,57.260542532825816],[-3.7281802636186208,57.261279031077],[-3.7275411284181077,57.26136490756347]],[[-3.7282178665854886,57.26059514973161],[-3.727594096580973,57.26107972879161],[-3.7275411284181077,57.26136490756347]],[[-3.8295539741643188,57.179681237449564],[-3.829316710944384,57.180845628960626],[-3.8297755824746633,57.18240329052309],[-3.8293738957589634,57.18290942330992],[-3.8295026067771016,57.18328059766693],[-3.828759412856608,57.183997998683424],[-3.8285363047078147,57.18444869499715]],[[-3.829562706651813,57.17814775539901],[-3.828796779782946,57.179052554083576],[-3.828926028001766,57.1794919162519],[-3.8295539741643188,57.179681237449564]],[[-3.828656297481133,57.172787217020975],[-3.8290540972382945,57.173031287433076]],[[-3.8285363047078147,57.18444869499715],[-3.828242355854621,57.18494930045038],[-3.8278502361124014,57.18513758445708],[-3.8280295369358215,57.18564198722619],[-3.8273980541367574,57.186083175349175],[-3.826940585770535,57.18708301980222],[-3.826024993616419,57.187387813479354],[-3.8263837316091696,57.18767576828589],[-3.826175787038225,57.18798544672526],[-3.826544257254815,57.18870165631186],[-3.8256368966712153,57.18904334441384]],[[-3.761492815285045,57.221297969056515],[-3.7630671893477956,57.2218692202426],[-3.7634293071697305,57.22257482195496],[-3.763379796688524,57.22313732802311],[-3.7629186465342603,57.22359159847789],[-3.761716974102813,57.226027132117615],[-3.7612590271630655,57.22652196150613],[-3.7604793851933627,57.22915829768141],[-3.7606895737254527,57.22985264932091],[-3.7616302657718883,57.23078805620452],[-3.7621250929679473,57.231704286520156]],[[-3.763249960322889,57.233809683574705],[-3.7634967413189973,57.23482453830076],[-3.763359679523121,57.23526096013092],[-3.7630041298040533,57.23559802398391]],[[-3.7621250929679473,57.231704286520156],[-3.763249960322889,57.233809683574705]],[[-3.87957882525807,57.14081006648144],[-3.8787518749415697,57.14058965707414],[-3.878395226235714,57.140707132703405]],[[-3.878395226235714,57.140707132703405],[-3.87726595029631,57.1403191790265],[-3.8760073843936325,57.140207281941976]],[[-3.8783954465365515,57.1422604565016],[-3.8769264113897495,57.14197229005199],[-3.8766783940569196,57.14146107167865],[-3.8762494531177216,57.141378358968645],[-3.875079552713136,57.141820757739296],[-3.8745865108834434,57.14245743781649],[-3.874142091605737,57.14257863897992],[-3.873845245036195,57.14249025996324]],[[-3.8760073843936325,57.140207281941976],[-3.8752424398435648,57.14040489243409],[-3.8753714083652793,57.14073594774099],[-3.8751679901633755,57.14110566736008],[-3.873845245036195,57.14249025996324]],[[-3.873845245036195,57.14249025996324],[-3.8724476459975548,57.14334395408944],[-3.871540218056513,57.14372956784149],[-3.869874373544239,57.14396313841487]],[[-3.8709672725563076,57.14320431912357],[-3.870126458530975,57.143613188157566],[-3.869874373544239,57.14396313841487]],[[-3.869874373544239,57.14396313841487],[-3.8693648094952238,57.14431063691879],[-3.868603572639175,57.145551126553755],[-3.867685151515051,57.146530512431156],[-3.8669083022675026,57.14694146102081],[-3.8651839772396657,57.14746811914699],[-3.862700386616978,57.147794526160084],[-3.85589104427034,57.14934402772582],[-3.8548058812959494,57.14968255030228]],[[-3.8548058812959494,57.14968255030228],[-3.851664224080788,57.15082145034245],[-3.8500132615570024,57.15180540383053],[-3.8494477583196427,57.15199191486682],[-3.8477832378440096,57.15334927147006],[-3.8464528076214104,57.15497680515599],[-3.8460504918423326,57.15578840437476],[-3.8461182517884622,57.156381669389354],[-3.849029876459219,57.15799802769094]],[[-3.849401043619527,57.15758005818867],[-3.849029876459219,57.15799802769094]],[[-3.849029876459219,57.15799802769094],[-3.8489949897292592,57.15872012072608],[-3.846865444644193,57.16050732431208],[-3.8465173000030846,57.16111623547322],[-3.8460222327627407,57.165130700049744],[-3.846655375998491,57.167556290412655]],[[-3.846655375998491,57.167556290412655],[-3.846861696021969,57.17019715003131],[-3.8465666297990997,57.170761072654216],[-3.8459191418822956,57.170921636883435]],[[-3.8459191418822956,57.170921636883435],[-3.8450486987454906,57.17114226121007],[-3.8432989602948933,57.172000969606074],[-3.842055324992189,57.17230495401511],[-3.840614761531599,57.17239797483824],[-3.83950174797026,57.17213235255929],[-3.83749255609405,57.17116330474578],[-3.836681910660039,57.1706999644516],[-3.836194863026241,57.17004427923444],[-3.8357268735988317,57.169769272102705],[-3.8344629024715227,57.169432228590686],[-3.8324190337251802,57.16931744077766],[-3.831282836079583,57.169636640834035],[-3.829803042029021,57.17053057227742],[-3.8295467086935258,57.171207456344646],[-3.8295398949814063,57.17257235599506],[-3.8293311713709155,57.17293102012348],[-3.8290540972382945,57.173031287433076]],[[-3.8290540972382945,57.173031287433076],[-3.829581550154545,57.173411832895724],[-3.831502326987352,57.175551137503774],[-3.831436631546881,57.177038461590925],[-3.829858348052039,57.17872009219865],[-3.8303546674378337,57.178900816503464]],[[-3.8310284094531344,57.178688288538254],[-3.8303546674378337,57.178900816503464]],[[-3.8303546674378337,57.178900816503464],[-3.8304483884488074,57.17906638793531],[-3.8295539741643188,57.179681237449564]],[[-3.8254471389214197,57.18494264188137],[-3.8250420402687726,57.18503245231018],[-3.8248450747919804,57.185252659779415],[-3.8247878508916133,57.18549814889553],[-3.8251567396880493,57.18609979966946],[-3.8246331548563113,57.18659906348589],[-3.8244009920949633,57.18715940844465],[-3.8244669101558966,57.187952529381356],[-3.824840828834344,57.188534970225135],[-3.8256368966712153,57.18904334441384]],[[-3.8256368966712153,57.18904334441384],[-3.825354925728244,57.189261644253904],[-3.825349101660412,57.18963999026314],[-3.8249375702228083,57.18970779074046]],[[-3.8249375702228083,57.18970779074046],[-3.823889316664257,57.18972006428047],[-3.8227252846487088,57.19073788485631],[-3.821855382387939,57.19120676490261],[-3.8208367964909127,57.19142253725516],[-3.820036740875558,57.191808269742566],[-3.8197079116088295,57.19212139671202],[-3.8158695029028573,57.19301446475069],[-3.8142224951877326,57.19359282508125],[-3.813889155149767,57.19393340501435]],[[-3.817758311503641,57.19318829274456],[-3.816540236284892,57.19371788269287],[-3.81448007478456,57.19399880844753],[-3.813889155149767,57.19393340501435]],[[-3.813889155149767,57.19393340501435],[-3.8114416041565606,57.19450011433681],[-3.8097822307153346,57.19468640751191],[-3.807345836397505,57.195382076273546],[-3.8054613061942675,57.19609051465017],[-3.8044631885153293,57.19700523261285],[-3.8044713147360176,57.19815220209052],[-3.8048225051285867,57.19895497395946],[-3.8082559936110174,57.20129973197233],[-3.8098105286717194,57.20211408100445],[-3.81022289603141,57.20278702495271],[-3.810367593981012,57.20381513309257]],[[-3.810367593981012,57.20381513309257],[-3.8102255477993294,57.20429858603782],[-3.8097855812252424,57.20477016162667],[-3.808006726321494,57.20567459538276],[-3.804410856300936,57.206452482390254],[-3.8022442791676245,57.206682617971396]],[[-3.8022442791676245,57.206682617971396],[-3.8001841760645036,57.206917029223135],[-3.7960936835705295,57.20825459859931],[-3.7928840894364617,57.20872500627566],[-3.7909205817559064,57.20868744395219],[-3.7877972766548345,57.2077327697357],[-3.786832756607156,57.20766572912847],[-3.7853856839040017,57.20817948900577],[-3.782632486480138,57.21044305005792]],[[-3.782632486480138,57.21044305005792],[-3.7804051150744167,57.211632337169064],[-3.7796337710234935,57.21188226663781],[-3.7775428547002106,57.21225600218413],[-3.776718003918421,57.21262670658817],[-3.776120578775963,57.213378284108046],[-3.775934341019797,57.215298971534324],[-3.7755500604554615,57.215796947430675],[-3.7745938948907636,57.21639060703638],[-3.768532747243933,57.21823487875259],[-3.7641770330227224,57.21901690410078]],[[-3.7641770330227224,57.21901690410078],[-3.761944010753251,57.21979111064353],[-3.7612603673644363,57.220212289127595],[-3.760978350679499,57.220894226889015],[-3.761492815285045,57.221297969056515]],[[-3.922077364622015,57.12981844237225],[-3.921528673673359,57.13030018828697],[-3.9218049185179895,57.13071753560614],[-3.9216435025841156,57.1309568571134],[-3.9199536541222604,57.13170883149257],[-3.918595825574274,57.13270917195943],[-3.9165188629555,57.133343206876646],[-3.9132973222915637,57.13411408907744],[-3.9102638834275547,57.134612738872015],[-3.909226876706258,57.1351338539005],[-3.9081469115186738,57.13539882041118],[-3.9067586949586035,57.13560826535015],[-3.9061370239177546,57.13546676818991],[-3.905804555306053,57.1355537656617]],[[-3.906838729994079,57.13452668337588],[-3.906104488565316,57.13503004933357],[-3.905804555306053,57.1355537656617]],[[-3.905804555306053,57.1355537656617],[-3.904753726276578,57.1360745138116],[-3.9032178946568545,57.1364480721885]],[[-3.9032178946568545,57.1364480721885],[-3.901522789597935,57.136552228895994],[-3.898625265538001,57.13639451074039],[-3.895195316921438,57.13705756119288],[-3.8915988408137534,57.13821945201673],[-3.890587379162355,57.139083162380366],[-3.889068792602782,57.140023958899555],[-3.8886962837130317,57.14013756998473],[-3.8867488371553174,57.14018126221221],[-3.885799516280436,57.14039527895521],[-3.883765604790019,57.14158006378589],[-3.8830364396221597,57.14180503796506],[-3.8823335725524366,57.141858089251166],[-3.87960469154783,57.14128426673723],[-3.878395226235714,57.140707132703405]],[[-4.041149096058656,57.078517309472126],[-4.040761075181647,57.0788638199516],[-4.039915769265778,57.078989995509474],[-4.039092053268937,57.079010594440916],[-4.037356696714458,57.078796492246234],[-4.036899914833492,57.07881047964393],[-4.036202921131785,57.07905381446772]],[[-4.036202921131785,57.07905381446772],[-4.035827700606468,57.079342774065424],[-4.035967730134704,57.0803081389528],[-4.035537234753502,57.08092263919323],[-4.032794350074129,57.08150621185431],[-4.029934802024729,57.08191019855012],[-4.029358941752161,57.08218280060242],[-4.028206333974027,57.0832169067487],[-4.02762093712106,57.083542129593816],[-4.020719896301294,57.08372128919792],[-4.019658391472074,57.08396564644136],[-4.019096358263799,57.08428811575958]],[[-4.019096358263799,57.08428811575958],[-4.017973531609776,57.08515990736978],[-4.0173940558880545,57.08540187109115],[-4.01685098989804,57.08537539187407],[-4.0157222249402835,57.08491086336543],[-4.015246699577307,57.08491545821813],[-4.014458269148343,57.08523930129463]],[[-4.014458269148343,57.08523930129463],[-4.012577829756457,57.085679075639554],[-4.011430790369144,57.08552533663193],[-4.010439321335451,57.08576678299896]],[[-4.010439321335451,57.08576678299896],[-4.005609633808147,57.086315921240036],[-4.004301836803478,57.08656534697199],[-4.003185091145465,57.08702816132571],[-4.001974779848043,57.08776723221854],[-3.998747347727056,57.09046727651666],[-3.9979841886166567,57.0906275264002],[-3.996867891029662,57.09049463800657],[-3.9961588623040694,57.090277259392266]],[[-3.9961588623040694,57.090277259392266],[-3.9957421068700287,57.090249574309254],[-3.993997239521975,57.08962340319651],[-3.9915333206500323,57.08901241340857],[-3.9890356891857888,57.08878423597896],[-3.986713934112577,57.088816579639165],[-3.9854437998616095,57.0891569491417],[-3.9829393712834764,57.09088413792351],[-3.981934736475699,57.09126528509196],[-3.9805491284577386,57.09143284600995]],[[-3.9805491284577386,57.09143284600995],[-3.979419532084983,57.091737056957875],[-3.9789432862935605,57.09204567636128],[-3.97852679842819,57.092912144934225],[-3.977596697036245,57.09392904573828],[-3.9773170005019503,57.09448246009261],[-3.9773917131876972,57.09517862836955],[-3.9785802508755657,57.09617331656713]],[[-3.9785802508755657,57.09617331656713],[-3.9786477604031036,57.09660372358549],[-3.9781661352765907,57.09699544807062],[-3.9755564649215653,57.09778482079476],[-3.974811070869607,57.098221572877534],[-3.974890241408754,57.09906431119132],[-3.975792645126716,57.09966656568229],[-3.9761408034356114,57.10013136481246],[-3.9757173039621674,57.10086584880123],[-3.974655187543872,57.101603566616234],[-3.9734127678215536,57.10210897010949],[-3.9717160939192864,57.102415117374484],[-3.970348166080894,57.102392514317316],[-3.967515400159381,57.101923693021845],[-3.9668715223214286,57.10199256365387],[-3.966385250973367,57.10249653937034],[-3.9669227175470536,57.10365654589356],[-3.9668878390429376,57.10414804687146],[-3.9661533301431677,57.10481324844114],[-3.9636623092862924,57.10607815867587],[-3.9622934762046715,57.10659046116441],[-3.9603333088477104,57.106684122601955],[-3.9594799331643924,57.10683377343847],[-3.959076242483296,57.107134709648896],[-3.9585056216326335,57.10809929561053],[-3.9556366451311438,57.1090511514955],[-3.953023825256068,57.110545968148514],[-3.950797430449081,57.111237188434664],[-3.94970183474375,57.1112520791403],[-3.9494299463613505,57.110939669939086],[-3.950342973909425,57.11005614832597],[-3.9504605701234086,57.10973291787623],[-3.9501963391044694,57.10944357295954],[-3.949478396920229,57.10936614785566],[-3.9479543709167317,57.1094540874302],[-3.9470838676556195,57.110063062164656],[-3.945415339061566,57.11044756995018],[-3.942041369075148,57.110355501115194]],[[-3.942041369075148,57.110355501115194],[-3.9404501623795984,57.11040719117118],[-3.939262304360634,57.11006553971749],[-3.939178187066301,57.110155974086396]],[[-3.939178187066301,57.110155974086396],[-3.9359535440340747,57.11362458762503]],[[-3.9359535440340747,57.11362458762503],[-3.9274871259654187,57.12144948765955]],[[-3.9274871259654187,57.12144948765955],[-3.927332818075534,57.121503075380055]],[[-3.927332818075534,57.121503075380055],[-3.9265826074325827,57.121809678748114],[-3.9264509125304885,57.12344996112246],[-3.925741371575339,57.12383122934265],[-3.925734352819072,57.1240046602299],[-3.9263333746243956,57.124466098209936],[-3.9260326288905745,57.12464583907118],[-3.9259429376677963,57.12495783274388],[-3.9262151215930117,57.125700764197205],[-3.9259314534957,57.12612364929394],[-3.9253764134224225,57.126245656653786]],[[-3.9253764134224225,57.126245656653786],[-3.925626649089335,57.12661685240847],[-3.925419589522166,57.12719813523776],[-3.925655507217589,57.12743028146074],[-3.9257798617271207,57.12813235559333],[-3.925170543049611,57.12895971858333],[-3.92395552366402,57.12938656331904]],[[-3.92395552366402,57.12938656331904],[-3.922077364622015,57.12981844237225]],[[-4.060646442501217,57.06712123754893],[-4.058928958352348,57.06710599298145],[-4.057163931428577,57.067617516403715],[-4.056649385854055,57.06903830565866],[-4.056992400076777,57.069933557872446],[-4.057011614021892,57.070644263913124],[-4.056561645984126,57.071044767734264],[-4.054474517071917,57.07183029466886],[-4.053405635231739,57.071814755385674],[-4.052146641084092,57.0716038327055],[-4.050984776012244,57.07123055702676],[-4.0504628203209005,57.07090475322773],[-4.049649039322191,57.070707363099665],[-4.049079166930932,57.07076574771988],[-4.048491089171085,57.071047536605725],[-4.047726342403119,57.07166799778247],[-4.047343554809011,57.072122090534286],[-4.047475298859429,57.0722226409487],[-4.047074765869178,57.07253145835137],[-4.047294591626175,57.072604781157025],[-4.047338818878476,57.07389553859242],[-4.046631954637722,57.074097581653],[-4.046519655199058,57.074266276394724],[-4.0471578383649325,57.07461724338959],[-4.04762266428038,57.075181300880736]],[[-4.04762266428038,57.075181300880736],[-4.047531847836763,57.075278750074325]],[[-4.047531847836763,57.075278750074325],[-4.047103056763442,57.0753926851695],[-4.04710156384963,57.07633878835482],[-4.046852663585264,57.07664854083488],[-4.045039756084265,57.07709264929174],[-4.042456487040265,57.07737255014378],[-4.041496546772908,57.07790405212997],[-4.041149096058656,57.078517309472126]],[[-4.042360845124733,57.07836700105026],[-4.041606825681351,57.078598716467546],[-4.041149096058656,57.078517309472126]],[[-4.166254685902229,57.03823391635855],[-4.165599003008462,57.03883706444677],[-4.162864003875103,57.0422652444399],[-4.162113505659689,57.04283316900378],[-4.161612483880525,57.04299682511631]],[[-4.161568000935385,57.04300010916121],[-4.160213255616459,57.0439563043823],[-4.158839466402759,57.04467361159215],[-4.156797462029972,57.045410952551116],[-4.151625156615456,57.04628799698813],[-4.1495315321286155,57.04644131243677],[-4.1476067913991,57.0467616160973]],[[-4.148475060709135,57.046260951062806],[-4.147661491442468,57.04652974456403],[-4.1476067913991,57.0467616160973]],[[-4.1476067913991,57.0467616160973],[-4.14608426998649,57.04709871847496],[-4.145151525806737,57.04753146067251],[-4.144399606549677,57.04803828616568],[-4.14285099239605,57.04962364152234],[-4.141401015803625,57.050470281291744],[-4.139726660777552,57.0510978925633],[-4.138459773699282,57.05126258805478],[-4.13716246717253,57.051256791970054],[-4.134889954737477,57.05103407538741],[-4.13363780215422,57.05126047192989],[-4.133455793589086,57.05179256078708],[-4.133519136598957,57.052523006453534],[-4.133744563663278,57.052721702683066],[-4.13253516430265,57.05360843584372]],[[-4.131612811834676,57.05480036643917],[-4.130420882748108,57.05515078468653],[-4.129103408771015,57.05520113777252],[-4.127812149015384,57.05509297355205],[-4.125704996067799,57.05397275539492],[-4.12482038907124,57.05378325552204],[-4.123131678753824,57.05307228977761],[-4.120810707398522,57.053992216086975],[-4.11914039708151,57.05518557426227],[-4.1163934937987205,57.05597649091464],[-4.115383772047777,57.05616167345912],[-4.113116781279898,57.05627390062611],[-4.109386466991082,57.05612841624819],[-4.108178894282065,57.056405021885425],[-4.106831801453689,57.05708337390913],[-4.104879770578206,57.058589032153755],[-4.104531895262793,57.059927894317305],[-4.105003708162247,57.06114200765353],[-4.10470983628503,57.061894010417454],[-4.104073791443151,57.06240546605576],[-4.10343093996385,57.06340027836335],[-4.103595491406609,57.064841950266484],[-4.102771360663839,57.06589596295902],[-4.101880910754728,57.06629729063912],[-4.100532242044789,57.0665299103868],[-4.099708688859668,57.06706200870592],[-4.098877718111362,57.06793343157417],[-4.096269531166269,57.06887674826585],[-4.092896614435006,57.0697469776398],[-4.091285880716185,57.06958815024547],[-4.090077654497528,57.06976637392124]],[[-4.13253516430265,57.05360843584372],[-4.131381124232454,57.054561517127],[-4.131612811834676,57.05480036643917]],[[-4.090077654497528,57.06976637392124],[-4.086874633450117,57.070848717873105],[-4.086478597793019,57.071093522708026],[-4.083557485894697,57.07149950348643],[-4.082801820986459,57.07128878049571],[-4.082259312016953,57.07093981633791],[-4.081734306022588,57.06953376911293],[-4.0813792124433075,57.06925815330536],[-4.080745332201081,57.0690442264346],[-4.078937786445872,57.06884816533906],[-4.077895315863367,57.0685897879138],[-4.074967671839613,57.06824161209023]],[[-4.535638823473836,57.02490973236064],[-4.534492252052764,57.02500179808433],[-4.534171507194285,57.02545574491098],[-4.532901856219278,57.026173070805044],[-4.532178348678529,57.026317301687904],[-4.531792923340079,57.02625949657244],[-4.530377885349525,57.02673979082431]],[[-4.5327732200701325,57.026428292219435],[-4.5318616482109455,57.026770710878004]],[[-4.5318616482109455,57.026770710878004],[-4.531489137781199,57.02668963739112],[-4.530544289080055,57.02683617904346],[-4.530377885349525,57.02673979082431]],[[-4.530377885349525,57.02673979082431],[-4.529254645725825,57.02676878815405],[-4.527841015876922,57.02598467914619],[-4.526105087025134,57.025544782978486],[-4.525661959462826,57.02549603226713],[-4.525076005963523,57.025615518017524],[-4.524572105100075,57.0255089468275]],[[-4.522484379109444,57.0257005858152],[-4.521288626413941,57.02598206275989],[-4.520534446997156,57.02581266778025],[-4.516114889471868,57.02625990562139],[-4.516003394080559,57.02610002695109],[-4.515241559541804,57.0260657346426],[-4.512653763934463,57.02676718880782],[-4.510817957893529,57.026705899820904]],[[-4.484247653599451,57.02732638743541],[-4.483926590843285,57.02734300504471],[-4.4835587859932335,57.02707899854972]],[[-4.41212514912806,57.01522820188395],[-4.4104736945107215,57.01495637479121],[-4.4098177086259405,57.01506822032081],[-4.4095976881230765,57.01533908498851]],[[-4.4095976881230765,57.01533908498851],[-4.4087323888954035,57.015365540283625],[-4.4082723778265605,57.01556319960075],[-4.406286671051733,57.01693274021222]],[[-4.433651616411407,57.02199437136858],[-4.432540759406251,57.02170198182579],[-4.431311581260801,57.02116178759842],[-4.430009523793429,57.02007751733768],[-4.427895372512101,57.0191483736384],[-4.427095031307331,57.01851462648557],[-4.426103070937096,57.01810269155125],[-4.42438881938974,57.01787962192599],[-4.421392923228619,57.018308681288204],[-4.41895778759906,57.01833978270922],[-4.417056851974436,57.01728852551181],[-4.416118963922386,57.017083055458954],[-4.412308931910832,57.01560101109908],[-4.4095976881230765,57.01533908498851]],[[-4.390309804687675,57.015879943845995],[-4.389942077210035,57.01584095756355],[-4.38973402181221,57.016031039111624],[-4.388234551543344,57.01618233087474],[-4.38749069659715,57.015783242398264]],[[-4.400098680963167,57.01809220813291],[-4.39827656387333,57.01843241143216],[-4.396593614609967,57.01784333524195],[-4.396936086309006,57.01739491449279],[-4.396867605968694,57.01713472203689],[-4.395163420858265,57.01677509735722],[-4.394482384110489,57.01675218572859],[-4.392284513924191,57.01603361631533],[-4.391143630452218,57.01585817171794],[-4.390309804687675,57.015879943845995]],[[-4.4091322400124575,57.01632595087009],[-4.4084656281354775,57.01677821979586],[-4.407229378970141,57.017104132066],[-4.406655479934048,57.01709504156043],[-4.406286671051733,57.01693274021222]],[[-4.406286671051733,57.01693274021222],[-4.4041157737960805,57.01763586812929],[-4.40175031904442,57.017701960698524]],[[-4.405028567713345,57.01696914879377],[-4.402719362521317,57.01737521346263],[-4.40175031904442,57.017701960698524]],[[-4.40175031904442,57.017701960698524],[-4.400516126420764,57.01773660652373],[-4.400055190853048,57.01797981356193],[-4.400098680963167,57.01809220813291]],[[-4.400527325126022,57.01803294312793],[-4.400098680963167,57.01809220813291]],[[-4.4835587859932335,57.02707899854972],[-4.48295241352963,57.02696881256139],[-4.481706626769112,57.02645540444326],[-4.4802179002922475,57.02623508987015],[-4.477850839959467,57.02523953280201],[-4.476938889068904,57.0243253155061],[-4.476886207320363,57.02380603363671],[-4.47455916547999,57.023086501890816],[-4.47427606046692,57.02243670690084],[-4.472716708248709,57.020929292982835],[-4.4718323238124915,57.02041179337482],[-4.471375499498709,57.02038046653915],[-4.470567559455413,57.0200933026769],[-4.468566677480474,57.018922656536],[-4.466833604137819,57.01882805629011],[-4.465862204008488,57.01927325647619],[-4.465523359780217,57.01968217266778],[-4.464672984852447,57.01975850583237],[-4.463587785934356,57.019363707162974],[-4.461936776456442,57.01923453245232],[-4.4590065932490335,57.01951663252585],[-4.456804613316793,57.01949679866288],[-4.4553673873979305,57.01907145667288],[-4.453606481394036,57.01814156030068],[-4.451462319103762,57.0183279090814],[-4.44888301613808,57.01881219383212]],[[-4.44888301613808,57.01881219383212],[-4.447866039104695,57.01905352039254],[-4.444153504107236,57.0191397495196],[-4.440252163954467,57.01883162751127],[-4.437941639623567,57.01897982924203],[-4.437480619888707,57.019210776973296],[-4.4367607276507535,57.02018626355429],[-4.43566148738198,57.02073580060669],[-4.434595998752054,57.021610431392915],[-4.433651616411407,57.02199437136858]],[[-4.074967671839613,57.06824161209023],[-4.072000884538332,57.06856020265377],[-4.068091140588324,57.06989546163001],[-4.06585280625526,57.0700239618018],[-4.06400883667956,57.06989612684215],[-4.06197978940574,57.06879306047898],[-4.061808766002085,57.06835666463335],[-4.060646442501217,57.06712123754893]],[[-4.248969656105024,57.01265678565196],[-4.248053463618743,57.01269715167603],[-4.247634450932673,57.01284773613239],[-4.24744062164968,57.01331246976659],[-4.247665287426289,57.014191040944176],[-4.247063701661144,57.0146494384907],[-4.24485695071045,57.01466451388988],[-4.242920361833628,57.014909512532],[-4.242497856745969,57.01513688231161],[-4.242562040606151,57.01546138477698],[-4.243816553072041,57.01643346748557],[-4.24380832757291,57.01679997429984],[-4.243365712134019,57.0170492737714],[-4.241845153228037,57.017467234381535],[-4.241379305261665,57.01738293333035],[-4.240099424041436,57.016796420434986],[-4.239331285897375,57.01610377949931]],[[-4.239331285897375,57.01610377949931],[-4.237971380895636,57.01566182432343],[-4.236827157443613,57.01550813398055],[-4.236419188034902,57.015330943446045],[-4.235961840877079,57.01534091337529],[-4.232556207373013,57.01473864374119],[-4.231626136263991,57.01495256564185],[-4.229200066063993,57.0163040743143],[-4.228368649454925,57.01648557177915],[-4.227045058251343,57.01641190583615],[-4.225737468693895,57.01621725992335],[-4.224913646924081,57.0159636789206],[-4.22435713061608,57.01525954824608],[-4.2241918726788485,57.01463014392769],[-4.223650137778824,57.01434125817457]],[[-4.223650137778824,57.01434125817457],[-4.2229417372908635,57.01435357475125],[-4.222680421726268,57.014625728340995],[-4.221310010475535,57.014944980917384],[-4.21965814228074,57.015036295253175],[-4.217042220388269,57.01458700400183],[-4.215781915124274,57.014946927956764],[-4.214976908390155,57.01553142669075],[-4.214436767026876,57.015728163038546],[-4.213383048780679,57.01583441774272],[-4.212880101712155,57.01570645684474],[-4.211728818202857,57.01571216299884],[-4.209956802953643,57.01609481867386]],[[-4.209956802953643,57.01609481867386],[-4.209462801984152,57.01614802196467],[-4.2082736927325195,57.01599944684281],[-4.205888937527066,57.01710417996708],[-4.204692905744934,57.017851677235086],[-4.203635218268125,57.018223542074686],[-4.202196060417948,57.0183212119363],[-4.20074510724889,57.018160907863546]],[[-4.20074510724889,57.018160907863546],[-4.199957264118756,57.01836903504619],[-4.198226410806073,57.01928833406036]],[[-4.198226410806073,57.01928833406036],[-4.197944679762436,57.01931035556866]],[[-4.197944679762436,57.01931035556866],[-4.196023303795286,57.01877474024294],[-4.19431569222151,57.01922936570708],[-4.193029991805016,57.01891825690231],[-4.192560533230897,57.01891084724141],[-4.191920177685395,57.01922704504959],[-4.190175581506479,57.02057204144175],[-4.187845790747487,57.021339118955915],[-4.1871895819083464,57.02283388401912],[-4.186708049336203,57.023334183925336],[-4.185599895278641,57.02363785288026],[-4.184503825898767,57.023445821273526],[-4.183780505578532,57.0236000611237],[-4.1823186259645455,57.02460447764507],[-4.1819469039057235,57.025335217278325],[-4.1820172702953995,57.025790740738714],[-4.182420322544001,57.02618169621815],[-4.1829301653145405,57.02640419052068],[-4.185496513414547,57.02685272782265],[-4.185698688698469,57.02704904264639],[-4.184700892813217,57.028241092384796],[-4.182733622224417,57.02836608174951],[-4.18248546831099,57.02915873640671],[-4.182062747245849,57.02935759462164],[-4.181758923826118,57.029726637378744],[-4.182182533357296,57.03096495900087],[-4.181975406542749,57.03149936289222],[-4.181206848979349,57.03193338456769],[-4.1787270308390605,57.032841277899735],[-4.177457828861174,57.033578364109296],[-4.177100466778413,57.0338900078792],[-4.177134485638006,57.034153149931385],[-4.176496333382917,57.03514199375775],[-4.174411654097265,57.035221803913885],[-4.171504532288211,57.035595127625264],[-4.1701724226895305,57.03624669528912],[-4.169780949803259,57.03694430928163],[-4.1678273139879005,57.03722706246687],[-4.166254685902229,57.03823391635855]],[[-4.524572105100075,57.0255089468275],[-4.523998909236856,57.02526744246839],[-4.523368921986759,57.025247884841136],[-4.522947620310695,57.02534840349675],[-4.522484379109444,57.0257005858152]],[[-4.510817957893529,57.026705899820904],[-4.510117825509318,57.02661165512465],[-4.508620537771625,57.02586127387766],[-4.507179027841474,57.024692865258416],[-4.505232816155106,57.02467882065558],[-4.503656175080057,57.024948341208656],[-4.502430049591359,57.02487041761561],[-4.501342923364299,57.02465148874787]],[[-4.501971177631959,57.02446180212787],[-4.501342923364299,57.02465148874787]],[[-4.501342923364299,57.02465148874787],[-4.50049517473431,57.02462538463155],[-4.498975034801784,57.02427902871116],[-4.497627973531655,57.024176243763854],[-4.496695010581688,57.02357720754259]],[[-4.496695010581688,57.02357720754259],[-4.495280402515922,57.02331434489483],[-4.494621440681153,57.023304207452234],[-4.48801924323446,57.0253560909808],[-4.4877860809235575,57.025260076011875],[-4.487503438144289,57.02533102733038],[-4.484640645761461,57.02690861584562],[-4.4835587859932335,57.02707899854972]],[[-4.337585664440523,57.01186480268008],[-4.337365188845374,57.01192122135714],[-4.336692700795714,57.01138921522688],[-4.33607457543973,57.01128240830536],[-4.332122143633523,57.01240680821329],[-4.327111520691256,57.01255176684391],[-4.322794162229174,57.01335142207025],[-4.320859674803463,57.01399945742783],[-4.316913868500786,57.014445147503984],[-4.314142871226223,57.015010793211864],[-4.3127500602940865,57.0150238728677],[-4.30999563606766,57.01465276003938],[-4.308797867898074,57.014070545639484],[-4.3068308920352285,57.013461975560226]],[[-4.3003622136388895,57.01495019069124],[-4.299634617771718,57.01545726301594],[-4.298703931833543,57.01562353302305],[-4.298191239433488,57.015849695766704],[-4.295840790478925,57.01611911205374],[-4.292426686447,57.01721124358272],[-4.291559673317166,57.01766915087529],[-4.288841254254611,57.0183334615937]],[[-4.371421424113897,57.00794098922369],[-4.370807649421723,57.008017142996714],[-4.369644591166447,57.007888834797356],[-4.368589760592509,57.007322989261915]],[[-4.368589760592509,57.007322989261915],[-4.3681475484149335,57.007470738174916],[-4.366550770757911,57.00757167377419]],[[-4.38749069659715,57.015783242398264],[-4.385998961125564,57.01455899563609],[-4.385720351331228,57.01401317379323],[-4.3857982025402205,57.01333852023631],[-4.385446102346964,57.012030976242],[-4.38473378125401,57.0112170892821],[-4.383900511636753,57.01065154985382],[-4.38261811686966,57.01024337275472],[-4.38112259855739,57.009487153108765],[-4.3801035665078345,57.00836383613368],[-4.379261994519526,57.00778737177738],[-4.378302663447536,57.00744265219508],[-4.37641916215385,57.00717955528499],[-4.371421424113897,57.00794098922369]],[[-4.366550770757911,57.00757167377419],[-4.364323509636999,57.00858071073612],[-4.3606189019409065,57.008379544048495],[-4.353468558332203,57.00856097534059],[-4.345377263853075,57.01014792799376],[-4.344776275864937,57.010193070167006],[-4.342121248052092,57.00996700867214],[-4.340431468096092,57.01054067890712],[-4.3404850912742665,57.01097721671841],[-4.340257388706591,57.01115176532761],[-4.338821129001772,57.01143329056494]],[[-4.371727819707671,57.008122816315264],[-4.371421424113897,57.00794098922369]],[[-4.372915405110549,57.00813175077884],[-4.371727819707671,57.008122816315264]],[[-4.338821129001772,57.01143329056494],[-4.337585664440523,57.01186480268008]],[[-4.288841254254611,57.0183334615937],[-4.283617239324528,57.01869920227807],[-4.280992255540944,57.01819218475818],[-4.279690742062831,57.01831798318633],[-4.277385879163505,57.01905439414646],[-4.2767169829621965,57.019105205292895],[-4.276222646188228,57.019025505134934],[-4.275418765863084,57.01850392496674],[-4.2757348878539,57.01742272237393],[-4.27508450603528,57.016366013341454],[-4.274353718028264,57.01617684103765],[-4.273447440152664,57.01617021502169],[-4.271818119156597,57.01695697183171]],[[-4.271818119156597,57.01695697183171],[-4.2710530186477245,57.01683175503395],[-4.269716669836409,57.01586690381298],[-4.26912156945362,57.01582764385855]],[[-4.26912156945362,57.01582764385855],[-4.267902466742089,57.01607511454304],[-4.266938139333068,57.015867127337444],[-4.266235628861414,57.015224138974894],[-4.264065791751568,57.01401004126366],[-4.262981421816171,57.013102115734156],[-4.2627891700686,57.01242400014368],[-4.263651457207671,57.01126133370064],[-4.2636323493096535,57.010247782267015]],[[-4.2636323493096535,57.010247782267015],[-4.263310612879691,57.01000010558252],[-4.263445288122318,57.0096929521605],[-4.263248598330279,57.00935090614505],[-4.261852104508019,57.00903945054593],[-4.261337900986024,57.00915603820239],[-4.260029512638214,57.009834760731714],[-4.258799206987414,57.01011793142148],[-4.257515669828482,57.01062643174072],[-4.255794242923146,57.01102527607113],[-4.254312681640145,57.01185811392677],[-4.251787108097014,57.012645205507276],[-4.2507352354402075,57.01280350316442],[-4.248969656105024,57.01265678565196]]],\"bbox\":[-4.5948822297823,57.00717955528499,-3.0926521245663716,57.676932205767464]}\n\n/***/ }),\n\n/***/ 948:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/rothes.f923358e.png\";\n\n/***/ }),\n\n/***/ 562:\n/***/ (function(module, exports) {\n\n\tmodule.exports = [{\"RowID\":\"1\",\"Distillery\":\"Aberfeldy\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"2\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"PH15 2EB\",\" Latitude\":\"286580\",\" Longitude\":\"749680\",\"cluster\":\"1\",\"lat\":56.625181,\"long\":-3.85019515,\"formatname\":\"Aberfeldy\"},{\"RowID\":\"2\",\"Distillery\":\"Aberlour\",\"Body\":\"3\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"4\",\"Spicy\":\"3\",\"Winey\":\"2\",\"Nutty\":\"2\",\"Malty\":\"3\",\"Fruity\":\"3\",\"Floral\":\"2\",\"Postcode\":\"AB38 9PJ\",\" Latitude\":\"326340\",\" Longitude\":\"842570\",\"cluster\":\"8\",\"lat\":57.46738123,\"long\":-3.22964348,\"formatname\":\"Aberlour\"},{\"RowID\":\"3\",\"Distillery\":\"AnCnoc\",\"Body\":\"1\",\"Sweetness\":\"3\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"0\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"3\",\"Floral\":\"2\",\"Postcode\":\"AB5 5LI\",\" Latitude\":\"352960\",\" Longitude\":\"839320\",\"cluster\":\"3\",\"lat\":57.44173653,\"long\":-2.78529592,\"formatname\":\"An Cnoc\"},{\"RowID\":\"4\",\"Distillery\":\"Ardbeg\",\"Body\":\"4\",\"Sweetness\":\"1\",\"Smoky\":\"4\",\"Medicinal\":\"4\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"1\",\"Floral\":\"0\",\"Postcode\":\"PA42 7EB\",\" Latitude\":\"141560\",\" Longitude\":\"646220\",\"cluster\":\"5\",\"lat\":55.64060148,\"long\":-6.10845806,\"formatname\":\"Ardbeg\"},{\"RowID\":\"5\",\"Distillery\":\"Ardmore\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"3\",\"Fruity\":\"1\",\"Floral\":\"1\",\"Postcode\":\"AB54 4NH\",\" Latitude\":\"355350\",\" Longitude\":\"829140\",\"cluster\":\"1\",\"lat\":57.35054344,\"long\":-2.74363022,\"formatname\":\"Ardmore\"},{\"RowID\":\"6\",\"Distillery\":\"ArranIsleOf\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"0\",\"Malty\":\"1\",\"Fruity\":\"1\",\"Floral\":\"2\",\"Postcode\":\"KA27 8HJ\",\" Latitude\":\"194050\",\" Longitude\":\"649950\",\"cluster\":\"0\",\"lat\":55.69914211,\"long\":-5.27886257,\"formatname\":\"Arran Isle Of\"},{\"RowID\":\"7\",\"Distillery\":\"Auchentoshan\",\"Body\":\"0\",\"Sweetness\":\"2\",\"Smoky\":\"0\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"3\",\"Floral\":\"3\",\"Postcode\":\"G81 4SJ\",\" Latitude\":\"247670\",\" Longitude\":\"672610\",\"cluster\":\"3\",\"lat\":55.92236733,\"long\":-4.4393239,\"formatname\":\"Auchentoshan\"},{\"RowID\":\"8\",\"Distillery\":\"Auchroisk\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"2\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"1\",\"Postcode\":\"AB55 3XS\",\" Latitude\":\"340754\",\" Longitude\":\"848623\",\"cluster\":\"8\",\"lat\":57.52385673,\"long\":-2.99086521,\"formatname\":\"Auchroisk\"},{\"RowID\":\"9\",\"Distillery\":\"Aultmore\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"0\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB55 3QY\",\" Latitude\":\"340754\",\" Longitude\":\"848623\",\"cluster\":\"3\",\"lat\":57.52385673,\"long\":-2.99086521,\"formatname\":\"Aultmore\"},{\"RowID\":\"10\",\"Distillery\":\"Balblair\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"2\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"1\",\"Postcode\":\"IV19 1LB\",\" Latitude\":\"270820\",\" Longitude\":\"885770\",\"cluster\":\"6\",\"lat\":57.84272037,\"long\":-4.17775055,\"formatname\":\"Balblair\"},{\"RowID\":\"11\",\"Distillery\":\"Balmenach\",\"Body\":\"4\",\"Sweetness\":\"3\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"3\",\"Nutty\":\"3\",\"Malty\":\"0\",\"Fruity\":\"1\",\"Floral\":\"2\",\"Postcode\":\"PH26 3PF\",\" Latitude\":\"307750\",\" Longitude\":\"827170\",\"cluster\":\"4\",\"lat\":57.32569601,\"long\":-3.53365497,\"formatname\":\"Balmenach\"},{\"RowID\":\"12\",\"Distillery\":\"Belvenie\",\"Body\":\"3\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"3\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"0\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB55 4DH\",\" Latitude\":\"332337\",\" Longitude\":\"841274\",\"cluster\":\"8\",\"lat\":57.45667664,\"long\":-3.12933157,\"formatname\":\"Belvenie\"},{\"RowID\":\"13\",\"Distillery\":\"BenNevis\",\"Body\":\"4\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"PH33 6TJ\",\" Latitude\":\"212600\",\" Longitude\":\"775710\",\"cluster\":\"1\",\"lat\":56.83493621,\"long\":-5.07340457,\"formatname\":\"Ben Nevis\"},{\"RowID\":\"14\",\"Distillery\":\"Benriach\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"0\",\"Malty\":\"2\",\"Fruity\":\"3\",\"Floral\":\"2\",\"Postcode\":\"IV30 8SJ\",\" Latitude\":\"323450\",\" Longitude\":\"858380\",\"cluster\":\"3\",\"lat\":57.60887851,\"long\":-3.28278649,\"formatname\":\"Benriach\"},{\"RowID\":\"15\",\"Distillery\":\"Benrinnes\",\"Body\":\"3\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"3\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"3\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB38 9NN\",\" Latitude\":\"325800\",\" Longitude\":\"839920\",\"cluster\":\"1\",\"lat\":57.44349494,\"long\":-3.23783888,\"formatname\":\"Benrinnes\"},{\"RowID\":\"16\",\"Distillery\":\"Benromach\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"IV36 3EB\",\" Latitude\":\"303330\",\" Longitude\":\"859350\",\"cluster\":\"1\",\"lat\":57.61372313,\"long\":-3.61976289,\"formatname\":\"Benromach\"},{\"RowID\":\"17\",\"Distillery\":\"Bladnoch\",\"Body\":\"1\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"0\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"3\",\"Postcode\":\"DG8 9AB\",\" Latitude\":\"242260\",\" Longitude\":\"554260\",\"cluster\":\"3\",\"lat\":54.85820352,\"long\":-4.45893681,\"formatname\":\"Bladnoch\"},{\"RowID\":\"18\",\"Distillery\":\"BlairAthol\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"2\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"PH16 5LY\",\" Latitude\":\"294860\",\" Longitude\":\"757580\",\"cluster\":\"1\",\"lat\":56.69805291,\"long\":-3.71854165,\"formatname\":\"Blair Athol\"},{\"RowID\":\"19\",\"Distillery\":\"Bowmore\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"3\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"1\",\"Fruity\":\"1\",\"Floral\":\"2\",\"Postcode\":\"PA43 7GS\",\" Latitude\":\"131330\",\" Longitude\":\"659720\",\"cluster\":\"2\",\"lat\":55.75601608,\"long\":-6.28375983,\"formatname\":\"Bowmore\"},{\"RowID\":\"20\",\"Distillery\":\"Bruichladdich\",\"Body\":\"1\",\"Sweetness\":\"1\",\"Smoky\":\"2\",\"Medicinal\":\"2\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"PA49 7UN\",\" Latitude\":\"126680\",\" Longitude\":\"661400\",\"cluster\":\"2\",\"lat\":55.76846517,\"long\":-6.35931676,\"formatname\":\"Bruichladdich\"},{\"RowID\":\"21\",\"Distillery\":\"Bunnahabhain\",\"Body\":\"1\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"3\",\"Postcode\":\"PA46 7RR\",\" Latitude\":\"142210\",\" Longitude\":\"673170\",\"cluster\":\"3\",\"lat\":55.88246436,\"long\":-6.12361612,\"formatname\":\"Bunnahabhain\"},{\"RowID\":\"22\",\"Distillery\":\"Caol Ila\",\"Body\":\"3\",\"Sweetness\":\"1\",\"Smoky\":\"4\",\"Medicinal\":\"2\",\"Tobacco\":\"1\",\"Honey\":\"0\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"1\",\"Floral\":\"1\",\"Postcode\":\"PA46 7RL\",\" Latitude\":\"142920\",\" Longitude\":\"670040\",\"cluster\":\"5\",\"lat\":55.85479401,\"long\":-6.10932768,\"formatname\":\"Caol Ila\"},{\"RowID\":\"23\",\"Distillery\":\"Cardhu\",\"Body\":\"1\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB38 7RY\",\" Latitude\":\"318790\",\" Longitude\":\"843090\",\"cluster\":\"3\",\"lat\":57.47076055,\"long\":-3.35564411,\"formatname\":\"Cardhu\"},{\"RowID\":\"24\",\"Distillery\":\"Clynelish\",\"Body\":\"3\",\"Sweetness\":\"2\",\"Smoky\":\"3\",\"Medicinal\":\"3\",\"Tobacco\":\"1\",\"Honey\":\"0\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"0\",\"Postcode\":\"KW9 6LB\",\" Latitude\":\"290250\",\" Longitude\":\"904230\",\"cluster\":\"5\",\"lat\":58.01363295,\"long\":-3.85921222,\"formatname\":\"Clynelish\"},{\"RowID\":\"25\",\"Distillery\":\"Craigallechie\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"1\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"1\",\"Floral\":\"4\",\"Postcode\":\"AB38 9ST\",\" Latitude\":\"328920\",\" Longitude\":\"844920\",\"cluster\":\"1\",\"lat\":57.4888974,\"long\":-3.18732751,\"formatname\":\"Craigallechie\"},{\"RowID\":\"26\",\"Distillery\":\"Craigganmore\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"2\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"1\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB37 9AB\",\" Latitude\":\"316600\",\" Longitude\":\"836370\",\"cluster\":\"6\",\"lat\":57.41001789,\"long\":-3.38985467,\"formatname\":\"Craigganmore\"},{\"RowID\":\"27\",\"Distillery\":\"Dailuaine\",\"Body\":\"4\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"2\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"1\",\"Postcode\":\"AB38 7RE\",\" Latitude\":\"323520\",\" Longitude\":\"841010\",\"cluster\":\"4\",\"lat\":57.45290475,\"long\":-3.27615435,\"formatname\":\"Dailuaine\"},{\"RowID\":\"28\",\"Distillery\":\"Dalmore\",\"Body\":\"3\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"2\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"3\",\"Floral\":\"1\",\"Postcode\":\"IV17 0UT\",\" Latitude\":\"266610\",\" Longitude\":\"868730\",\"cluster\":\"4\",\"lat\":57.68854565,\"long\":-4.23911984,\"formatname\":\"Dalmore\"},{\"RowID\":\"29\",\"Distillery\":\"Dalwhinnie\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"PH19 1AB\",\" Latitude\":\"263670\",\" Longitude\":\"785270\",\"cluster\":\"1\",\"lat\":56.93855017,\"long\":-4.24228592,\"formatname\":\"Dalwhinnie\"},{\"RowID\":\"30\",\"Distillery\":\"Deanston\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"3\",\"Fruity\":\"2\",\"Floral\":\"1\",\"Postcode\":\"FK16 6AG\",\" Latitude\":\"271570\",\" Longitude\":\"701570\",\"cluster\":\"1\",\"lat\":56.18936988,\"long\":-4.07105489,\"formatname\":\"Deanston\"},{\"RowID\":\"31\",\"Distillery\":\"Dufftown\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"0\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB55 4BR\",\" Latitude\":\"332360\",\" Longitude\":\"839200\",\"cluster\":\"3\",\"lat\":57.43805389,\"long\":-3.12837464,\"formatname\":\"Dufftown\"},{\"RowID\":\"32\",\"Distillery\":\"Edradour\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"4\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"PH16 5JP\",\" Latitude\":\"295960\",\" Longitude\":\"757940\",\"cluster\":\"1\",\"lat\":56.70153206,\"long\":-3.70073367,\"formatname\":\"Edradour\"},{\"RowID\":\"33\",\"Distillery\":\"GlenDeveronMacduff\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"1\",\"Tobacco\":\"1\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"2\",\"Nutty\":\"0\",\"Malty\":\"2\",\"Fruity\":\"0\",\"Floral\":\"1\",\"Postcode\":\"AB4 3JT\",\" Latitude\":\"372120\",\" Longitude\":\"860400\",\"cluster\":\"0\",\"lat\":57.63266484,\"long\":-2.46855037,\"formatname\":\"Glen Deveron Macduff\"},{\"RowID\":\"34\",\"Distillery\":\"GlenElgin\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"3\",\"Postcode\":\"IV30 3SL\",\" Latitude\":\"322640\",\" Longitude\":\"861040\",\"cluster\":\"8\",\"lat\":57.63262696,\"long\":-3.29718943,\"formatname\":\"Glen Elgin\"},{\"RowID\":\"35\",\"Distillery\":\"GlenGarioch\",\"Body\":\"2\",\"Sweetness\":\"1\",\"Smoky\":\"3\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"3\",\"Winey\":\"1\",\"Nutty\":\"0\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB51 0ES\",\" Latitude\":\"381020\",\" Longitude\":\"827590\",\"cluster\":\"6\",\"lat\":57.33841743,\"long\":-2.31694835,\"formatname\":\"Glen Garioch\"},{\"RowID\":\"36\",\"Distillery\":\"GlenGrant\",\"Body\":\"1\",\"Sweetness\":\"2\",\"Smoky\":\"0\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"0\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"1\",\"Postcode\":\"AB38 7BS\",\" Latitude\":\"327610\",\" Longitude\":\"849570\",\"cluster\":\"3\",\"lat\":57.53044903,\"long\":-3.21055585,\"formatname\":\"Glen Grant\"},{\"RowID\":\"37\",\"Distillery\":\"GlenKeith\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"1\",\"Postcode\":\"AB55 3BU\",\" Latitude\":\"340754\",\" Longitude\":\"848623\",\"cluster\":\"6\",\"lat\":57.52385673,\"long\":-2.99086521,\"formatname\":\"Glen Keith\"},{\"RowID\":\"38\",\"Distillery\":\"GlenMoray\",\"Body\":\"1\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"4\",\"Postcode\":\"IV30 1YE\",\" Latitude\":\"319820\",\" Longitude\":\"862320\",\"cluster\":\"3\",\"lat\":57.64362824,\"long\":-3.34482558,\"formatname\":\"Glen Moray\"},{\"RowID\":\"39\",\"Distillery\":\"GlenOrd\",\"Body\":\"3\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"IV6 7UJ\",\" Latitude\":\"251810\",\" Longitude\":\"850860\",\"cluster\":\"8\",\"lat\":57.52354702,\"long\":-4.47618294,\"formatname\":\"Glen Ord\"},{\"RowID\":\"40\",\"Distillery\":\"GlenScotia\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"2\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"0\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"1\",\"Floral\":\"1\",\"Postcode\":\"PA28 6DS\",\" Latitude\":\"172090\",\" Longitude\":\"621010\",\"cluster\":\"2\",\"lat\":55.42981002,\"long\":-5.60370008,\"formatname\":\"Glen Scotia\"},{\"RowID\":\"41\",\"Distillery\":\"GlenSpey\",\"Body\":\"1\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"0\",\"Floral\":\"2\",\"Postcode\":\"AB38 7AU\",\" Latitude\":\"327760\",\" Longitude\":\"849140\",\"cluster\":\"0\",\"lat\":57.52661145,\"long\":-3.20792383,\"formatname\":\"Glen Spey\"},{\"RowID\":\"42\",\"Distillery\":\"Glenallachie\",\"Body\":\"1\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB38 9LR\",\" Latitude\":\"326490\",\" Longitude\":\"841240\",\"cluster\":\"3\",\"lat\":57.45546152,\"long\":-3.22674329,\"formatname\":\"Glenallachie\"},{\"RowID\":\"43\",\"Distillery\":\"Glendronach\",\"Body\":\"4\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"4\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"0\",\"Postcode\":\"AB54 6DA\",\" Latitude\":\"361200\",\" Longitude\":\"844930\",\"cluster\":\"4\",\"lat\":57.49290616,\"long\":-2.64892973,\"formatname\":\"Glendronach\"},{\"RowID\":\"44\",\"Distillery\":\"Glendullan\",\"Body\":\"3\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"2\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"3\",\"Floral\":\"2\",\"Postcode\":\"AB55 4DJ\",\" Latitude\":\"333000\",\" Longitude\":\"840300\",\"cluster\":\"8\",\"lat\":57.44802772,\"long\":-3.11801742,\"formatname\":\"Glendullan\"},{\"RowID\":\"45\",\"Distillery\":\"Glenfarclas\",\"Body\":\"2\",\"Sweetness\":\"4\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"3\",\"Nutty\":\"2\",\"Malty\":\"3\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB37 9BD\",\" Latitude\":\"320950\",\" Longitude\":\"838160\",\"cluster\":\"8\",\"lat\":57.42687038,\"long\":-3.3180485,\"formatname\":\"Glenfarclas\"},{\"RowID\":\"46\",\"Distillery\":\"Glenfiddich\",\"Body\":\"1\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"0\",\"Winey\":\"0\",\"Nutty\":\"0\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB55 4DH\",\" Latitude\":\"331713\",\" Longitude\":\"840840\",\"cluster\":\"3\",\"lat\":57.45268546,\"long\":-3.13960758,\"formatname\":\"Glenfiddich\"},{\"RowID\":\"47\",\"Distillery\":\"Glengoyne\",\"Body\":\"1\",\"Sweetness\":\"2\",\"Smoky\":\"0\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"3\",\"Floral\":\"2\",\"Postcode\":\"G63 9LB\",\" Latitude\":\"252810\",\" Longitude\":\"682750\",\"cluster\":\"3\",\"lat\":56.01499596,\"long\":-4.36269258,\"formatname\":\"Glengoyne\"},{\"RowID\":\"48\",\"Distillery\":\"Glenkinchie\",\"Body\":\"1\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"0\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"EH34 5ET\",\" Latitude\":\"344380\",\" Longitude\":\"666690\",\"cluster\":\"3\",\"lat\":55.89011388,\"long\":-2.89084975,\"formatname\":\"Glenkinchie\"},{\"RowID\":\"49\",\"Distillery\":\"Glenlivet\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"2\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"3\",\"Postcode\":\"AB37 9DB\",\" Latitude\":\"319560\",\" Longitude\":\"828780\",\"cluster\":\"8\",\"lat\":57.34239231,\"long\":-3.33811628,\"formatname\":\"Glenlivet\"},{\"RowID\":\"50\",\"Distillery\":\"Glenlossie\",\"Body\":\"1\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"IV30 3SS\",\" Latitude\":\"322640\",\" Longitude\":\"861040\",\"cluster\":\"3\",\"lat\":57.63262696,\"long\":-3.29718943,\"formatname\":\"Glenlossie\"},{\"RowID\":\"51\",\"Distillery\":\"Glenmorangie\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"IV19 1PZ\",\" Latitude\":\"276750\",\" Longitude\":\"883450\",\"cluster\":\"6\",\"lat\":57.82357084,\"long\":-4.07673626,\"formatname\":\"Glenmorangie\"},{\"RowID\":\"52\",\"Distillery\":\"Glenrothes\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"2\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"0\",\"Postcode\":\"AB38 7AA\",\" Latitude\":\"327650\",\" Longitude\":\"849170\",\"cluster\":\"4\",\"lat\":57.52686327,\"long\":-3.20976906,\"formatname\":\"Glenrothes\"},{\"RowID\":\"53\",\"Distillery\":\"Glenturret\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"2\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"1\",\"Floral\":\"2\",\"Postcode\":\"PH7 4HA\",\" Latitude\":\"285630\",\" Longitude\":\"723580\",\"cluster\":\"8\",\"lat\":56.39059482,\"long\":-3.8541885,\"formatname\":\"Glenturret\"},{\"RowID\":\"54\",\"Distillery\":\"Highland Park\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"3\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"1\",\"Floral\":\"1\",\"Postcode\":\"KW15 1SU\",\" Latitude\":\"345340\",\" Longitude\":\"1009260\",\"cluster\":\"2\",\"lat\":58.96700352,\"long\":-2.95222088,\"formatname\":\"Highland Park\"},{\"RowID\":\"55\",\"Distillery\":\"Inchgower\",\"Body\":\"1\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"1\",\"Floral\":\"2\",\"Postcode\":\"AB56 5AB\",\" Latitude\":\"342610\",\" Longitude\":\"863970\",\"cluster\":\"0\",\"lat\":57.66192917,\"long\":-2.96351911,\"formatname\":\"Inchgower\"},{\"RowID\":\"56\",\"Distillery\":\"Isle of Jura\",\"Body\":\"2\",\"Sweetness\":\"1\",\"Smoky\":\"2\",\"Medicinal\":\"2\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"1\",\"Floral\":\"1\",\"Postcode\":\"PA60 7XT\",\" Latitude\":\"152660\",\" Longitude\":\"667040\",\"cluster\":\"2\",\"lat\":55.83299777,\"long\":-5.95138888,\"formatname\":\"Isle Jura\"},{\"RowID\":\"57\",\"Distillery\":\"Knochando\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB38 7RT\",\" Latitude\":\"319470\",\" Longitude\":\"841570\",\"cluster\":\"8\",\"lat\":57.45723233,\"long\":-3.34380927,\"formatname\":\"Knochando\"},{\"RowID\":\"58\",\"Distillery\":\"Lagavulin\",\"Body\":\"4\",\"Sweetness\":\"1\",\"Smoky\":\"4\",\"Medicinal\":\"4\",\"Tobacco\":\"1\",\"Honey\":\"0\",\"Spicy\":\"1\",\"Winey\":\"2\",\"Nutty\":\"1\",\"Malty\":\"1\",\"Fruity\":\"1\",\"Floral\":\"0\",\"Postcode\":\"PA42 7DZ\",\" Latitude\":\"140430\",\" Longitude\":\"645730\",\"cluster\":\"7\",\"lat\":55.63560841,\"long\":-6.12590021,\"formatname\":\"Lagavulin\"},{\"RowID\":\"59\",\"Distillery\":\"Laphroig\",\"Body\":\"4\",\"Sweetness\":\"2\",\"Smoky\":\"4\",\"Medicinal\":\"4\",\"Tobacco\":\"1\",\"Honey\":\"0\",\"Spicy\":\"0\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"1\",\"Fruity\":\"0\",\"Floral\":\"0\",\"Postcode\":\"PA42 7DU\",\" Latitude\":\"138680\",\" Longitude\":\"645160\",\"cluster\":\"7\",\"lat\":55.62956336,\"long\":-6.15308277,\"formatname\":\"Laphroig\"},{\"RowID\":\"60\",\"Distillery\":\"Linkwood\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"2\",\"Nutty\":\"0\",\"Malty\":\"1\",\"Fruity\":\"3\",\"Floral\":\"2\",\"Postcode\":\"IV30 3RD\",\" Latitude\":\"322640\",\" Longitude\":\"861040\",\"cluster\":\"8\",\"lat\":57.63262696,\"long\":-3.29718943,\"formatname\":\"Linkwood\"},{\"RowID\":\"61\",\"Distillery\":\"Loch Lomond\",\"Body\":\"1\",\"Sweetness\":\"1\",\"Smoky\":\"1\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"1\",\"Floral\":\"2\",\"Postcode\":\"G83 0TL\",\" Latitude\":\"239370\",\" Longitude\":\"680920\",\"cluster\":\"3\",\"lat\":55.99425409,\"long\":-4.57695568,\"formatname\":\"Loch Lomond\"},{\"RowID\":\"62\",\"Distillery\":\"Longmorn\",\"Body\":\"3\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"3\",\"Malty\":\"3\",\"Fruity\":\"2\",\"Floral\":\"3\",\"Postcode\":\"IV30 3SJ\",\" Latitude\":\"322640\",\" Longitude\":\"861040\",\"cluster\":\"1\",\"lat\":57.63262696,\"long\":-3.29718943,\"formatname\":\"Longmorn\"},{\"RowID\":\"63\",\"Distillery\":\"Macallan\",\"Body\":\"4\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"4\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"3\",\"Floral\":\"1\",\"Postcode\":\"AB38 9RX\",\" Latitude\":\"327710\",\" Longitude\":\"844480\",\"cluster\":\"4\",\"lat\":57.48475453,\"long\":-3.20737576,\"formatname\":\"Macallan\"},{\"RowID\":\"64\",\"Distillery\":\"Mannochmore\",\"Body\":\"2\",\"Sweetness\":\"1\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"IV30 3SS\",\" Latitude\":\"322640\",\" Longitude\":\"861040\",\"cluster\":\"1\",\"lat\":57.63262696,\"long\":-3.29718943,\"formatname\":\"Mannochmore\"},{\"RowID\":\"65\",\"Distillery\":\"Miltonduff\",\"Body\":\"2\",\"Sweetness\":\"4\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"0\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"1\",\"Floral\":\"2\",\"Postcode\":\"IV30 3TQ\",\" Latitude\":\"322640\",\" Longitude\":\"861040\",\"cluster\":\"0\",\"lat\":57.63262696,\"long\":-3.29718943,\"formatname\":\"Miltonduff\"},{\"RowID\":\"66\",\"Distillery\":\"Mortlach\",\"Body\":\"3\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"3\",\"Winey\":\"3\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB55 4AQ\",\" Latitude\":\"332950\",\" Longitude\":\"839850\",\"cluster\":\"4\",\"lat\":57.44397897,\"long\":-3.11872698,\"formatname\":\"Mortlach\"},{\"RowID\":\"67\",\"Distillery\":\"Oban\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"2\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"0\",\"Postcode\":\"PA34 5NH\",\" Latitude\":\"185940\",\" Longitude\":\"730190\",\"cluster\":\"2\",\"lat\":56.41524561,\"long\":-5.47181083,\"formatname\":\"Oban\"},{\"RowID\":\"68\",\"Distillery\":\"OldFettercairn\",\"Body\":\"1\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"1\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"3\",\"Fruity\":\"1\",\"Floral\":\"1\",\"Postcode\":\"AB30 1YE\",\" Latitude\":\"370860\",\" Longitude\":\"772900\",\"cluster\":\"1\",\"lat\":56.84661499,\"long\":-2.47933843,\"formatname\":\"Old Fettercairn\"},{\"RowID\":\"69\",\"Distillery\":\"OldPulteney\",\"Body\":\"2\",\"Sweetness\":\"1\",\"Smoky\":\"2\",\"Medicinal\":\"2\",\"Tobacco\":\"1\",\"Honey\":\"0\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"KW1 5BA\",\" Latitude\":\"336730\",\" Longitude\":\"950130\",\"cluster\":\"2\",\"lat\":58.43487116,\"long\":-3.08526743,\"formatname\":\"Old Pulteney\"},{\"RowID\":\"70\",\"Distillery\":\"RoyalBrackla\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"2\",\"Medicinal\":\"1\",\"Tobacco\":\"1\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"0\",\"Malty\":\"2\",\"Fruity\":\"3\",\"Floral\":\"2\",\"Postcode\":\"IV12 5QY\",\" Latitude\":\"286040\",\" Longitude\":\"851320\",\"cluster\":\"6\",\"lat\":57.53759529,\"long\":-3.90523066,\"formatname\":\"Royal Brackla\"},{\"RowID\":\"71\",\"Distillery\":\"RoyalLochnagar\",\"Body\":\"3\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"2\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"3\",\"Floral\":\"1\",\"Postcode\":\"AB35 5TB\",\" Latitude\":\"326140\",\" Longitude\":\"794370\",\"cluster\":\"4\",\"lat\":57.03447581,\"long\":-3.21860274,\"formatname\":\"Royal Lochnagar\"},{\"RowID\":\"72\",\"Distillery\":\"Scapa\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"KW15 1SE\",\" Latitude\":\"342850\",\" Longitude\":\"1008930\",\"cluster\":\"1\",\"lat\":58.96371445,\"long\":-2.99542717,\"formatname\":\"Scapa\"},{\"RowID\":\"73\",\"Distillery\":\"Speyburn\",\"Body\":\"2\",\"Sweetness\":\"4\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"0\",\"Nutty\":\"0\",\"Malty\":\"2\",\"Fruity\":\"1\",\"Floral\":\"2\",\"Postcode\":\"AB38 7AG\",\" Latitude\":\"326930\",\" Longitude\":\"851430\",\"cluster\":\"0\",\"lat\":57.54704309,\"long\":-3.22246779,\"formatname\":\"Speyburn\"},{\"RowID\":\"74\",\"Distillery\":\"Speyside\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"0\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"PH21 1NS\",\" Latitude\":\"278740\",\" Longitude\":\"800600\",\"cluster\":\"3\",\"lat\":57.08037377,\"long\":-4.00217162,\"formatname\":\"Speyside\"},{\"RowID\":\"75\",\"Distillery\":\"Springbank\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"2\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"0\",\"Floral\":\"1\",\"Postcode\":\"PA28 6EJ\",\" Latitude\":\"172280\",\" Longitude\":\"620910\",\"cluster\":\"2\",\"lat\":55.42900161,\"long\":-5.60062203,\"formatname\":\"Springbank\"},{\"RowID\":\"76\",\"Distillery\":\"Strathisla\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"2\",\"Nutty\":\"3\",\"Malty\":\"3\",\"Fruity\":\"3\",\"Floral\":\"2\",\"Postcode\":\"AB55 3BS\",\" Latitude\":\"340754\",\" Longitude\":\"848623\",\"cluster\":\"1\",\"lat\":57.52385673,\"long\":-2.99086521,\"formatname\":\"Strathisla\"},{\"RowID\":\"77\",\"Distillery\":\"Strathmill\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"3\",\"Floral\":\"2\",\"Postcode\":\"AB55 5DQ\",\" Latitude\":\"342650\",\" Longitude\":\"850500\",\"cluster\":\"6\",\"lat\":57.54095889,\"long\":-2.95965663,\"formatname\":\"Strathmill\"},{\"RowID\":\"78\",\"Distillery\":\"Talisker\",\"Body\":\"4\",\"Sweetness\":\"2\",\"Smoky\":\"3\",\"Medicinal\":\"3\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"3\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"0\",\"Postcode\":\"IV47 8SR\",\" Latitude\":\"137950\",\" Longitude\":\"831770\",\"cluster\":\"5\",\"lat\":57.30102545,\"long\":-6.35214885,\"formatname\":\"Talisker\"},{\"RowID\":\"79\",\"Distillery\":\"Tamdhu\",\"Body\":\"1\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"0\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB38 7RP\",\" Latitude\":\"319210\",\" Longitude\":\"841760\",\"cluster\":\"3\",\"lat\":57.45889228,\"long\":-3.348204,\"formatname\":\"Tamdhu\"},{\"RowID\":\"80\",\"Distillery\":\"Tamnavulin\",\"Body\":\"1\",\"Sweetness\":\"3\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"3\",\"Postcode\":\"AB37 9JA\",\" Latitude\":\"321180\",\" Longitude\":\"826110\",\"cluster\":\"6\",\"lat\":57.3186982,\"long\":-3.31035502,\"formatname\":\"Tamnavulin\"},{\"RowID\":\"81\",\"Distillery\":\"Teaninich\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"0\",\"Malty\":\"0\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"IV17 0XB\",\" Latitude\":\"265360\",\" Longitude\":\"869120\",\"cluster\":\"6\",\"lat\":57.69167342,\"long\":-4.26028646,\"formatname\":\"Teaninich\"},{\"RowID\":\"82\",\"Distillery\":\"Tobermory\",\"Body\":\"1\",\"Sweetness\":\"1\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"0\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"PA75 6NR\",\" Latitude\":\"150450\",\" Longitude\":\"755070\",\"cluster\":\"3\",\"lat\":56.62078752,\"long\":-6.06950415,\"formatname\":\"Tobermory\"},{\"RowID\":\"83\",\"Distillery\":\"Tomatin\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"0\",\"Floral\":\"1\",\"Postcode\":\"IV13 7YT\",\" Latitude\":\"279120\",\" Longitude\":\"829630\",\"cluster\":\"0\",\"lat\":57.34108718,\"long\":-4.01003091,\"formatname\":\"Tomatin\"},{\"RowID\":\"84\",\"Distillery\":\"Tomintoul\",\"Body\":\"0\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"1\",\"Floral\":\"2\",\"Postcode\":\"AB37 9AQ\",\" Latitude\":\"315100\",\" Longitude\":\"825560\",\"cluster\":\"0\",\"lat\":57.31266709,\"long\":-3.41108272,\"formatname\":\"Tomintoul\"},{\"RowID\":\"85\",\"Distillery\":\"Tormore\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"0\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"0\",\"Floral\":\"0\",\"Postcode\":\"PH26 3LR\",\" Latitude\":\"315180\",\" Longitude\":\"834960\",\"cluster\":\"0\",\"lat\":57.39709336,\"long\":-3.41299498,\"formatname\":\"Tormore\"},{\"RowID\":\"86\",\"Distillery\":\"Tullibardine\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"0\",\"Medicinal\":\"0\",\"Tobacco\":\"1\",\"Honey\":\"0\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"1\",\"Postcode\":\"PH4 1QG\",\" Latitude\":\"289690\",\" Longitude\":\"708850\",\"cluster\":\"6\",\"lat\":56.25928846,\"long\":-3.78228377,\"formatname\":\"Tullibardine\"}]\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-investigations-what-whisky-index-js-e5d6bf5015effd7ab325.js","// https://d3js.org/d3-array/ Version 1.2.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar quantile = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-array/build/d3-array.js\n// module id = 29\n// module chunks = 15263475050933 92755437227203","// https://d3js.org/d3-collection/ Version 1.0.4. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map$$1, depth) {\n    if (++depth > keys.length) return map$$1;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map$$1.entries();\n    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map$$1, key, value) {\n  map$$1.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nexports.nest = nest;\nexports.set = set;\nexports.map = map;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-collection/build/d3-collection.js\n// module id = 62\n// module chunks = 15263475050933 92755437227203","// https://d3js.org/d3-color/ Version 1.0.3. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-color/build/d3-color.js\n// module id = 33\n// module chunks = 15263475050933 92755437227203","// https://d3js.org/d3-format/ Version 1.2.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n};\n\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-format/build/d3-format.js\n// module id = 131\n// module chunks = 15263475050933 92755437227203","// https://d3js.org/d3-geo/ Version 1.10.0. Copyright 2018 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Array) { 'use strict';\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nfunction adder() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon = 1e-6;\nvar epsilon2 = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar quarterPi = pi / 4;\nvar tau = pi * 2;\n\nvar degrees = 180 / pi;\nvar radians = pi / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n\nfunction noop() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nfunction geoStream(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nfunction area(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n}\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range$1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0$1 = -(lambda1 = 180);\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range$$1, x) {\n  return range$$1[0] <= range$$1[1] ? range$$1[0] <= x && x <= range$$1[1] : x < range$$1[0] || range$$1[1] < x;\n}\n\nfunction bounds(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range$1 = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n}\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroid(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction compose(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nfunction rotation(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nfunction circle() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n\nfunction clipBuffer() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n\nfunction pointEqual(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nfunction clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum = adder();\n\nfunction polygonContains(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign$$1 * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n\nfunction clip(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = d3Array.merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nfunction clipCircle(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n\nfunction clipLine(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = d3Array.merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nfunction extent() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin(phi), cosPhi0$1 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nfunction length(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n}\n\nvar coordinates = [null, null];\nvar object = {type: \"LineString\", coordinates: coordinates};\n\nfunction distance(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nfunction contains(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n\nfunction graticuleX(y0, y1, dy) {\n  var y = d3Array.range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = d3Array.range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return d3Array.range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(d3Array.range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(d3Array.range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(d3Array.range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nfunction interpolate(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n\nfunction identity(x) {\n  return x;\n}\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nfunction index(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n\nfunction transform(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream$1));\n  fitBounds(boundsStream$1.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nfunction fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nfunction fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nfunction resample(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform$$1(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform$$1.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform$$1;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform$$1(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform$$1.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform$$1;\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform$$1 = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform$$1);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nfunction conicEqualArea() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n\nfunction albers() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nfunction albersUsa() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null, (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nfunction azimuthalEqualArea() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nfunction azimuthalEquidistant() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nfunction mercator() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nfunction conicConformal() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nfunction equirectangular() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nfunction conicEquidistant() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nfunction gnomonic() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n\nfunction scaleTranslate$1(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nfunction identity$1() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate$1((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate$1(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate$1(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate$1(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nfunction naturalEarth1() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n\nfunction orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nfunction orthographic() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n\nfunction stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nfunction stereographic() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nfunction transverseMercator() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent;\nexports.geoClipRectangle = clipRectangle;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate;\nexports.geoLength = length;\nexports.geoPath = index;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$1;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-geo/dist/d3-geo.js\n// module id = 416\n// module chunks = 92755437227203","// https://d3js.org/d3-interpolate/ Version 1.1.6. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-color')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Color) { 'use strict';\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n\nvar rgb$1 = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = d3Color.rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar number = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar string = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar value = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb$1) : string)\n      : b instanceof d3Color.color ? rgb$1\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n};\n\nvar round = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar zoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nexports.interpolate = value;\nexports.interpolateArray = array;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = number;\nexports.interpolateObject = object;\nexports.interpolateRound = round;\nexports.interpolateString = string;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = zoom;\nexports.interpolateRgb = rgb$1;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/build/d3-interpolate.js\n// module id = 86\n// module chunks = 15263475050933 92755437227203","// https://d3js.org/d3-path/ Version 1.0.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar pi = Math.PI;\nvar tau = 2 * pi;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexports.path = path;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-path/build/d3-path.js\n// module id = 417\n// module chunks = 92755437227203","// https://d3js.org/d3-scale-chromatic/ Version 1.2.0. Copyright 2018 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-interpolate'), require('d3-color')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-interpolate', 'd3-color'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3));\n}(this, (function (exports,d3Interpolate,d3Color) { 'use strict';\n\nfunction colors(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar Accent = colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n\nvar Dark2 = colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n\nvar Paired = colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n\nvar Pastel1 = colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n\nvar Pastel2 = colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n\nvar Set1 = colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n\nvar Set2 = colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n\nvar Set3 = colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n\nfunction ramp(scheme) {\n  return d3Interpolate.interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n\nvar scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nvar BrBG = ramp(scheme);\n\nvar scheme$1 = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nvar PRGn = ramp(scheme$1);\n\nvar scheme$2 = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nvar PiYG = ramp(scheme$2);\n\nvar scheme$3 = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nvar PuOr = ramp(scheme$3);\n\nvar scheme$4 = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nvar RdBu = ramp(scheme$4);\n\nvar scheme$5 = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nvar RdGy = ramp(scheme$5);\n\nvar scheme$6 = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nvar RdYlBu = ramp(scheme$6);\n\nvar scheme$7 = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nvar RdYlGn = ramp(scheme$7);\n\nvar scheme$8 = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nvar Spectral = ramp(scheme$8);\n\nvar scheme$9 = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nvar BuGn = ramp(scheme$9);\n\nvar scheme$10 = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nvar BuPu = ramp(scheme$10);\n\nvar scheme$11 = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nvar GnBu = ramp(scheme$11);\n\nvar scheme$12 = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nvar OrRd = ramp(scheme$12);\n\nvar scheme$13 = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nvar PuBuGn = ramp(scheme$13);\n\nvar scheme$14 = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nvar PuBu = ramp(scheme$14);\n\nvar scheme$15 = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nvar PuRd = ramp(scheme$15);\n\nvar scheme$16 = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nvar RdPu = ramp(scheme$16);\n\nvar scheme$17 = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nvar YlGnBu = ramp(scheme$17);\n\nvar scheme$18 = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nvar YlGn = ramp(scheme$18);\n\nvar scheme$19 = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nvar YlOrBr = ramp(scheme$19);\n\nvar scheme$20 = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nvar YlOrRd = ramp(scheme$20);\n\nvar scheme$21 = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nvar Blues = ramp(scheme$21);\n\nvar scheme$22 = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nvar Greens = ramp(scheme$22);\n\nvar scheme$23 = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nvar Greys = ramp(scheme$23);\n\nvar scheme$24 = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nvar Purples = ramp(scheme$24);\n\nvar scheme$25 = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nvar Reds = ramp(scheme$25);\n\nvar scheme$26 = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nvar Oranges = ramp(scheme$26);\n\nvar cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\nvar warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar rainbow = d3Color.cubehelix();\n\nfunction rainbow$1(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n\nfunction ramp$1(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp$1(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp$1(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp$1(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp$1(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nexports.schemeCategory10 = category10;\nexports.schemeAccent = Accent;\nexports.schemeDark2 = Dark2;\nexports.schemePaired = Paired;\nexports.schemePastel1 = Pastel1;\nexports.schemePastel2 = Pastel2;\nexports.schemeSet1 = Set1;\nexports.schemeSet2 = Set2;\nexports.schemeSet3 = Set3;\nexports.interpolateBrBG = BrBG;\nexports.schemeBrBG = scheme;\nexports.interpolatePRGn = PRGn;\nexports.schemePRGn = scheme$1;\nexports.interpolatePiYG = PiYG;\nexports.schemePiYG = scheme$2;\nexports.interpolatePuOr = PuOr;\nexports.schemePuOr = scheme$3;\nexports.interpolateRdBu = RdBu;\nexports.schemeRdBu = scheme$4;\nexports.interpolateRdGy = RdGy;\nexports.schemeRdGy = scheme$5;\nexports.interpolateRdYlBu = RdYlBu;\nexports.schemeRdYlBu = scheme$6;\nexports.interpolateRdYlGn = RdYlGn;\nexports.schemeRdYlGn = scheme$7;\nexports.interpolateSpectral = Spectral;\nexports.schemeSpectral = scheme$8;\nexports.interpolateBuGn = BuGn;\nexports.schemeBuGn = scheme$9;\nexports.interpolateBuPu = BuPu;\nexports.schemeBuPu = scheme$10;\nexports.interpolateGnBu = GnBu;\nexports.schemeGnBu = scheme$11;\nexports.interpolateOrRd = OrRd;\nexports.schemeOrRd = scheme$12;\nexports.interpolatePuBuGn = PuBuGn;\nexports.schemePuBuGn = scheme$13;\nexports.interpolatePuBu = PuBu;\nexports.schemePuBu = scheme$14;\nexports.interpolatePuRd = PuRd;\nexports.schemePuRd = scheme$15;\nexports.interpolateRdPu = RdPu;\nexports.schemeRdPu = scheme$16;\nexports.interpolateYlGnBu = YlGnBu;\nexports.schemeYlGnBu = scheme$17;\nexports.interpolateYlGn = YlGn;\nexports.schemeYlGn = scheme$18;\nexports.interpolateYlOrBr = YlOrBr;\nexports.schemeYlOrBr = scheme$19;\nexports.interpolateYlOrRd = YlOrRd;\nexports.schemeYlOrRd = scheme$20;\nexports.interpolateBlues = Blues;\nexports.schemeBlues = scheme$21;\nexports.interpolateGreens = Greens;\nexports.schemeGreens = scheme$22;\nexports.interpolateGreys = Greys;\nexports.schemeGreys = scheme$23;\nexports.interpolatePurples = Purples;\nexports.schemePurples = scheme$24;\nexports.interpolateReds = Reds;\nexports.schemeReds = scheme$25;\nexports.interpolateOranges = Oranges;\nexports.schemeOranges = scheme$26;\nexports.interpolateCubehelixDefault = cubehelix$1;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-scale-chromatic/dist/d3-scale-chromatic.js\n// module id = 418\n// module chunks = 92755437227203","// https://d3js.org/d3-scale/ Version 1.0.7. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-collection'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format'), require('d3-color')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\nvar array = Array.prototype;\n\nvar map$1 = array.map;\nvar slice = array.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range$$1) {\n  var index = d3Collection.map(),\n      domain = [],\n      unknown = implicit;\n\n  range$$1 = range$$1 == null ? [] : slice.call(range$$1);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range$$1[(i - 1) % range$$1.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = d3Collection.map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), scale) : range$$1.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range$$1)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = d3Array.bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = d3Interpolate.interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice.call(_), interpolate$$1 = d3Interpolate.interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n      return d3Format.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return d3Format.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = d3Array.tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = d3Array.tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = d3Array.tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear() {\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[d3Array.bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number$1(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year, month, week, day, hour, minute, second, millisecond, format$$1) {\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format$$1(\".%L\"),\n      formatSecond = format$$1(\":%S\"),\n      formatMinute = format$$1(\"%I:%M\"),\n      formatHour = format$$1(\"%I %p\"),\n      formatDay = format$$1(\"%a %d\"),\n      formatWeek = format$$1(\"%b %d\"),\n      formatMonth = format$$1(\"%B\"),\n      formatYear = format$$1(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(d3Array.tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format$$1(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format$$1));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\nvar warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar rainbow = d3Color.cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range$$1) {\n  var n = range$$1.length;\n  return function(t) {\n    return range$$1[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nexports.scaleBand = band;\nexports.scalePoint = point;\nexports.scaleIdentity = identity;\nexports.scaleLinear = linear;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$1;\nexports.scaleQuantize = quantize;\nexports.scaleThreshold = threshold;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$1;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-scale/build/d3-scale.js\n// module id = 63\n// module chunks = 15263475050933 92755437227203","// https://d3js.org/d3-shape/ Version 1.2.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-path')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Path) { 'use strict';\n\nvar constant = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs = Math.abs;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar max = Math.max;\nvar min = Math.min;\nvar sin = Math.sin;\nvar sqrt = Math.sqrt;\n\nvar epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = d3Path.path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant(0),\n      y1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar lineRadial$1 = function() {\n  return lineRadial(line().curve(curveRadialLinear));\n};\n\nvar areaRadial = function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar pointRadial = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nvar slice = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x,\n      y$$1 = y,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = d3Path.path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n\nvar cross = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10);\nvar kx = Math.sin(tau / 10) * kr;\nvar ky = -Math.cos(tau / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = d3Path.path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop = function() {};\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n};\n\nvar ascending = function(series) {\n  var sums = series.map(sum);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$1 = function(series) {\n  return ascending(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n};\n\nexports.arc = arc;\nexports.area = area;\nexports.line = line;\nexports.pie = pie;\nexports.areaRadial = areaRadial;\nexports.radialArea = areaRadial;\nexports.lineRadial = lineRadial$1;\nexports.radialLine = lineRadial$1;\nexports.pointRadial = pointRadial;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending;\nexports.stackOrderDescending = descending$1;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-shape/build/d3-shape.js\n// module id = 419\n// module chunks = 92755437227203","// https://d3js.org/d3-time-format/ Version 2.1.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Time) { 'use strict';\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? d3Time.utcMonday.ceil(week) : d3Time.utcMonday(week);\n          week = d3Time.utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? d3Time.timeMonday.ceil(week) : d3Time.timeMonday(week);\n          week = d3Time.timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? d3Time.timeThursday(d) : d3Time.timeThursday.ceil(d);\n  return pad(d3Time.timeThursday.count(d3Time.timeYear(d), d) + (d3Time.timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? d3Time.utcThursday(d) : d3Time.utcThursday.ceil(d);\n  return pad(d3Time.utcThursday.count(d3Time.utcYear(d), d) + (d3Time.utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n\nvar locale;\n\n\n\n\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.timeFormat = locale.format;\n  exports.timeParse = locale.parse;\n  exports.utcFormat = locale.utcFormat;\n  exports.utcParse = locale.utcParse;\n  return locale;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nexports.timeFormatDefaultLocale = defaultLocale;\nexports.timeFormatLocale = formatLocale;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-time-format/build/d3-time-format.js\n// module id = 132\n// module chunks = 15263475050933 92755437227203","// https://d3js.org/d3-time/ Version 1.0.8. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar t0 = new Date;\nvar t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-time/build/d3-time.js\n// module id = 64\n// module chunks = 15263475050933 92755437227203","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 97\n// module chunks = 92755437227203 231608221292675","// https://github.com/topojson/topojson-client Version 3.0.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nvar identity = function(x) {\n  return x;\n};\n\nvar transform = function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n};\n\nvar bbox = function(topology) {\n  var t = transform(topology.transform), key,\n      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\n  function bboxPoint(p) {\n    p = t(p);\n    if (p[0] < x0) x0 = p[0];\n    if (p[0] > x1) x1 = p[0];\n    if (p[1] < y0) y0 = p[1];\n    if (p[1] > y1) y1 = p[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n      case \"Point\": bboxPoint(o.coordinates); break;\n      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n    }\n  }\n\n  topology.arcs.forEach(function(arc) {\n    var i = -1, n = arc.length, p;\n    while (++i < n) {\n      p = t(arc[i], i);\n      if (p[0] < x0) x0 = p[0];\n      if (p[0] > x1) x1 = p[0];\n      if (p[1] < y0) y0 = p[1];\n      if (p[1] > y1) y1 = p[1];\n    }\n  });\n\n  for (key in topology.objects) {\n    bboxGeometry(topology.objects[key]);\n  }\n\n  return [x0, y0, x1, y1];\n};\n\nvar reverse = function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n};\n\nvar feature = function(topology, o) {\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature$1(topology, o); })}\n      : feature$1(topology, o);\n};\n\nfunction feature$1(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nfunction object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n\nvar stitch = function(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n};\n\nvar mesh = function(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n};\n\nfunction meshArcs(topology, object$$1, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object$$1, filter);\n  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n  return {type: \"MultiLineString\", arcs: stitch(topology, arcs)};\n}\n\nfunction extractArcs(topology, object$$1, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"LineString\": extract1(o.arcs); break;\n      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n      case \"MultiPolygon\": extract3(o.arcs); break;\n    }\n  }\n\n  geometry(object$$1);\n\n  geomsByArc.forEach(filter == null\n      ? function(geoms) { arcs.push(geoms[0].i); }\n      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\n  return arcs;\n}\n\nfunction planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area); // Note: doubled area!\n}\n\nvar merge = function(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n};\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"Polygon\": extract(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function(ring) {\n      ring.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitch(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nvar bisect = function(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n};\n\nvar neighbors = function(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n};\n\nvar untransform = function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n        n = input.length,\n        output = new Array(n),\n        x1 = Math.round((input[0] - dx) / kx),\n        y1 = Math.round((input[1] - dy) / ky);\n    output[0] = x1 - x0, x0 = x1;\n    output[1] = y1 - y0, y0 = y1;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n};\n\nvar quantize = function(topology, transform) {\n  if (topology.transform) throw new Error(\"already quantized\");\n\n  if (!transform || !transform.scale) {\n    if (!((n = Math.floor(transform)) >= 2)) throw new Error(\"n must be ≥2\");\n    box = topology.bbox || bbox(topology);\n    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;\n    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};\n  } else {\n    box = topology.bbox;\n  }\n\n  var t = untransform(transform), box, key, inputs = topology.objects, outputs = {};\n\n  function quantizePoint(point) {\n    return t(point);\n  }\n\n  function quantizeGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n      case \"MultiPoint\": output = {type: \"MultiPoint\", coordinates: input.coordinates.map(quantizePoint)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function quantizeArc(input) {\n    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic\n    output[0] = t(input[0], 0);\n    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points\n    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points\n    output.length = j;\n    return output;\n  }\n\n  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);\n\n  return {\n    type: \"Topology\",\n    bbox: box,\n    transform: transform,\n    objects: outputs,\n    arcs: topology.arcs.map(quantizeArc)\n  };\n};\n\nexports.bbox = bbox;\nexports.feature = feature;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.neighbors = neighbors;\nexports.quantize = quantize;\nexports.transform = transform;\nexports.untransform = untransform;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson-client/dist/topojson-client.js\n// module id = 943\n// module chunks = 92755437227203","import React from 'react'\nimport { map } from 'd3-collection'\n\nimport Constants from '../../../components/constants.js'\n\nclass ClusterSelector extends React.Component {\n  render() {\n    const { whisky, selectedcluster } = this.props\n    const clusters = map(whisky, d => d.cluster).keys().sort()\n    const labels = [this.props.allstring].concat(clusters)\n    const buttons = labels.map((d, i) => {\n      const fill = selectedcluster === d ? Constants.lightred : Constants.darkred\n      return(\n        <button\n          key={`button${i}`}\n          css={{\n            width: (100 / labels.length) + '%',\n            padding: 0,\n            fontSize: 12,\n            backgroundColor: fill,\n          }}\n          onClick={e => this.props.onUpdate(d)}\n        >\n          {d}\n        </button>\n      )\n    })\n    return (\n      <div className='containerrow'>\n      <div className='content'\n      >\n        {buttons}\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default ClusterSelector\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/investigations/what-whisky/_ClusterSelector.js","import React from 'React'\nimport ReactDOM from 'react-dom'\n\nimport {\n  Paragraph\n} from '../../../components'\n\nimport Constants from '../../../components/constants.js'\n\nimport Radial from './_Radial'\nimport Map from './_Map';\nimport clustertext from './clustertext.json'\n\n\nclass ResponsiveMap extends React.Component {\n  constructor(props){\n    super(props)\n    this.state={\n      width: this.props.width,\n      height: this.props.height,\n      scalemultiplier: 1\n    }\n    this.handleResize = this.handleResize.bind(this)\n  }\n\n  handleResize(e){\n    const elem = ReactDOM.findDOMNode(this);\n    const width = elem.getBoundingClientRect().width;\n    // height should always be in proportion with the width\n    const height = width * 1.3;\n    // need to make the scale smaller as the width gets smaller, diverging from\n    // the base width of 594\n    const scalemultiplier = width / 594 \n    this.setState({\n      width: width,\n      height: height,\n      scalemultiplier: scalemultiplier\n    })\n  }\n\n  componentDidMount() {\n    // put an event handler on\n    window.addEventListener('resize', this.handleResize);\n    this.handleResize()\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  render() {\n    return (\n      <div className='content'>\n        <Map\n          width={this.state.width}\n          height={this.state.height}\n          whisky={this.props.whisky}\n\n          selectedColour={this.props.selectedColour}\n          landfill={this.props.landfill}\n          seafill={this.props.seafill}\n          riverColour={this.props.riverColour}\n          unselectedColour={this.props.unselectedColour}\n          disabledColour={this.props.disabledColour}\n\n          onHover={this.props.onHover}\n          selected={this.props.selected}\n          cluster={this.props.cluster}\n          colourcluster={this.props.colourcluster}\n\n          rotate0={this.props.rotate0}\n          rotate1={this.props.rotate1}\n          spey={this.props.spey}\n\n          scale={this.props.scale * this.state.scalemultiplier}\n        />\n      </div>\n    );\n  }\n}\n\nclass ResponsiveRadial extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      width: this.props.width, \n      height: this.props.height\n    }\n    this.handleResize = this.handleResize.bind(this)\n  }\n\n  handleResize(e){\n    const elem = ReactDOM.findDOMNode(this);\n    const width = elem.getBoundingClientRect().width;\n    // height should always be in proportion with the width\n    const height = width;\n    this.setState({\n      width: width,\n      height: height,\n    })\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    this.handleResize()\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  render() {\n    return (\n      <div>\n        <Radial\n          whisky={this.props.whisky}\n          selected={this.props.selected}\n          radialFill={this.props.radialFill}\n          radialOverall={this.props.radialOverall}\n          width={this.state.width}\n          height={this.state.height}\n        />\n      </div>\n    );\n  }\n}\n\nclass FormattedOverview extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      rotate0: this.props.rotate0,\n      rotate1: this.props.rotate1,\n      scale: this.props.scale,\n      spey: this.props.spey,\n      zoomlevel: this.props.zoomlevel ? this.props.zoomlevel: 'scotland'\n    }\n    this.zoomOut = this.zoomOut.bind(this)\n    this.zoomSpey = this.zoomSpey.bind(this)\n    this.zoomIslay = this.zoomIslay.bind(this)\n    this.zoomDeepSpey = this.zoomDeepSpey.bind(this)\n  }\n\n  zoomSpey(e){\n    this.setState({\n      rotate0: 3.93,\n      rotate1: 0.5,\n      scale: 24800,\n      spey: true,\n      zoomlevel: 'spey',\n    })\n  }\n\n  zoomDeepSpey(e){\n    this.setState({\n      rotate0: 3.3,\n      rotate1: 0.29,\n      scale: 100000,\n      spey: true,\n      zoomlevel: 'deepspey',\n    })\n  }\n\n  zoomIslay(e){\n    this.setState({\n      rotate0: 6.25,\n      rotate1: 1.92,\n      scale: 57400,\n      spey: false,\n      zoomlevel: 'islay'\n    })\n  }\n\n  zoomOut(e){\n    this.setState({\n      rotate0: 4.4,\n      rotate1: 0,\n      scale: 7000,\n      spey: false,\n      zoomlevel: 'scotland'\n    })\n  }\n\n  getzoomcontrols(){\n    return (\n    <div>\n      <button \n        css={{\n          width: '100%',\n          marginBottom: '1px',\n          backgroundColor: this.state.zoomlevel === 'scotland' ? Constants.lightblue : Constants.darkblue,\n        }}\n        onClick={this.zoomOut}>Scotland</button>\n      <br/>\n      <button \n        css={{\n          width: '100%',\n          marginBottom: '1px',\n          backgroundColor: this.state.zoomlevel === 'islay' ? Constants.lightblue : Constants.darkblue,\n        }}\n        onClick={this.zoomIslay}>Islay</button>\n      <br/>\n      <button \n        css={{\n          width: '100%',\n          marginBottom: '1px',\n          backgroundColor: this.state.zoomlevel === 'spey' ? Constants.lightblue : Constants.darkblue,\n        }}\n        onClick={this.zoomSpey}>Speyside</button>\n      <br/>\n      <button \n        css={{\n          width: '100%',\n          marginBottom: '1px',\n          backgroundColor: this.state.zoomlevel === 'deepspey' ? Constants.lightblue : Constants.darkblue,\n        }}\n        onClick={this.zoomDeepSpey}>Closer view Speyside</button>\n      <br/>\n    </div>\n    )\n  }\n\n  getoverview(){\n    const selectedclusterobject = clustertext[this.props.clusterselected]\n    const selectedclustertext = selectedclusterobject.desc\n    const clustername = selectedclusterobject.name ? <h4>{selectedclusterobject.name}</h4> : null\n    return(\n      <div className='containerrow'>\n        <div className='content'>\n          <Radial\n                whisky={this.props.whisky}\n                cluster={this.props.cluster}\n                radialFill={'tan'}\n                radialOverall={this.props.radialOverall}\n                width={300}\n                height={300}\n              />\n            </div>\n              <div className='note'>\n                {clustername}\n                <p>\n                  {selectedclustertext}\n                </p>\n              </div>\n        </div>\n    )\n  }\n\n  getwhiskyselectorcontrol(){\n    const options = this.props.whisky.map((d, i) => {\n      return (\n        <option\n          key={`whiskyselectorcontroloptionid${i}`}\n          value={d.RowID}\n        >\n          {d.formatname}\n        </option>\n      )\n    })\n    return(\n      <select\n        value={this.props.selected ? this.props.selected.RowID : '---'}\n        onChange={e => {\n          const selected = this.props.whisky.filter(d => d.RowID === e.target.value)[0]\n          this.props.onHover(selected)\n        }}\n      >\n        {options}\n      </select>\n    )\n  }\n\n  getclustermembership(){\n    if (this.props.colourcluster) {\n      if (this.props.selected) {\n        return <h4>Group: {this.props.selected.cluster}, {clustertext[this.props.selected.cluster].name}</h4>\n      } else {\n        return <h4>Group: </h4>\n      }\n    }\n  }\n\n  render() {\n    const zoomcontrols = this.getzoomcontrols()\n    const overview = this.props.clusteroverview ? this.getoverview() : null\n    const whiskyselectorcontrol = this.getwhiskyselectorcontrol()\n    const clustermembership = this.getclustermembership()\n\n    return (\n      <div>\n        {overview}\n        <div className='containerrow'\n          css={{\n            paddingBottom: 0\n          }}\n        >\n        <div className='note'>\n        <h4>\n          {\n            this.props.selected ? `Distillery: ${this.props.selected.formatname}` : 'Distillery:'\n          }\n        </h4>\n        <h4>\n          {\n            this.props.selected ? `Postcode: ${this.props.selected.Postcode}` : 'Postcode:'\n          }\n        </h4>\n        {clustermembership}\n        {this.props.nooverview ? null : <ResponsiveRadial\n          whisky={this.props.whisky}\n          selected={this.props.selected}\n          radialFill={this.props.radialFill}\n          radialOverall={this.props.radialOverall}\n          width={300}\n          height={300}\n        />\n        }\n        {this.props.controls ? zoomcontrols : null}\n        {this.props.controls ? whiskyselectorcontrol : null}\n        \n        </div>\n        <ResponsiveMap\n          width={594}\n          height={770}\n          whisky={this.props.whisky}\n\n          selectedColour={this.props.selectedColour}\n          landfill={this.props.landfill}\n          seafill={this.props.seafill}\n          riverColour={this.props.riverColour}\n          unselectedColour={this.props.unselectedColour}\n          disabledColour={this.props.disabledColour}\n\n          onHover={this.props.onHover}\n          selected={this.props.selected}\n          cluster={this.props.cluster}\n          colourcluster={this.props.colourcluster}\n\n          rotate0={this.state.rotate0}\n          rotate1={this.state.rotate1}\n          scale={this.state.scale}\n          spey={this.state.spey}\n        />\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default FormattedOverview\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/investigations/what-whisky/_FormattedOverview.js","\nimport React, { Component } from 'react';\n\nimport { max } from 'd3-array'\nimport { map } from 'd3-collection'\nimport { scaleOrdinal } from 'd3-scale'\nimport { cubehelix } from 'd3-color'\nimport { geoPath, geoAlbers } from 'd3-geo'\nimport * as topojson from 'topojson-client';\nimport geo from './geo.json';\nimport rivers from './rivers.json';\nimport { schemeSet2 as scheme } from 'd3-scale-chromatic';\n\n\nclass Scotland extends Component {\n  render() {\n    const projection = this.props.proj;\n    const pathGenerator = geoPath().projection(projection);\n    const features = topojson.feature(geo, geo.objects.tracts).features\n    const riverfeatures = topojson.feature(rivers, rivers.objects.tracts).features\n    const coast = features.map((d, i) => <path\n      className='scotland'\n      key={'path'+i}\n      d={pathGenerator(d)}\n      fill={this.props.landfill}\n      stroke={'none'}\n    />\n    )\n    let riverpath = null\n    if (this.props.spey){\n      riverpath = riverfeatures.map((d, i) => <path\n        className='river'\n        key={`riverpath${i}`}\n        d={pathGenerator(d)}\n        stroke={this.props.riverColour}\n        fill={'none'}\n      />)\n    }\n    return (\n      <g>\n        {coast}\n        {riverpath}\n      </g>\n    );\n  }\n}\n\nclass Distileries extends Component{\n  render(){\n    const calcpointfill = (point, selectedRow) => {\n      const { selectedColour, unselectedColour, disabledColour } = this.props\n      const colourScaleColour = this.props.colourscale(point.cluster)\n      let selectedCSColour = cubehelix(colourScaleColour)\n      selectedCSColour.l = max([0.85, selectedCSColour.l])\n      // find out if this cluster should be enabled or not.\n      if (this.props.cluster) {\n        // if we're only highlighting a specific cluster\n        if (this.props.cluster === point.cluster){\n          // this should be the selected point\n          return point.RowID === selectedRow ? selectedCSColour : colourScaleColour;\n        } else {\n          // this point should be disabled\n          return disabledColour\n        }\n      }\n      if (this.props.colourcluster){\n        // we're colouring points by the cluster\n        return point.RowID === selectedRow ? selectedCSColour : colourScaleColour;\n      }\n      return point.RowID === selectedRow ? selectedColour : unselectedColour;\n    }\n    const whiskyProcessed = this.props.whisky.map(d => {\n      var p = [d.long, d.lat]\n      var projected = this.props.proj(p);\n      d['x'] = projected[0]\n      d['y'] = projected[1]\n      return d\n    })\n    const selectedRow = this.props.selected ? this.props.selected.RowID : null\n    const enabled = (point) => this.props.cluster ? this.props.cluster === point.cluster : true\n    let points = whiskyProcessed.map((d, i) => {\n      return(\n        <circle\n          stroke={'white'}\n          strokeWidth={0.5}\n          key={'distillery'+i}\n          cx={d.x}\n          cy={d.y}\n          r={Math.pow(this.props.scale / 7000, 1/9) * 3}\n          onMouseEnter={enabled(d) ? () => {this.props.onHover(d)} : null}\n          fill={calcpointfill(d, selectedRow)}\n          className={enabled(d) ? 'enabled' : 'disabled'}\n        />\n      )\n    }\n    )\n    points = points.sort((a, b) => {\n      if (a.props.className === b.props.className){\n        return 0;\n      }\n      if (a.props.className === 'disabled'){\n        return -1;\n      }\n      if (b.props.className === 'disabled'){\n        return 1;\n      }\n      return a > b\n\n    })\n    return(\n      <g>\n        {points}\n      </g>\n    )\n  }\n}\n\nclass Map extends Component {\n  render() {\n    const disabledColour = this.props.disabledColour;\n    const center0 = this.props.center0 ? this.props.center0 : 0;\n    const center1 = this.props.center1 ? this.props.center1 : 57.8;\n    const rotate0 = this.props.rotate0 ? this.props.rotate0 : 4.4;\n    const rotate1 = this.props.rotate1 ? this.props.rotate1 : 0;\n    const scale = this.props.scale ? this.props.scale : 7000;\n    const clusters = map(this.props.whisky, d => d.cluster).keys().sort();\n    const colourscale = scaleOrdinal(scheme, clusters.length)\n      .domain(clusters)\n\n    const legendpoints = clusters.map((d, i) => {\n      let fill = colourscale(d)\n      if (this.props.cluster && this.props.cluster !== d){\n        fill = disabledColour\n      }\n      return(\n        <g \n          key={`legendpoint${i}`}\n          transform={`translate (30 ${i*20})`}>\n          <circle\n            cx={-10}\n            cy={-5}\n            r={5}\n            fill={fill}\n          />\n          <text>{`group ${d}`}</text>\n        </g>\n      )\n    })\n\n    const legend = this.props.colourcluster || this.props.cluster ? <g\n      transform='translate(0 30)'\n    >\n      {legendpoints}\n    </g> : null\n\n    this.proj = geoAlbers()\n      .center([center0, center1])\n      .rotate([rotate0, rotate1])\n      .parallels([50, 60])\n      .scale(scale)\n      .translate([this.props.width / 2, this.props.height / 2]);\n\n    return (\n      <div className='map'>\n        <svg\n          ref={node => this.node = node}\n          className='map'\n          width={this.props.width}\n          height={this.props.height}\n          style={{\n            backgroundColor: `${this.props.seafill}`\n          }}\n        >\n          <g>\n            <Scotland \n              landfill={this.props.landfill}\n              spey={this.props.spey}\n              riverColour={this.props.riverColour}\n              proj={this.proj}\n            />\n            <Distileries \n              selectedColour={this.props.selectedColour}\n              unselectedColour={this.props.unselectedColour}\n              disabledColour={this.props.disabledColour}\n              cluster={this.props.cluster}\n              colourcluster={this.props.colourcluster}\n              whisky={this.props.whisky}\n              selected={this.props.selected}\n              proj={this.proj} \n              onHover={(d) => this.props.onHover(d)}\n              colourscale={colourscale}\n              scale={scale}\n            />\n          </g>\n          {legend}\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/investigations/what-whisky/_Map.js","import React from 'react';\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport { max, mean } from 'd3-array';\nimport { arc } from 'd3-shape'\n\nconst SCALEORDER = [\n  \"Body\",\n  \"Tobacco\",\n  \"Medicinal\",\n  \"Smoky\",\n  \"Spicy\",\n  \"Fruity\",\n  \"Floral\",\n  \"Nutty\",\n  \"Malty\",\n  \"Honey\",\n  \"Sweetness\",\n  \"Winey\",\n]\n\nclass Radial extends React.Component {\n  constructor(props){\n    super(props)\n    this.middle = 25\n    this.calculatescales();\n    this.bottomPad = 10\n  }\n\n  calculatescales(){\n    const scalelength = (this.props.width / 2) ;\n    this.heightscales = {}\n    SCALEORDER.map(d => {\n      const dimensionValues = this.props.whisky.map(w => w[d])\n      this.heightscales[d] = scaleLinear()\n          .domain([0, max(dimensionValues)])\n          .range([this.middle * 2, scalelength])\n    })\n\n    this.anglescale = scaleBand()\n      .domain(SCALEORDER)\n      .paddingInner(0.1)\n      .range([-Math.PI / 2, Math.PI / 2])\n\n  }\n\n  componentWillReceiveProps() {\n    this.calculatescales()\n  }\n\n  calcpoints(){\n    const selected = this.props.selected;\n    const points = SCALEORDER.map((d, i) => {\n      const phi = this.anglescale(d)\n      const value = selected ? selected[d] ? selected[d] : 0 : 0\n      const r = this.heightscales[d](value)\n      const markerarc = arc()\n        .innerRadius(this.heightscales[d](0))\n        .outerRadius(r)\n        .startAngle(phi)\n        .endAngle(phi+this.anglescale.bandwidth())\n\n      return <path\n        key={'arc'+i}\n        className='radial'\n        d={markerarc()}\n        fill={this.props.radialFill}\n      />\n\n    })\n    return(\n      points\n    )\n  }\n\n  calclabels(){\n\n    return SCALEORDER.map((d, i) => {\n      const phi = this.anglescale(d) + (\n        this.anglescale.bandwidth() / 2\n      )\n      const r = this.heightscales[d](0) + 1\n      const x = r * Math.sin(phi)\n      // remember that down is positive in svg space\n      const y = -r * Math.cos(phi)\n\n      const textanglerotate = (theta) => {\n        if (theta > 0){\n          return -90 + theta * (180 / Math.PI)\n        } else{\n          return 90 + theta * (180 / Math.PI)\n        }\n      }\n\n      const textanchor = phi > 0 ? 'start' : 'end'\n      return <text\n        key={'label'+i}\n        textAnchor={textanchor}\n        dy={'0.5em'}\n        transform={`translate(${x}, ${y})rotate(${textanglerotate(phi)})`}\n        fontSize={8}\n        className='radiallabel'\n        fill='black'\n        >\n          {d}\n        </text>\n    })\n  }\n\n  averagewhisky(){\n    // going to put two sets of markers on this radial chart to show\n    // the average value of this cluster, and also the average value\n    // of the average whisky\n    const { whisky } = this.props\n    const markers = SCALEORDER.map((d, i) => {\n      const overallvalue = mean(\n        whisky.map(k => k[d])\n      )\n      const clustervalue = mean(\n        whisky.map(k => k.cluster === this.props.cluster ? k[d] : null)\n      )\n\n      const phi = this.anglescale(d)\n      const zeroval = this.heightscales[d](0)\n      // first make the overall marker\n      const overallr = overallvalue ? this.heightscales[d](overallvalue) : 0\n      const overallarc = arc()\n        .innerRadius(zeroval)\n        .outerRadius(overallr)\n        .startAngle(phi)\n        .endAngle(phi + this.anglescale.bandwidth())\n\n      // now make the marker for the cluster\n      const clusterr = max(\n        [\n          clustervalue ? this.heightscales[d](clustervalue) : 0,\n          zeroval\n        ]\n      )\n\n      const clusterarc = arc()\n        .innerRadius(zeroval)\n        .outerRadius(clusterr)\n        .startAngle(phi)\n        .endAngle(phi + this.anglescale.bandwidth())\n\n      return <g\n          key={`overallarc${i}`}\n        >\n        <path\n          className='radialcluster'\n          d={clusterarc()}\n          fill={this.props.radialFill}\n        />\n        <path\n          className='radialoverall'\n          d={overallarc()}\n          fill={'none'}\n          stroke={this.props.radialOverall}\n        />\n      </g>\n    })\n    return markers\n  }\n\n  render() {\n    const points = this.props.selected ? this.calcpoints() : null\n    const averagewhisky = this.props.cluster !== null ? this.averagewhisky() : null\n    const labels = this.calclabels()\n    return (\n      <svg \n        width={this.props.width}\n        height={this.props.height}\n        className='radial'\n      >\n        <g transform={`translate(${this.props.width / 2} ${this.props.height - this.bottomPad})`}>\n          {points}\n          {averagewhisky}\n          {labels}\n        </g>\n      </svg>\n    );\n  }\n}\n\nexport default Radial;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/investigations/what-whisky/_Radial.js","module.exports = {\"0\":{\"desc\":\"This group contains the sweetest whiskies. With the exception of the Isle of Arran, all are in Speyside. Tend to have lower scores in other areas, could be quite mellow.\",\"name\":\"Light, sweet\"},\"1\":{\"desc\":\"Not medicinal, but some bigger scores in the other categories. A lot of variation in this group.\",\"name\":\"Rich, malty, nutty\"},\"2\":{\"desc\":\"The thing that stands out about this group is a medicinal flavour. This is thought to be to do with iodine in the sea air. All these distilleries are coastal. Fairly relaxed in the other flavours\",\"name\":\"Maritime, mellow\"},\"3\":{\"desc\":\"Get lower scores on the body, winey characteristics. Have a few of the other flavours hidden in there. Mainly Speyside, but interesting to see Bunnahabhain from Islay in there.\",\"name\":\"Subtle\"},\"4\":{\"desc\":\"These have a strong body, and lots of winey flavours. Mainly from Speyside. Winey might be because of the use of sherry casks when maturing these whiskies.\",\"name\":\"Strong, winey\"},\"5\":{\"desc\":\"These are big, smoky, medicinal whiskies. These come from costal distilleries. Similar to group 2, but with more oomph.\",\"name\":\"Maritime, strong\"},\"6\":{\"desc\":\"Not much honey or winey flavours in this group. You can find more fruit and spice.\",\"name\":\"Fruits and spice\"},\"7\":{\"desc\":\"These two distilleries on Islay are right next to each other. They get very similar scores, very full of flavour\",\"name\":\"South Islay\"},\"8\":{\"desc\":\"Less sweet than group 0, which is the sweetest group, but still sweeter than average. Honey, fruity, floral.\",\"name\":\"Rich, sweet\"},\"All\":{\"desc\":\"Select a group here to show more information about the group. Explore the distilleries on the map below.\",\"name\":false}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/investigations/what-whisky/clustertext.json\n// module id = 559\n// module chunks = 92755437227203","module.exports = {\"type\":\"Topology\",\"bbox\":[-13.691390037536621,49.86541748046869,1.7641680240631672,61.52708435058605],\"transform\":{\"scale\":[0.00015455712618725974,0.00011661783487952238],\"translate\":[-13.691390037536621,49.86541748046869]},\"objects\":{\"tracts\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"MultiPolygon\",\"arcs\":[[[0]],[[1]],[[2]],[[3]],[[4]],[[5]],[[6]],[[7]],[[8]],[[9]],[[10]],[[11]],[[12]],[[13]],[[14]],[[15]],[[16]],[[17]],[[18]],[[19]],[[20]],[[21]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]],[[28]],[[29]],[[30]],[[31]],[[32]],[[33]],[[34]],[[35]],[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]],[[44]],[[45]],[[46]],[[47]],[[48]],[[49]],[[50]],[[51]],[[52]],[[53]],[[54]],[[55]],[[56]],[[57]],[[58]],[[59]],[[60]],[[61]],[[62]],[[63]],[[64]],[[65]],[[66]],[[67]],[[68]],[[69]],[[70]],[[71]],[[72]],[[73]],[[74]],[[75]],[[76]],[[77]],[[78]],[[79]],[[80]],[[81]],[[82]],[[83]],[[84]],[[85]],[[86]],[[87]],[[88]],[[89]],[[90]],[[91]],[[92]],[[93]],[[94]],[[95]],[[96]],[[97]],[[98]],[[99]],[[100]],[[101]],[[102]],[[103]],[[104]],[[105]],[[106]],[[107]],[[108]],[[109]],[[110]],[[111]],[[112]],[[113]],[[114]],[[115]],[[116]],[[117]],[[118]],[[119]],[[120]],[[121]],[[122]],[[123]],[[124]],[[125]],[[126]],[[127]],[[128]],[[129]],[[130]],[[131]],[[132]],[[133]],[[134]],[[135]],[[136]],[[137]],[[138]],[[139]],[[140]],[[141]],[[142]],[[143]],[[144]],[[145]],[[146]],[[147]],[[148]],[[149]],[[150]],[[151]],[[152]],[[153]],[[154]],[[155]],[[156]],[[157]],[[158]],[[159]],[[160]],[[161]],[[162]],[[163]],[[164]],[[165]],[[166]],[[167]],[[168]],[[169]],[[170]],[[171]],[[172]],[[173]],[[174]],[[175]],[[176]],[[177]],[[178]],[[179]],[[180]],[[181]],[[182]],[[183]],[[184]],[[185]],[[186]],[[187]],[[188]],[[189]],[[190]],[[191]],[[192]],[[193]],[[194]],[[195]],[[196]],[[197]],[[198]],[[199]],[[200]],[[201]],[[202]],[[203]],[[204]],[[205]]],\"properties\":{\"ID_0\":242,\"ISO\":\"GBR\",\"NAME_0\":\"United Kingdom\",\"OBJECTID_1\":82,\"ISO3\":\"GBR\",\"NAME_ENGLI\":\"United Kingdom\",\"NAME_ISO\":\"UNITED KINGDOM\",\"NAME_FAO\":\"United Kingdom\",\"NAME_LOCAL\":\"United Kingdom\",\"NAME_OBSOL\":null,\"NAME_VARIA\":\"England|Great Britain|Northern Ireland|Scotland|Wales\",\"NAME_NONLA\":null,\"NAME_FRENC\":\"Royaume-Uni\",\"NAME_SPANI\":\"Reino Unido\",\"NAME_RUSSI\":\"Ð¡Ð¾ÐµÐ´Ð¸Ð½Ñ‘Ð½Ð½Ð¾Ðµ ÐšÐ¾Ñ€Ð¾Ð»ÐµÐ²ÑÑ‚Ð²Ð¾ Ð’Ðµ\",\"NAME_ARABI\":\"Ø§Ù„Ù…Ù…Ù„ÙƒØ© Ø§Ù„Ù…ØªØ­Ø¯Ø©\",\"NAME_CHINE\":\"è‹±å›½\",\"WASPARTOF\":null,\"CONTAINS\":null,\"SOVEREIGN\":\"United Kingdom\",\"ISO2\":\"GB\",\"WWW\":null,\"FIPS\":\"UK\",\"ISON\":826,\"VALIDFR\":\"1927\",\"VALIDTO\":\"Present\",\"POP2000\":59414643,\"SQKM\":243137.203,\"POPSQKM\":244.366729019,\"UNREGION1\":\"Northern Europe\",\"UNREGION2\":\"Europe\",\"DEVELOPING\":2,\"CIS\":0,\"Transition\":0,\"OECD\":1,\"WBREGION\":null,\"WBINCOME\":\"High income: OECD\",\"WBDEBT\":\"Debt not classified\",\"WBOTHER\":null,\"CEEAC\":0,\"CEMAC\":0,\"CEPLG\":0,\"COMESA\":0,\"EAC\":0,\"ECOWAS\":0,\"IGAD\":0,\"IOC\":0,\"MRU\":0,\"SACU\":0,\"UEMOA\":0,\"UMA\":0,\"PALOP\":0,\"PARTA\":0,\"CACM\":0,\"EurAsEC\":0,\"Agadir\":0,\"SAARC\":0,\"ASEAN\":0,\"NAFTA\":0,\"GCC\":0,\"CSN\":0,\"CARICOM\":0,\"EU\":1,\"CAN\":0,\"ACP\":0,\"Landlocked\":0,\"AOSIS\":0,\"SIDS\":0,\"Islands\":0,\"LDC\":0}}]}},\"arcs\":[[[47497,288],[154,-52],[-106,-84],[-66,39],[18,97]],[[47849,615],[138,-117],[-77,-124],[-95,9],[-16,-64],[-135,115],[104,14],[-7,140],[88,27]],[[47441,874],[72,-90],[-20,-105],[-99,50],[47,145]],[[47522,884],[144,-81],[39,-136],[-90,-41],[-41,136],[-88,98],[36,24]],[[47810,981],[82,-112],[182,-35],[-149,-60],[-135,69],[20,138]],[[75801,7136],[90,-26],[3,-74],[-144,7],[51,93]],[[80150,7737],[72,-72],[97,64],[83,-26],[176,-174],[277,-88],[226,12],[144,-67],[198,-52],[54,-195],[118,-36],[68,-93],[-172,-105],[-270,-88],[-161,-117],[-72,-195],[3,-148],[-57,-81],[-388,-133],[-367,-62],[-126,126],[-464,327],[-341,119],[-144,93],[-126,121],[-284,5],[-269,-72],[-144,39],[151,23],[-7,65],[133,40],[172,255],[105,-14],[244,36],[259,140],[108,-9],[-15,-81],[137,57],[-61,47],[352,122],[18,71],[201,146],[72,0]],[[82303,8339],[122,-81],[44,-269],[-65,-55],[126,-64],[-11,-52],[-557,78],[-15,88],[173,-7],[61,72],[32,152],[-43,24],[133,114]],[[58324,11467],[101,-136],[0,-155],[54,-67],[-104,-26],[-79,146],[46,54],[-18,184]],[[92483,13182],[79,-12],[-68,-65],[-11,77]],[[92246,13229],[107,-47],[-136,-7],[29,54]],[[93015,13267],[43,-7],[4,-133],[-126,19],[-43,83],[122,38]],[[92983,13363],[53,-79],[-125,45],[72,34]],[[93410,13577],[180,-74],[108,-2],[187,-112],[427,-48],[108,-35],[54,-89],[166,-121],[93,-174],[-194,-126],[-194,-26],[-173,69],[-169,7],[-309,83],[-115,-45],[-29,138],[-237,143],[-61,117],[122,-34],[-32,136],[68,193]],[[58159,15244],[183,-50],[-54,-64],[-136,12],[7,102]],[[54467,15761],[-21,-88],[-79,-2],[100,90]],[[93561,15964],[115,-50],[-100,-24],[-105,67],[90,7]],[[93256,15995],[32,-119],[-122,21],[90,98]],[[54302,16119],[194,-93],[-122,-10],[-22,-55],[-129,48],[-14,64],[93,46]],[[94852,16664],[248,-76],[-76,-88],[-309,-129],[-295,-5],[-21,58],[176,181],[277,59]],[[54047,17267],[54,-7],[-15,-234],[-125,74],[18,141],[68,26]],[[57598,24894],[58,-12],[-33,-122],[-68,5],[-7,117],[50,12]],[[58698,29720],[-180,-103],[159,-40],[82,-103],[87,29],[57,-50],[-68,-100],[21,-112],[76,-3],[162,-185],[7,-77],[-205,-47],[-144,40],[-3,105],[-83,57],[14,148],[-244,48],[-137,-39],[-57,60],[64,52],[-111,100],[108,160],[118,-40],[277,100]],[[59945,30568],[76,-39],[302,-9],[65,-81],[111,40],[374,-71],[61,-79],[25,-138],[-68,-81],[108,-81],[-8,-62],[223,-19],[-32,-52],[75,-119],[29,-162],[101,-62],[-68,-112],[57,-33],[399,85],[61,91],[94,33],[248,-50],[161,14],[108,-45],[-118,-71],[-115,-179],[-72,-57],[-4,-100],[-370,-224],[-90,-38],[-18,-88],[-104,16],[-209,-114],[-57,-212],[-169,-55],[-252,-207],[-219,-90],[-137,40],[-3,-71],[-115,-86],[-184,105],[-143,19],[-61,138],[190,57],[47,117],[-36,85],[-61,-26],[-212,-245],[-101,-48],[-93,224],[-51,26],[-140,-62],[-25,67],[-112,26],[47,208],[-151,123],[15,77],[-83,21],[-129,107],[-15,122],[-198,152],[259,196],[-115,-29],[22,129],[-130,83],[80,90],[-8,143],[69,53],[14,155],[-61,54],[-47,177],[281,31],[147,81],[-22,-53],[162,12],[-11,60],[227,-27],[29,67],[150,53]],[[84316,33059],[7,-52],[-115,-67],[8,88],[100,31]],[[67523,36765],[-69,-83],[108,-176],[43,-205],[-21,-45],[111,-48],[33,-141],[86,-54],[79,-141],[126,53],[39,-65],[-219,-16],[-241,278],[-100,141],[-90,186],[-26,238],[141,78]],[[52074,38716],[-62,-95],[-93,36],[155,59]],[[52145,39093],[-10,-115],[-54,22],[64,93]],[[52196,39350],[50,-57],[-93,-60],[43,117]],[[52782,41313],[82,-46],[4,-71],[-165,71],[79,46]],[[46642,46196],[101,-12],[90,-93],[233,-17],[119,-55],[79,91],[245,9],[237,-116],[144,4],[201,-152],[140,-74],[410,105],[86,86],[165,-12],[133,-136],[54,7],[209,-105],[75,15],[97,-231],[126,-67],[18,-210],[-104,-107],[43,-43],[-4,-171],[-104,-179],[-32,-200],[72,-43],[363,50],[126,-43],[39,-97],[-61,-112],[-25,-201],[-108,-150],[54,-78],[104,12],[104,-105],[72,17],[144,-74],[129,-167],[108,-255],[151,-121],[122,-17],[26,-150],[100,-38],[166,-217],[-29,-90],[-79,42],[72,-188],[201,-59],[36,26],[154,-62],[-82,-7],[126,-162],[79,-172],[10,141],[-100,221],[-104,98],[-130,55],[-118,109],[64,124],[72,-57],[33,60],[118,-29],[155,-88],[197,-310],[-7,-381],[-129,-171],[-144,-69],[-194,-150],[-90,31],[-172,-70],[-4,-45],[-219,-40],[-378,-286],[-18,-105],[-90,-114],[105,-55],[-11,-83],[97,69],[18,-46],[-176,-166],[133,69],[100,126],[123,-17],[161,91],[51,64],[471,191],[161,-60],[176,10],[292,-27],[100,27],[7,107],[166,-53],[90,48],[79,-21],[187,-191],[97,-5],[10,-104],[80,-24],[-62,-141],[40,-36],[54,-204],[83,-29],[61,-136],[68,-9],[65,-153],[-47,-59],[14,-138],[76,-72],[61,-262],[187,-74],[-61,-119],[46,-26],[-7,-122],[-97,-50],[-21,-102],[-166,-67],[115,-157],[29,-159],[-32,-98],[-126,12],[11,-236],[-72,-10],[-33,-195],[-61,-7],[-54,95],[-104,48],[15,95],[-87,48],[-43,128],[-201,160],[29,203],[172,114],[47,-55],[43,91],[-47,209],[22,262],[-54,3],[-65,207],[-3,107],[-162,0],[-209,231],[-165,21],[-252,189],[-111,-91],[0,-226],[-122,-60],[154,-54],[317,-189],[-25,-95],[172,69],[-50,-71],[-133,-29],[7,145],[-76,17],[-100,-55],[32,-143],[104,36],[54,-124],[-10,-83],[50,-141],[75,67],[-82,-164],[72,-65],[-115,-159],[36,-153],[-108,-131],[25,-26],[-201,-88],[107,-48],[141,-2],[197,119],[270,36],[-18,-93],[61,-72],[65,103],[68,-124],[-4,-157],[54,-57],[-18,-158],[123,-33],[-112,-24],[-86,-78],[-43,-148],[-335,-338],[-118,102],[-97,-7],[57,-155],[-144,-119],[-104,74],[-14,102],[-97,46],[-209,-19],[-154,28],[-184,-62],[-219,-24],[-90,31],[-72,105],[112,-9],[0,219],[-148,-229],[80,-74],[-47,-81],[-313,-197],[-47,-120],[83,-81],[40,-140],[-15,-164],[-93,-174],[18,-134],[-108,-176],[-324,-193],[-64,-119],[-248,-76],[-76,-110],[-126,-43],[-187,-119],[-22,150],[-362,564],[-1009,36],[-84,22],[-190,312],[21,-112],[169,-219],[-180,-130],[-96,160],[-111,40],[-59,-89],[51,-217],[-45,-74],[-209,-79],[-246,-30],[-276,148],[-14,-102],[-203,-88],[-165,30],[-158,-51],[-150,40],[-99,-121],[-228,29],[-89,145],[-132,58],[118,257],[-15,215],[126,197],[-11,142],[-75,140],[-152,134],[-157,47],[-142,-31],[-143,-123],[-120,145],[-182,43],[-120,138],[-88,12],[-115,320],[-199,119],[53,164],[-121,417],[-204,70],[-41,198],[-380,226],[-97,111],[-150,38],[-246,-29],[-390,-385],[14,-108],[-317,-177],[-157,-11],[-15,-136],[-126,-85],[-46,-111],[158,-83],[15,-105],[166,-28],[48,-388],[-401,-66],[-233,-123],[82,-75],[-136,-49],[37,-172],[-53,-62],[-9,-133],[-139,-201],[-72,-26],[-82,50],[93,79],[-55,68],[81,106],[15,108],[-169,-28],[-142,-148],[1,-51],[119,-84],[-27,-123],[-149,6],[-165,85],[-176,-43],[89,118],[-257,-10],[11,156],[-116,-7],[-108,-83],[-119,-33],[1,-91],[-63,-37],[-321,72],[-202,-54],[-176,143],[-114,-21],[-118,73],[-47,189],[-177,120],[-90,-25],[-163,194],[-465,22],[-422,-31],[-126,111],[-44,343],[-152,346],[-95,31],[-87,-59],[-239,101],[-177,281],[-216,195],[-108,-38],[-145,61],[-319,370],[-360,247],[62,150],[-184,58],[-13,47],[199,32],[152,-16],[44,66],[151,24],[109,79],[179,14],[140,301],[141,155],[193,-2],[252,-64],[636,76],[63,153],[171,91],[35,70],[145,36],[169,125],[215,54],[81,63],[-73,162],[-212,-107],[-121,-4],[-147,106],[-220,83],[-193,-57],[-91,143],[-275,134],[-40,87],[76,114],[-120,83],[267,65],[148,216],[88,45],[542,-283],[81,7],[65,82],[297,112],[275,158],[436,26],[73,-54],[182,6],[-74,103],[40,322],[51,122],[307,183],[36,138],[125,102],[118,223],[-45,95],[24,339],[324,97],[-4,231],[-47,87],[81,80],[-31,90],[62,63],[21,131],[209,202],[275,-8],[76,64],[128,11],[66,85],[115,-28],[-136,-173],[208,31],[51,121],[104,-29],[144,24],[269,-31],[-3,-81],[93,-45],[230,12],[284,45],[259,236],[-58,174],[72,88],[162,-10],[-25,41],[183,462],[-21,241],[82,4],[187,-135],[137,-53],[377,-45],[219,31],[281,-22],[237,31],[58,170],[284,81],[122,-5],[18,114],[54,-76],[115,40],[158,-19],[147,34],[176,88],[126,-3],[22,110],[169,74],[10,48],[144,50]],[[55467,46246],[82,-60],[-115,-43],[33,103]],[[52451,46484],[137,-43],[-198,-41],[61,84]],[[48202,46710],[155,-50],[147,0],[173,-57],[-76,-169],[-3,-119],[-61,-72],[-69,72],[-7,93],[79,69],[-43,59],[-187,26],[-198,-33],[-190,10],[18,69],[165,95],[97,7]],[[52753,47708],[29,-50],[-130,19],[101,31]],[[55726,48637],[122,-167],[-69,-55],[-104,112],[-18,96],[69,14]],[[48892,49359],[-57,-72],[-68,19],[125,53]],[[51394,49514],[-11,-122],[-72,14],[83,108]],[[76937,49933],[161,-17],[-14,-164],[-190,28],[-83,103],[-126,-43],[-104,71],[183,-9],[173,31]],[[54550,50216],[374,-155],[75,-78],[198,-131],[43,-134],[108,-178],[54,-227],[-22,-133],[-129,-79],[14,-114],[270,-50],[165,-164],[-179,-91],[-115,-97],[18,-55],[302,-134],[-94,-97],[4,-117],[86,-174],[-40,-100],[-129,-102],[-334,12],[-108,-65],[-212,-4],[-299,50],[-240,114],[-173,107],[-65,145],[-14,139],[-180,61],[7,172],[83,167],[-36,207],[-147,126],[-173,257],[18,134],[54,47],[36,189],[108,193],[212,71],[79,150],[112,24],[97,93],[172,21]],[[51560,50292],[64,-102],[-115,-76],[54,-103],[-75,-116],[111,28],[-126,-93],[51,-78],[-173,-172],[-61,-19],[-36,81],[36,91],[-76,66],[83,143],[151,191],[-4,117],[116,42]],[[56599,50226],[-72,-115],[-90,117],[205,105],[-43,-107]],[[56976,50288],[-79,50],[65,33],[14,-83]],[[56861,50831],[36,-15],[-10,-188],[39,-45],[-119,-171],[-107,73],[-115,-95],[-40,64],[137,301],[179,76]],[[55194,50936],[82,-215],[-64,-40],[-62,102],[44,153]],[[55032,51979],[180,-48],[111,-121],[431,-284],[-100,-107],[183,-17],[0,-152],[72,-29],[176,36],[11,-290],[129,-310],[-43,-86],[-137,-21],[-21,-53],[144,-85],[43,-127],[-176,-71],[-151,102],[-58,246],[-259,150],[-79,-72],[-86,143],[29,119],[-83,-2],[-36,119],[18,176],[76,36],[-29,71],[-137,-19],[-118,58],[-133,119],[-137,169],[-43,150],[147,88],[76,112]],[[48961,52074],[21,-159],[-68,-251],[75,-61],[115,-320],[-14,-271],[126,-267],[154,-74],[94,-105],[-36,-154],[32,-91],[90,-26],[25,-69],[-72,-112],[108,-126],[-18,-153],[-133,-78],[-64,-96],[-105,53],[-25,-191],[-97,-24],[47,93],[-230,-133],[-158,-62],[-140,36],[-69,-53],[-82,72],[-169,-19],[-4,-105],[-122,-143],[-22,-74],[-136,-43],[-47,-76],[-302,21],[4,60],[-151,5],[50,316],[115,155],[86,55],[176,7],[65,57],[-47,227],[-126,159],[-176,119],[-183,-4],[65,219],[165,55],[79,69],[209,66],[64,74],[-43,88],[-129,-14],[-255,45],[-166,-9],[-158,-243],[-50,-165],[-245,-276],[-172,-121],[-299,-177],[-143,50],[-51,165],[155,171],[-108,24],[86,160],[162,116],[101,191],[-25,121],[-162,0],[14,103],[162,88],[-54,167],[47,24],[21,185],[184,72],[93,-72],[130,43],[136,143],[248,145],[72,-66],[-101,-143],[8,-119],[-62,-162],[130,-86],[-22,90],[151,277],[-36,62],[212,24],[94,121],[144,57],[194,136],[93,107],[155,-5],[75,69],[130,-9],[115,45]],[[48299,52851],[108,-7],[-158,-100],[-7,-72],[-115,-62],[14,103],[-115,4],[0,100],[273,34]],[[48817,53742],[79,-89],[-108,-200],[-79,-74],[-36,-119],[-97,-104],[-75,-22],[97,-93],[-22,-66],[-137,-117],[-143,38],[-184,2],[33,84],[-133,-81],[-58,38],[151,81],[-39,133],[133,74],[-72,14],[136,177],[180,121],[165,-29],[11,131],[198,101]],[[52641,53853],[-25,-102],[-93,-50],[118,152]],[[51649,53884],[112,-112],[29,-178],[-425,-579],[-21,-88],[-144,-198],[-90,-7],[-198,-369],[-68,5],[-36,-150],[-75,-98],[-7,-112],[-159,-205],[22,-136],[-93,-90],[32,100],[-97,-7],[18,-162],[-184,9],[-89,-43],[-90,-288],[68,-64],[-155,-291],[-337,48],[-87,-26],[-172,71],[-155,131],[-75,260],[25,138],[-61,57],[25,172],[126,128],[50,117],[140,155],[123,83],[154,45],[129,-31],[489,91],[83,50],[47,114],[-198,-47],[-50,-98],[-105,-14],[-122,64],[-219,64],[-90,-21],[86,214],[191,150],[3,110],[382,233],[3,46],[227,133],[309,114],[25,98],[90,24],[39,78],[79,-47],[22,66],[219,112],[-3,65],[258,116]],[[52764,53968],[-83,-110],[32,115],[51,-5]],[[72005,54261],[119,-100],[-90,7],[-29,93]],[[51775,54325],[94,-81],[-26,-69],[54,-126],[-86,2],[-86,-74],[-313,3],[-43,85],[129,91],[18,69],[259,100]],[[52293,54573],[115,-53],[18,-157],[-151,-78],[-43,104],[61,184]],[[51764,54620],[-14,-221],[50,-69],[-90,5],[-82,140],[136,145]],[[51430,54768],[-75,-95],[-141,-38],[26,81],[190,52]],[[52113,54928],[72,-160],[101,114],[25,-50],[-130,-257],[-50,-231],[18,-128],[-57,-15],[-65,96],[0,92],[-101,89],[29,119],[-36,62],[97,66],[-22,74],[119,129]],[[47264,55619],[11,-122],[-158,-212],[-169,-55],[-72,91],[158,83],[-93,53],[172,119],[151,43]],[[67659,55700],[-154,-62],[-47,38],[201,24]],[[53004,56254],[18,-97],[-190,-193],[-72,-31],[-75,-126],[-112,64],[-151,-10],[90,155],[111,100],[101,-12],[187,53],[93,97]],[[48781,56469],[25,-45],[-108,-86],[-7,74],[90,57]],[[48084,56514],[72,-36],[-72,-52],[0,88]],[[49191,56638],[86,-45],[-169,-12],[83,57]],[[47038,56886],[28,-77],[-104,-59],[76,136]],[[53605,57210],[-15,-93],[-133,-7],[148,100]],[[44885,57376],[46,-88],[137,-57],[-11,-119],[-241,-17],[-61,36],[-201,-38],[-50,-95],[97,-60],[-97,-143],[-245,34],[-180,-39],[-107,-109],[39,-250],[-137,-50],[-118,16],[-94,124],[-133,22],[-61,-60],[-57,55],[61,50],[-43,288],[-51,50],[62,107],[151,34],[17,71],[277,-50],[130,12],[100,-52],[101,119],[252,95],[168,-74],[105,19],[21,88],[90,3],[33,78]],[[53468,57419],[-50,-102],[-316,-260],[-155,-190],[-191,-91],[-89,-95],[-230,-119],[-80,2],[133,107],[40,177],[-158,-41],[413,148],[198,167],[165,183],[40,86],[136,-57],[144,85]],[[45158,57503],[36,-55],[-169,-43],[133,98]],[[53734,57626],[-72,-64],[-36,103],[141,45],[-33,-84]],[[49475,57965],[97,-127],[-140,79],[43,48]],[[48946,58232],[61,-89],[205,-62],[126,-4],[58,-93],[-69,-62],[212,-74],[119,-160],[212,-171],[-18,-62],[86,-64],[61,-219],[90,-108],[61,46],[123,-77],[111,41],[320,-5],[119,-100],[68,62],[180,-5],[136,-95],[76,-133],[154,-60],[148,31],[108,-141],[158,-73],[-25,-69],[93,-27],[65,67],[68,-62],[-32,-231],[-123,48],[-50,102],[18,-179],[151,-26],[-93,-231],[-76,-52],[-259,62],[47,188],[-219,-29],[90,-54],[-15,-72],[-133,-14],[-25,-100],[-201,-141],[205,41],[183,107],[219,12],[-3,-119],[-313,-238],[-410,-193],[-147,-31],[-22,-48],[-266,31],[-82,83],[133,62],[14,81],[104,22],[11,71],[-173,38],[-104,-21],[-190,-162],[-90,-112],[-198,-26],[-147,38],[-76,-86],[-280,-167],[-104,-4],[-151,78],[-43,-40],[-259,-5],[-61,-86],[-184,24],[-341,-5],[-58,-50],[-136,43],[-108,-207],[-61,52],[-169,34],[-29,-60],[-172,52],[35,86],[-161,-9],[-227,45],[69,119],[151,-14],[-162,76],[43,210],[129,123],[378,-31],[100,-52],[51,-164],[190,9],[-3,105],[-87,83],[137,22],[126,-79],[136,-19],[123,76],[183,-33],[115,62],[237,21],[7,43],[442,110],[98,117],[-76,76],[173,-19],[-90,69],[-126,9],[-115,-45],[-115,-119],[-68,64],[-83,-93],[-230,-57],[-194,7],[-144,-71],[-165,2],[-76,93],[-11,103],[54,90],[291,164],[202,348],[255,-26],[194,31],[79,100],[162,43],[140,143],[-54,112],[-57,14],[-137,-100],[-111,-7],[-187,-72],[-148,0],[-97,-59],[-100,19],[-162,-91],[-227,12],[-68,-43],[-101,60],[-147,-14],[-129,78],[-47,72],[-61,-93],[-18,86],[-166,-12],[-25,143],[216,2],[25,-52],[277,81],[208,-62],[144,-86],[72,57],[97,-40],[79,42],[-64,79],[-256,91],[-258,162],[-389,-48],[-341,119],[18,138],[197,48],[177,150],[-79,33],[-155,-12],[-54,224],[61,-24],[137,41],[179,-19],[26,78],[151,-33],[89,-59],[-10,247],[169,-26],[21,119],[202,-9],[122,97],[100,-21],[36,48]],[[46739,58534],[108,-45],[-32,-150],[-72,-136],[-273,-312],[-105,98],[15,-134],[-151,-93],[-15,-66],[-111,-5],[0,-62],[-126,26],[-230,-95],[-14,121],[-47,-121],[-108,-43],[11,79],[-172,11],[-69,-157],[-86,-16],[-93,140],[89,22],[126,135],[22,-59],[118,24],[123,212],[115,14],[39,152],[90,7],[190,153],[130,26],[97,136],[194,62],[65,67],[61,-34],[111,43]],[[39198,59380],[183,-60],[-172,-50],[-191,55],[-7,45],[187,10]],[[50564,59561],[266,-105],[172,-36],[-201,-71],[-119,-5],[-190,40],[72,177]],[[39288,59737],[0,-222],[-115,-83],[-205,24],[83,97],[-29,105],[176,19],[90,60]],[[48040,59880],[65,-64],[187,38],[86,-91],[-154,-98],[-65,77],[-61,-53],[-126,81],[83,48],[-15,62]],[[39568,60001],[151,-64],[-90,-74],[-212,19],[25,95],[126,24]],[[39964,60344],[107,-57],[-32,-124],[-93,-19],[-115,65],[-33,109],[166,26]],[[40442,60509],[-40,-103],[-36,93],[76,10]],[[48878,60704],[119,-76],[36,-162],[-18,-257],[-83,7],[18,-77],[-83,-64],[-169,5],[-294,143],[21,164],[137,69],[190,5],[-39,172],[165,71]],[[39622,60749],[302,-50],[-101,-45],[353,-50],[-58,-38],[-172,38],[-108,-100],[208,5],[-21,-77],[-155,3],[-144,-41],[-82,119],[144,39],[-274,66],[112,55],[-4,76]],[[41035,61197],[54,-57],[-101,-22],[47,79]],[[40905,61204],[65,-90],[-119,12],[54,78]],[[41193,61409],[32,-110],[-57,-66],[-230,69],[255,107]],[[40399,61685],[25,-85],[133,-12],[-15,-146],[-154,-52],[136,-91],[123,-11],[165,-67],[-90,-84],[129,-40],[4,-112],[-183,52],[-7,-69],[-108,-31],[3,-102],[-115,17],[76,-84],[-166,-69],[-219,5],[-18,86],[-86,-79],[-162,10],[-226,66],[36,119],[165,65],[65,-36],[50,67],[-83,47],[101,38],[36,129],[-137,57],[87,36],[190,-10],[183,86],[54,146],[-54,140],[62,14]],[[47634,61700],[374,-169],[133,-98],[29,-84],[-183,-30],[-8,-50],[234,-27],[-61,-135],[0,-167],[-68,-95],[-169,-79],[-115,-133],[-169,-10],[-87,100],[-176,50],[-39,176],[-112,10],[-176,140],[-208,98],[-47,57],[93,7],[58,84],[183,93],[61,100],[241,102],[58,-29],[154,89]],[[40783,61714],[112,-95],[-105,-81],[-104,59],[97,117]],[[46480,61795],[151,-55],[-43,-88],[166,-57],[-8,-50],[-222,33],[-90,-12],[-15,98],[-222,0],[3,-36],[-291,-93],[-101,88],[101,74],[234,22],[28,33],[309,43]],[[41495,61969],[57,-7],[-10,-127],[-65,-169],[-68,-40],[-108,45],[21,136],[-57,143],[83,-24],[147,43]],[[48443,62602],[112,-12],[32,-114],[-191,-47],[58,-86],[-191,-57],[-115,71],[-39,107],[223,67],[111,71]],[[50697,63603],[50,-95],[-118,-27],[-22,86],[90,36]],[[49773,63970],[237,-34],[230,-112],[40,-112],[-32,-114],[-187,-74],[-180,3],[-270,262],[47,140],[115,41]],[[46578,64141],[50,-21],[-32,-103],[-162,7],[144,117]],[[50797,64196],[126,-74],[-3,-79],[-155,12],[-50,112],[82,29]],[[42074,64708],[14,-136],[-205,-100],[-104,55],[68,105],[227,76]],[[40927,64718],[-65,-148],[115,59],[144,0],[129,-119],[234,-40],[94,-86],[-8,-107],[173,-74],[0,-45],[162,26],[-97,-129],[-87,-7],[-165,-90],[180,47],[97,-47],[36,-174],[147,21],[43,-69],[-75,-155],[-169,-40],[-151,-129],[61,-105],[-79,-31],[-32,-164],[-148,-36],[-147,41],[7,76],[-270,-55],[97,-28],[144,43],[58,-124],[169,0],[86,-67],[-29,-112],[101,-105],[25,-176],[-140,-107],[-119,0],[-100,57],[3,-95],[-126,-24],[61,-36],[137,38],[280,-57],[47,-105],[183,-54],[-129,-115],[22,-78],[-209,33],[-122,74],[-230,-41],[-245,-12],[-140,17],[-129,86],[11,59],[-87,96],[-50,147],[29,117],[-72,122],[-36,140],[11,205],[-65,17],[11,116],[-133,103],[90,-17],[72,62],[25,314],[100,60],[58,93],[14,269],[-46,195],[-72,124],[-112,110],[133,24],[72,95],[119,-7],[104,124]],[[41513,65323],[115,-36],[0,-81],[-86,17],[-29,100]],[[41240,65425],[54,-31],[-137,-57],[137,-38],[0,59],[140,-16],[126,-162],[79,2],[0,88],[93,-7],[259,-143],[-61,-45],[-137,57],[-7,-62],[144,-62],[-209,0],[-50,-69],[-68,83],[-40,-85],[104,-57],[51,61],[151,-19],[115,-69],[-43,-47],[82,-86],[-143,-38],[-94,16],[-11,-71],[-176,48],[-39,-34],[151,-33],[39,-60],[-169,-47],[-11,64],[-143,76],[-187,-23],[-155,69],[-154,109],[-177,3],[-32,183],[-86,45],[50,117],[-72,2],[22,79],[201,26],[83,145],[144,17],[154,-40],[22,52]],[[41969,65494],[216,-2],[76,-72],[14,-97],[-144,-131],[-97,38],[40,78],[-115,62],[21,65],[133,-31],[-144,90]],[[42275,65494],[93,-17],[-43,-54],[-50,71]],[[41570,65561],[65,-38],[223,-10],[115,-279],[-313,67],[-61,76],[-273,100],[180,-35],[75,38],[-140,74],[129,7]],[[49741,65608],[133,-145],[3,-174],[-104,-209],[-172,-110],[-40,-114],[61,-77],[32,-273],[105,-153],[61,-19],[-15,-105],[-172,-197],[-209,-39],[-104,46],[0,107],[-93,50],[0,159],[50,62],[-68,320],[32,178],[162,224],[233,-52],[44,83],[-123,122],[-18,97],[97,26],[137,-30],[29,100],[-61,123]],[[45578,65694],[65,-124],[-86,-7],[21,131]],[[39399,65754],[-32,-157],[-93,-36],[14,145],[111,48]],[[39108,65778],[40,-84],[-209,-64],[-39,50],[129,14],[79,84]],[[40693,65911],[11,-91],[90,-31],[25,72],[104,26],[194,-136],[-140,-88],[61,-47],[-32,-177],[-108,48],[-25,126],[-212,222],[32,76]],[[40496,66063],[68,-78],[115,16],[18,-76],[-111,-31],[-108,76],[18,93]],[[49888,65589],[-101,60],[44,109],[-72,101],[133,7],[-47,83],[4,152],[140,24],[36,60],[50,-126],[-79,-155],[0,-81],[-76,-234],[-32,0]],[[42318,66523],[111,-55],[-53,-31],[-58,86]],[[42965,66857],[29,-100],[-83,19],[54,81]],[[40744,66926],[118,-34],[-248,-95],[-147,12],[-25,52],[122,-12],[180,77]],[[42052,67161],[-7,-71],[201,-57],[18,-191],[-75,-64],[129,-26],[83,109],[79,-69],[-83,-55],[227,22],[-130,59],[43,50],[76,-42],[50,78],[76,-50],[-76,-74],[148,-35],[64,-96],[-226,-264],[-216,160],[-133,16],[14,-105],[-21,-231],[198,17],[71,50],[83,-21],[-108,-246],[-129,-64],[-180,-10],[-255,46],[-201,-96],[197,27],[263,-46],[36,67],[161,-24],[-28,-117],[46,-16],[-115,-160],[4,-86],[-277,5],[-381,-26],[-205,72],[-143,-67],[-126,16],[-65,101],[61,52],[-208,176],[3,48],[-284,105],[-143,135],[-141,-102],[-136,-50],[-126,45],[-54,110],[-241,86],[-21,61],[-94,-2],[33,119],[75,-86],[86,12],[4,141],[-68,24],[183,69],[39,178],[-18,70],[76,26],[158,-34],[79,29],[65,-74],[111,-2],[54,-122],[230,-2],[22,174],[147,38],[94,76],[14,117],[115,64],[50,-43],[-107,-66],[14,-70],[-97,-78],[21,-48],[284,-45],[-93,95],[140,24],[15,-74],[122,-69],[-104,107],[222,79],[22,67],[151,95],[158,59]],[[43105,67245],[36,-65],[-115,43],[79,22]],[[47494,67252],[108,-69],[133,57],[115,5],[-7,-122],[305,-171],[83,-169],[18,-138],[266,-29],[119,-124],[46,-131],[115,-152],[61,0],[-43,-179],[58,-195],[-18,-258],[-36,-131],[68,-195],[-57,-393],[-209,-145],[-75,19],[-76,-167],[87,31],[21,79],[270,-12],[115,-100],[7,-67],[-83,-131],[-57,-9],[226,-277],[43,62],[54,-57],[-79,-36],[18,-140],[-165,-15],[-184,-133],[29,-21],[227,131],[205,-22],[97,26],[161,-35],[-18,-105],[58,-50],[-241,-134],[22,-85],[327,185],[161,-131],[187,-31],[194,-81],[83,39],[148,-89],[-29,-102],[190,-12],[47,57],[187,91],[36,-34],[176,22],[198,119],[273,38],[176,-43],[-129,-81],[388,41],[147,-67],[-11,-64],[-107,-117],[21,-124],[-36,-107],[-269,-200],[-212,-67],[-126,-76],[-158,-17],[-123,65],[69,-129],[-44,-112],[133,36],[-39,-115],[-108,-150],[-154,-109],[-151,31],[-130,-219],[-65,-17],[-266,-350],[-201,-62],[-32,-64],[-169,0],[-115,-72],[-130,-7],[11,110],[-79,50],[-36,171],[101,122],[57,-12],[90,290],[83,7],[-115,91],[65,100],[154,55],[-36,24],[219,90],[62,98],[100,59],[209,19],[183,74],[97,76],[-201,-76],[-144,24],[43,-48],[-212,-21],[-75,38],[-248,-69],[-144,12],[0,148],[-108,169],[-65,7],[-21,93],[-87,64],[8,-93],[75,-95],[-18,-155],[-140,-67],[11,-76],[-105,-140],[-3,-70],[-101,-133],[-219,74],[65,260],[-87,204],[-79,-57],[-233,100],[7,-145],[-133,-52],[-165,38],[-220,-67],[-79,5],[-428,-86],[47,88],[90,38],[111,129],[-61,109],[-237,-142],[-83,-10],[-129,71],[-144,167],[40,134],[158,-3],[50,48],[18,150],[-100,-138],[-288,-26],[-147,88],[-15,76],[-136,93],[-65,136],[22,66],[-155,31],[-4,200],[220,72],[57,55],[72,-31],[-18,145],[112,-31],[266,-143],[89,-126],[112,-57],[158,21],[-151,24],[-162,176],[-266,169],[4,122],[-58,-81],[-205,-12],[-100,-60],[39,141],[-172,83],[75,81],[-104,48],[22,126],[-58,62],[-18,-107],[-187,-191],[-14,107],[47,122],[-79,69],[-126,-160],[-101,46],[25,-250],[-11,-215],[-111,-36],[-277,153],[-190,67],[-133,-10],[-158,93],[-148,45],[-118,141],[61,40],[-58,150],[-169,143],[-115,-67],[-25,177],[54,16],[-14,139],[104,7],[133,-65],[147,-9],[-147,114],[-40,129],[4,171],[119,98],[111,26],[65,-143],[172,-190],[65,-26],[-4,-96],[97,-12],[29,-83],[158,-122],[79,96],[137,-74],[0,-105],[83,69],[-87,62],[-21,114],[-184,31],[47,31],[-151,355],[133,-2],[130,64],[165,-138],[75,124],[-169,88],[-115,153],[-312,161],[79,60],[36,160],[0,233],[129,-14],[219,-157],[87,-141],[3,-171],[108,-67],[76,31],[255,-131],[287,-269],[123,140],[75,-16],[-154,-246],[107,-119],[-28,157],[97,115],[133,35],[-40,129],[36,45],[119,-66],[54,-162],[169,-48],[10,-105],[47,69],[86,-155],[18,-147],[25,257],[-68,83],[-244,174],[-36,155],[-148,157],[-18,93],[97,-2],[155,212],[-226,-38],[3,216],[-104,162],[-83,67],[-7,91],[129,42],[-25,79],[173,-7],[180,95],[71,112],[-68,93],[18,112]],[[41423,67352],[90,-29],[-43,-71],[50,-50],[-108,-12],[-64,133],[75,29]],[[51125,67502],[-69,-93],[-136,26],[-4,62],[209,5]],[[42246,67516],[119,-76],[-40,-105],[-144,10],[36,-62],[-71,-72],[-159,46],[8,-60],[-184,22],[83,73],[115,179],[237,45]],[[42742,67609],[180,-155],[-162,22],[-93,98],[75,35]],[[42771,67826],[68,-129],[-14,-71],[-169,143],[115,57]],[[41901,67914],[101,-93],[-51,-78],[-215,-55],[-169,98],[43,80],[133,43],[158,5]],[[41639,68081],[79,-41],[-97,-31],[18,72]],[[32868,68281],[79,-71],[25,59],[155,-24],[144,-105],[-151,-19],[-4,-119],[-61,76],[-180,51],[-7,152]],[[32778,68329],[-79,-96],[-83,43],[162,53]],[[52138,68452],[4,-50],[208,-107],[-10,-76],[-105,7],[-133,86],[-25,105],[61,35]],[[33645,68703],[57,-124],[-108,21],[51,103]],[[45233,68722],[281,-53],[111,-147],[-137,-50],[-68,35],[-126,-33],[-151,212],[90,36]],[[53206,68893],[61,-186],[-137,60],[-10,117],[86,9]],[[47451,68934],[54,-93],[-212,83],[158,10]],[[47598,68965],[61,-91],[-115,33],[54,58]],[[43285,69086],[93,-167],[-61,-121],[-100,-72],[-202,127],[-64,-112],[-155,-67],[-43,181],[234,26],[46,129],[69,52],[183,24]],[[43447,69296],[126,-117],[-173,88],[47,29]],[[54759,69327],[133,-41],[-108,-76],[-97,102],[72,15]],[[52936,69484],[86,-98],[-147,-24],[-47,60],[108,62]],[[53989,69732],[51,-117],[-51,-38],[0,155]],[[47045,69801],[54,-72],[-212,5],[-18,52],[176,15]],[[45086,69820],[68,-127],[-79,-66],[-104,116],[115,77]],[[53357,69891],[68,-52],[-111,-50],[43,102]],[[53479,69958],[-40,-136],[-32,50],[72,86]],[[53594,69963],[72,-39],[-36,-80],[129,-20],[-97,-73],[-158,47],[4,117],[86,48]],[[42444,70082],[169,-93],[25,-200],[-79,-19],[-72,59],[-230,38],[-72,141],[259,74]],[[53403,70215],[87,-48],[-58,-95],[-104,19],[-7,67],[82,57]],[[42494,70510],[40,-128],[-126,14],[-18,64],[104,50]],[[46994,70701],[-25,-67],[-133,-4],[158,71]],[[43770,71458],[36,-81],[-90,34],[54,47]],[[44773,71525],[50,-109],[-93,59],[43,50]],[[43975,71632],[115,-90],[-126,-10],[11,100]],[[43853,71749],[36,-69],[-97,0],[61,69]],[[43637,71856],[72,-33],[40,-107],[-130,50],[18,90]],[[44022,72085],[208,-76],[90,-69],[-18,-100],[104,-103],[76,48],[219,-167],[-3,-145],[-133,55],[-223,-22],[-191,24],[-54,112],[108,24],[-115,54],[-54,81],[-47,193],[83,-16],[-50,107]],[[55255,72221],[79,-84],[-87,12],[8,72]],[[55082,73104],[101,-71],[-54,-83],[-165,-10],[-94,33],[65,119],[147,12]],[[48080,74210],[277,-215],[-61,-40],[298,-179],[-79,-100],[18,-126],[165,-105],[-14,-112],[-133,-71],[-36,-108],[-147,-238],[158,-164],[187,-33],[-4,-36],[-205,-17],[-172,-188],[-69,-7],[-86,-198],[-183,-7],[-61,-60],[21,-145],[-111,-26],[-158,21],[-40,-81],[76,-126],[-44,-57],[-136,-2],[-22,-81],[108,-19],[252,-162],[169,71],[100,79],[83,-8],[183,129],[25,72],[263,85],[50,60],[130,-22],[10,-64],[-93,-36],[14,-88],[-111,-109],[68,-41],[-154,-157],[-202,-50],[11,-79],[-140,-62],[-176,-14],[-112,69],[-25,91],[-82,59],[-116,0],[-190,-159],[-122,19],[-4,74],[-144,31],[-89,59],[79,-288],[75,-107],[-36,-127],[33,-135],[-133,-22],[-266,7],[-364,96],[266,-112],[69,14],[50,-76],[-115,-31],[-86,-105],[-187,-17],[-234,-71],[-212,-14],[-478,-62],[36,-17],[313,40],[370,0],[50,46],[309,26],[202,-29],[-36,48],[140,81],[147,7],[94,-140],[-7,-117],[75,-31],[-72,-64],[83,-24],[3,-79],[-68,-78],[-284,9],[151,-57],[263,-14],[-54,-196],[-223,-140],[-65,78],[-176,41],[-90,-76],[-97,107],[-21,-74],[-209,-29],[-162,67],[0,-76],[-129,17],[75,-62],[403,14],[108,-60],[54,-135],[-7,-115],[-119,-35],[3,-172],[-32,-33],[-190,23],[-123,-111],[-46,100],[-115,45],[39,-114],[-11,-124],[-190,19],[-50,-69],[-159,135],[-79,158],[-194,152],[209,-302],[11,-103],[-231,76],[-43,-50],[-147,150],[-25,67],[-194,203],[-22,169],[50,50],[-61,114],[209,274],[61,-7],[79,159],[176,-2],[86,-62],[58,55],[-173,26],[-222,-19],[7,-95],[-198,-122],[-97,-112],[-262,-116],[129,-115],[104,-257],[-25,-64],[104,19],[176,-198],[58,-129],[-169,10],[11,-50],[176,-98],[36,-109],[-29,-72],[-467,53],[-205,90],[-130,-28],[40,-110],[-97,43],[-72,-38],[54,-110],[158,19],[68,-45],[112,-200],[36,28],[75,-147],[-57,-43],[-137,-5],[-215,74],[97,-167],[-274,-74],[0,100],[-115,151],[-28,-62],[79,-60],[-54,-119],[-68,79],[-44,-86],[29,-117],[-101,53],[-82,-20],[86,-142],[-158,-29],[-108,74],[86,-157],[-266,-72],[-25,-145],[-122,-24],[-86,62],[72,-129],[-259,224],[-90,12],[-79,112],[-216,143],[-126,191],[-222,69],[-101,178],[154,48],[191,-74],[43,-71],[183,33],[187,83],[79,77],[58,178],[86,-36],[288,74],[118,-52],[79,43],[-345,138],[130,133],[126,69],[237,-31],[54,-50],[161,-14],[33,50],[201,-36],[-287,134],[-47,74],[176,28],[-61,36],[-428,31],[90,93],[-155,-60],[-118,79],[-79,-12],[-255,98],[-54,-69],[-101,0],[-395,131],[-15,169],[-65,74],[-100,-86],[-47,31],[61,81],[79,12],[51,169],[75,2],[144,-81],[54,136],[366,143],[137,-14],[147,66],[-248,-14],[-377,-122],[-140,62],[-11,55],[266,64],[-244,5],[32,72],[198,64],[-29,81],[-212,-105],[0,-59],[-144,14],[-97,52],[-36,229],[-65,41],[22,85],[-165,115],[39,140],[79,-2],[176,214],[-115,124],[40,60],[140,40],[-7,-45],[223,-15],[-26,-52],[159,81],[25,62],[-115,-52],[-169,57],[126,331],[154,90],[-7,-88],[165,7],[151,-126],[61,-5],[-3,117],[83,12],[89,-145],[169,-3],[36,-112],[-230,0],[-11,-76],[83,-48],[237,-9],[69,-150],[-26,-129],[87,-238],[100,-93],[-32,122],[-93,121],[-40,143],[22,88],[86,14],[-65,60],[76,76],[248,117],[338,-83],[125,-58],[69,34],[93,-131],[79,90],[-126,-4],[18,76],[-125,-3],[-8,186],[-115,172],[-86,-7],[-198,331],[187,35],[-219,12],[-32,34],[158,76],[54,128],[165,24],[112,-28],[10,64],[137,57],[140,122],[237,66],[25,67],[137,38],[58,-90],[118,73],[83,-11],[187,116],[205,7],[-15,46],[169,205],[162,38],[50,71],[227,103],[151,150],[215,107],[126,12],[162,78],[144,162],[205,19],[61,81],[129,48],[-79,126],[151,72]],[[60197,74398],[-61,-103],[-58,69],[119,34]],[[60402,74584],[162,-5],[28,-57],[-75,-72],[-147,100],[32,34]],[[58382,74653],[21,-34],[-147,-35],[126,69]],[[56976,50288],[162,133],[29,183],[-104,296],[-108,121],[-7,551],[-65,83],[122,126],[-18,100],[51,41],[-33,181],[327,124],[90,62],[86,-50],[79,54],[195,-59],[111,-96],[129,-9],[338,-98],[284,-9],[342,-74],[287,-7],[94,28],[-36,55],[-130,3],[-151,50],[-456,109],[-115,72],[-101,-19],[-100,111],[-115,-33],[-29,48],[129,38],[-79,48],[-25,85],[-129,69],[-259,58],[-155,85],[-14,76],[-212,227],[0,86],[-97,140],[-33,-171],[112,-227],[100,-147],[90,-15],[29,-95],[133,-10],[14,-119],[-226,-42],[-223,7],[-104,50],[0,102],[-104,122],[3,190],[-90,112],[284,569],[90,34],[76,176],[194,250],[79,133],[144,86],[7,72],[-191,-100],[-320,-441],[-10,-124],[-166,-126],[-36,-93],[-154,21],[-61,189],[57,150],[-122,235],[-90,-38],[108,-157],[-54,-176],[-4,-136],[205,-140],[22,-69],[-140,-232],[-105,-81],[87,-264],[-25,-79],[54,-128],[-44,-110],[-258,107],[-133,-42],[57,-58],[140,-14],[148,-90],[-8,-100],[-158,-150],[-18,-112],[-79,-167],[-7,-100],[-169,-196],[-25,-126],[-388,57],[-108,520],[-83,207],[-244,176],[-40,141],[-93,150],[-11,-86],[72,-210],[151,-145],[83,-148],[53,-276],[-28,-71],[-223,40],[-212,164],[-212,134],[-79,81],[25,78],[-51,208],[-53,-322],[50,-40],[-83,-181],[-61,0],[-151,-119],[-7,-79],[226,-312],[-10,-114],[50,-98],[-104,-50],[-65,100],[-155,24],[-50,102],[-97,-50],[-111,24],[10,55],[-165,-26],[-18,150],[-68,121],[-133,22],[-25,128],[50,326],[86,158],[-108,69],[51,159],[-15,103],[87,97],[86,31],[86,100],[50,172],[180,233],[313,227],[83,257],[151,78],[186,15],[338,157],[130,98],[-29,71],[151,272],[183,133],[309,102],[385,260],[-36,31],[-101,-86],[-319,-143],[-331,-71],[-40,112],[-226,-241],[-47,-124],[-57,-21],[-8,-141],[-89,-150],[-155,-95],[-349,-81],[-255,-164],[-115,-131],[-11,-138],[-172,-69],[-94,-208],[-100,-59],[-65,90],[-79,-14],[61,-81],[-79,-36],[3,-190],[-50,-81],[-129,5],[-97,-151],[-180,3],[-129,52],[-15,203],[-75,-3],[-54,-243],[39,-214],[-36,-69],[36,-114],[105,-105],[61,-438],[147,-215],[-54,-40],[126,-31],[187,-241],[154,-131],[115,-293],[-14,-107],[-75,-86],[-162,-14],[-266,-95],[-97,-119],[-86,-43],[-162,-184],[11,-124],[-148,-355],[-86,-83],[39,-81],[4,-260],[108,-121],[7,-124],[-72,-35],[-11,80],[-107,-23],[-40,-301],[22,-128],[-79,-10],[-4,-97],[-72,-162],[18,-96],[-75,-28],[-144,-138],[-18,-200],[-148,-143],[-208,9],[126,-117],[223,34],[25,-93],[111,-98],[76,-202],[-22,-100],[-277,-322],[-97,-26],[-161,-110],[-266,-4],[-69,31],[-226,-29],[-219,-129],[-259,-23],[-230,78],[-40,126],[47,212],[-50,89],[3,154],[40,31],[0,191],[284,195],[3,93],[101,-17],[111,58],[54,304],[-11,382],[18,147],[54,74],[-14,138],[-76,219],[148,84],[50,86],[50,233],[40,64],[0,162],[58,134],[-87,145],[266,121],[335,432],[82,159],[115,7],[234,146],[47,85],[201,84],[54,152],[118,134],[62,185],[-130,-200],[-50,12],[-76,-138],[-90,-33],[-165,-189],[-108,-78],[-341,-172],[-155,-52],[-39,176],[68,115],[-187,-62],[-176,121],[-32,124],[46,86],[4,190],[295,391],[-25,29],[118,166],[122,38],[83,134],[-54,21],[-180,-78],[-244,-222],[-76,-5],[-115,-135],[-97,192],[159,336],[165,138],[129,153],[33,86],[136,152],[148,57],[61,115],[-194,-139],[-36,27],[201,200],[-191,-127],[-133,-19],[22,-78],[-101,-98],[-54,-114],[-129,-53],[104,162],[18,84],[-169,-250],[94,-29],[-209,-214],[36,-74],[-104,-129],[-108,48],[51,126],[133,114],[-133,-45],[-72,-95],[32,150],[158,169],[-14,45],[197,260],[-53,38],[176,26],[-61,74],[82,131],[104,93],[213,250],[230,-33],[-11,-67],[136,141],[-57,59],[-108,-26],[40,71],[-126,5],[39,122],[202,295],[82,86],[-14,52],[122,88],[-154,27],[-148,-148],[-201,-126],[-11,-86],[-158,-136],[-61,12],[169,191],[-90,-39],[54,153],[147,236],[155,162],[-7,147],[-108,65],[147,12],[126,83],[72,-24],[75,91],[97,-19],[-133,126],[-79,-88],[-280,9],[-129,-102],[-98,5],[8,135],[97,172],[-76,-22],[11,162],[-122,-54],[68,-131],[-86,-29],[-65,-100],[-75,43],[-11,183],[-126,45],[90,134],[151,90],[129,-40],[43,93],[69,-10],[140,160],[122,33],[169,-59],[76,74],[186,11],[180,79],[-25,50],[-205,-112],[-119,24],[-132,-107],[-123,138],[90,136],[-36,19],[90,126],[266,200],[-61,38],[25,112],[230,167],[11,-43],[190,48],[320,-3],[97,45],[130,-81],[82,62],[202,-59],[115,62],[180,-179],[75,69],[252,31],[118,72],[94,126],[133,40],[-47,55],[129,88],[36,91],[123,121],[21,115],[68,43],[76,154],[-18,55],[-201,-333],[-166,-158],[-129,-14],[-68,-155],[-148,-209],[-295,-105],[-158,140],[-169,-26],[-244,26],[-126,67],[-144,-9],[-50,-105],[-234,9],[36,131],[-64,134],[-108,55],[-130,-146],[-75,-40],[25,114],[-126,-62],[248,346],[212,42],[11,-88],[90,-47],[313,76],[208,124],[86,114],[119,-26],[183,62],[-14,57],[-237,-88],[-97,28],[-162,-42],[-65,-79],[-208,-110],[-94,0],[-104,172],[-111,-41],[64,84],[-100,-12],[93,116],[104,67],[177,286],[284,179],[133,124],[-15,78],[-158,7],[151,124],[162,74],[154,-2],[191,138],[248,19],[226,-98],[119,43],[129,-7],[36,83],[363,105],[-172,-2],[-439,-138],[-126,-3],[-28,50],[-105,-19],[0,81],[-395,26],[108,229],[244,205],[133,147],[40,89],[151,128],[111,136],[148,110],[0,90],[-123,57],[-161,-28],[-123,50],[-57,69],[-223,26],[-367,-14],[-424,47],[-14,-40],[158,-62],[147,0],[194,-41],[489,36],[194,-86],[180,-28],[-3,-64],[-184,-165],[-18,-52],[-435,-310],[-68,-5],[11,-109],[-155,-117],[-14,-64],[90,-81],[-216,-81],[-79,-93],[-18,93],[-79,9],[-108,-121],[-216,-115],[-100,-169],[-281,-195],[-46,41],[-148,-86],[-187,-191],[-345,19],[40,-45],[158,-40],[-144,-179],[-43,-95],[-241,-260],[-338,-210],[-71,-7],[-177,-95],[-237,-95],[-57,126],[-238,43],[-79,66],[-54,-57],[-147,136],[-68,-17],[-288,55],[-82,41],[-202,21],[-47,48],[-150,-3],[-364,279],[-82,107],[-25,100],[-176,150],[0,212],[208,-2],[187,52],[39,-33],[141,45],[-209,0],[36,103],[101,4],[205,-145],[-8,79],[97,78],[72,-81],[-140,-102],[0,-74],[94,7],[316,-119],[-133,86],[-155,43],[-43,86],[140,76],[126,-7],[202,126],[122,45],[72,84],[197,92],[162,-33],[112,-131],[136,10],[76,-50],[409,-3],[40,41],[392,16],[3,34],[-169,26],[-169,-26],[-147,12],[-97,-43],[-219,-31],[18,43],[-137,28],[-61,86],[-162,95],[-82,12],[-310,-47],[-212,-177],[-179,-107],[-144,69],[-144,-55],[-280,10],[-7,59],[-123,34],[-158,-48],[-61,-64],[-133,81],[-190,-24],[-130,110],[-144,-24],[-75,26],[-165,-45],[-44,74],[-125,-110],[-327,31],[-209,136],[-43,62],[-7,152],[93,0],[22,72],[172,23],[-57,124],[151,-7],[147,81],[162,29],[399,-41],[-22,36],[302,9],[4,58],[208,-29],[83,45],[7,81],[162,-59],[68,-91],[180,-136],[119,108],[111,-62],[-43,-93],[61,-24],[144,81],[-284,117],[-36,69],[43,100],[97,-15],[115,-76],[119,29],[43,-60],[43,129],[122,-14],[68,64],[126,-72],[133,8],[-521,171],[-212,57],[39,157],[72,43],[216,-33],[58,67],[86,-17],[277,107],[43,-36],[165,-7],[61,36],[18,110],[83,66],[144,27],[-112,66],[-165,-143],[-25,-100],[-137,-16],[-111,78],[-205,5],[14,64],[259,155],[129,5],[-72,95],[-399,-43],[-143,-55],[-40,34],[-140,-69],[-86,31],[-169,-86],[-212,57],[-18,95],[172,39],[79,78],[40,-57],[180,0],[3,112],[-144,-17],[-68,110],[130,50],[3,102],[122,231],[140,-38],[-35,93],[-105,-24],[4,167],[75,29],[11,128],[137,48],[528,33],[112,-224],[136,-43],[72,-66],[227,-36],[172,14],[47,53],[183,-10],[90,38],[359,91],[-133,43],[-262,-79],[-75,0],[-230,-86],[-112,27],[-32,59],[-97,0],[-144,143],[-43,98],[100,52],[-125,107],[-137,10],[-151,-53],[-7,-45],[-140,43],[-36,143],[-130,-53],[-100,139],[61,100],[183,150],[187,74],[54,169],[305,14],[137,64],[129,-38],[274,-28],[172,-208],[306,-97],[46,119],[115,-5],[274,71],[262,41],[-101,40],[-348,-85],[-148,-3],[-90,-40],[-230,100],[-50,176],[-108,-12],[-46,74],[-223,55],[-273,-31],[-119,45],[-65,74],[7,102],[-72,-21],[116,133],[248,136],[115,141],[-44,76],[-161,40],[7,72],[126,131],[172,24],[557,138],[248,-262],[259,-148],[65,-64],[108,90],[129,43],[-298,50],[-108,43],[-129,136],[-137,62],[-97,88],[7,60],[187,131],[-7,73],[104,48],[187,12],[-147,31],[-155,-88],[14,-46],[-233,-166],[-166,-34],[-68,27],[-79,-55],[-147,-22],[0,55],[-155,-24],[-57,60],[-141,38],[-147,-48],[-453,-2],[130,48],[-47,104],[61,158],[111,14],[40,81],[83,12],[-11,114],[172,-7],[97,52],[-7,-64],[201,-7],[162,45],[65,88],[269,-16],[205,109],[79,88],[137,62],[115,181],[94,91],[-137,40],[-137,-147],[-93,-34],[-352,-343],[-173,12],[-137,-35],[-86,30],[51,48],[-173,5],[-50,95],[284,124],[-119,93],[0,109],[-72,-140],[-100,-62],[-141,-29],[-176,-78],[-223,-181],[-133,-50],[-262,-41],[-119,96],[-32,114],[-86,-76],[-43,138],[43,200],[86,-19],[-111,114],[17,119],[105,93],[-58,53],[-223,-17],[-61,48],[-21,131],[-69,123],[15,215],[108,217],[0,190],[104,107],[-29,124],[104,5],[108,76],[68,-88],[112,-7],[90,-126],[237,-108],[119,-26],[25,107],[72,-69],[-15,-133],[180,-60],[144,-135],[32,14],[-93,248],[194,-65],[-7,-93],[68,-9],[79,124],[72,-41],[234,60],[168,-74],[90,7],[18,167],[-208,38],[-97,-12],[-216,31],[-86,-33],[-158,23],[7,-47],[-209,5],[-219,95],[-7,88],[137,-26],[-29,74],[-130,7],[-154,69],[-47,86],[18,90],[-137,143],[-125,83],[-169,67],[-119,-19],[-4,83],[213,322],[-26,95],[115,3],[83,83],[320,5],[-25,-67],[223,-62],[-51,62],[90,2],[-39,91],[-72,-7],[25,102],[-65,74],[-417,12],[-126,100],[-208,52],[40,86],[-22,98],[54,102],[3,112],[-75,181],[29,196],[-40,114],[47,81],[187,-26],[108,93],[143,-38],[101,52],[252,-31],[-40,-214],[54,-69],[140,-74],[-28,-231],[302,-284],[115,5],[25,64],[-162,112],[75,72],[44,-72],[165,26],[-18,67],[-104,19],[82,114],[4,220],[-104,14],[-4,67],[-219,66],[-137,184],[79,43],[-75,38],[122,224],[97,85],[122,12],[173,-90],[90,38],[72,-84],[3,-223],[86,-134],[320,-55],[112,-66],[115,-12],[-7,150],[75,78],[61,198],[72,62],[457,-186],[107,-85],[62,-103],[212,-78],[201,-24],[22,-36],[204,-55],[18,57],[-107,43],[-8,79],[-79,43],[-298,50],[-97,57],[-43,119],[-108,93],[-306,28],[-136,153],[64,55],[169,-26],[-14,57],[97,14],[14,-100],[256,-138],[172,-3],[191,60],[287,-76],[230,-191],[202,-102],[187,-38],[133,-236],[154,-198],[61,69],[-61,67],[-39,138],[-119,155],[-126,76],[-104,17],[-112,136],[-93,-29],[-79,121],[-101,27],[-179,147],[158,24],[-4,55],[126,36],[-29,85],[-72,-54],[-7,112],[-198,2],[-97,36],[-43,76],[-259,55],[-133,2],[-7,107],[-136,138],[-166,5],[33,117],[-115,90],[-123,-19],[-204,29],[-33,79],[79,85],[-183,76],[-112,151],[65,19],[-36,81],[108,138],[101,5],[144,-81],[129,-134],[75,-24],[44,-147],[46,-22],[11,176],[147,-19],[29,-66],[155,-34],[136,186],[-18,229],[-125,62],[244,16],[-133,27],[-97,107],[248,2],[50,81],[-277,17],[-93,45],[22,188],[-162,29],[-72,74],[22,90],[-101,10],[-43,140],[-151,117],[-126,33],[61,179],[147,88],[22,-93],[183,-26],[8,-67],[100,-14],[122,-117],[54,53],[306,140],[-158,0],[-40,60],[86,97],[65,-59],[115,0],[7,-57],[166,7],[72,-79],[158,43],[18,-102],[57,162],[72,-43],[137,59],[14,60],[165,14],[15,-47],[316,-148],[180,29],[-94,76],[-262,33],[-198,133],[-176,22],[72,95],[-129,67],[68,88],[-108,-21],[-3,62],[133,38],[-252,-19],[21,159],[-115,122],[15,40],[165,-7],[-93,52],[54,119],[125,108],[-118,9],[104,48],[-18,105],[144,64],[25,-67],[140,-57],[68,22],[195,-86],[-8,-41],[141,-16],[54,71],[-184,24],[-25,98],[119,59],[-101,2],[-61,-100],[-241,67],[4,74],[194,-17],[-162,67],[-50,-24],[-79,81],[100,41],[176,131],[306,-12],[208,-129],[54,48],[-136,36],[-36,66],[-374,34],[75,54],[-151,65],[15,76],[-126,12],[-180,-74],[-39,38],[147,36],[-50,69],[39,181],[76,157],[104,91],[187,-19],[79,40],[119,245],[72,72],[39,345],[68,84],[335,-134],[187,24],[330,-21],[169,-105],[162,-34],[47,-57],[-33,-155],[69,-152],[100,-41],[11,-59],[-180,-119],[54,-53],[194,150],[26,103],[-169,74],[61,147],[179,-9],[11,59],[-183,148],[176,41],[22,-143],[136,-34],[15,-135],[97,14],[136,-41],[11,-88],[155,-12],[-8,-35],[173,19],[14,-165],[-205,-150],[11,-35],[-205,-141],[-97,-169],[-100,-100],[-47,-105],[97,-24],[68,134],[169,52],[22,67],[197,43],[26,202],[133,129],[172,4],[119,103],[-61,181],[32,136],[119,88],[61,-43],[194,48],[295,-53],[36,-69],[348,-95],[90,-184],[-47,-52],[144,-67],[-104,-107],[-151,-64],[-50,-67],[21,-88],[-57,-55],[-97,-281],[190,181],[22,64],[118,67],[-79,107],[115,12],[234,181],[162,179],[93,43],[270,24],[230,-62],[36,-129],[118,26],[83,-33],[-90,114],[29,29],[154,-43],[18,174],[238,-62],[104,21],[65,150],[115,-16],[115,50],[136,-98],[68,12],[80,-69],[-15,102],[148,74],[-29,53],[75,119],[122,9],[47,67],[72,-303],[126,39],[133,-5],[79,40],[47,-59],[68,54],[165,-126],[79,79],[209,-36],[137,38],[154,3],[119,40],[61,-76],[86,-14],[25,97],[223,84],[191,143],[176,71],[190,129],[94,-72],[381,29],[151,38],[147,-7],[-79,-160],[230,-48],[173,98],[190,22],[180,-15],[43,-50],[180,-19],[118,-76],[87,21],[104,124],[-22,65],[-154,33],[-266,150],[50,186],[187,93],[151,-72],[65,-140],[316,-17],[144,76],[136,3],[176,-38],[29,47],[205,38],[104,-71],[65,-115],[158,8],[227,59],[262,-12],[54,24],[194,-31],[-90,-117],[18,-171],[-68,-124],[-169,-31],[79,-105],[-47,-143],[-151,-164],[-201,-119],[-76,-172],[40,-212],[133,-102],[363,50],[-36,-326],[-194,2],[108,-79],[-90,-116],[-29,-124],[-79,-81],[-43,-210],[-165,-119],[-69,-12],[-136,-133],[-115,-67],[-191,-195],[-226,-93],[-288,-33],[-43,-48],[-219,-33],[25,-34],[-298,-71],[-101,-67],[-180,-181],[-68,5],[-68,-136],[-126,-93],[-133,-209],[-50,-19],[-137,-167],[-259,-117],[-158,-129],[-277,-104],[-104,-110],[-165,-38],[-227,-183],[-298,-141],[-43,-69],[-130,-50],[-136,14],[-133,-59],[-69,-115],[-115,-40],[-75,-269],[-169,-48],[-129,-126],[-284,-38],[-105,-60],[-133,-14],[-93,-57],[-129,-291],[-155,-5],[108,134],[-227,-38],[-61,76],[-136,45],[-18,-67],[75,-112],[234,-61],[169,14],[104,-255],[-140,-103],[11,-266],[-195,71],[-312,-36],[-119,-88],[-234,5],[-32,43],[-158,7],[-237,112],[-399,-29],[21,-66],[-147,0],[-101,102],[-183,62],[-176,224],[-223,69],[111,-126],[115,17],[90,-112],[-68,-31],[29,-74],[244,-126],[83,9],[18,-81],[133,26],[93,-47],[90,52],[388,48],[15,-79],[72,10],[89,-177],[116,-40],[186,5],[-115,114],[148,-76],[230,-46],[190,-123],[162,64],[370,200],[166,-29],[57,-66],[79,28],[112,-69],[-54,-57],[126,-17],[194,31],[208,91],[-3,43],[168,205],[198,28],[-57,-178],[-342,-382],[-280,-266],[-263,-177],[15,-59],[-97,-145],[-309,-296],[-191,17],[-86,-24],[-97,64],[65,177],[93,62],[-32,100],[-141,-17],[-61,-53],[-161,12],[-220,-112],[-43,-61],[-363,-227],[-237,62],[-223,-45],[-144,-79],[-129,36],[-122,-74],[18,-126],[-259,-88],[-291,-246],[-191,-114],[47,-114],[-104,-76],[79,-19],[269,159],[324,288],[201,100],[270,179],[197,62],[338,7],[7,-150],[475,60],[349,171],[71,-43],[198,-12],[-54,-85],[-158,-86],[-496,-450],[-61,-150],[108,-129],[-245,52],[-237,-109],[-25,-112],[-72,-67],[-367,53],[148,-81],[115,16],[47,-76],[-105,-150],[-68,-21],[-90,-124],[-230,35],[-273,-23],[-205,21],[-79,52],[-191,3],[-197,-74],[259,-193],[319,43],[274,-26],[424,128],[205,-105],[133,46],[118,105],[-3,138],[104,-26],[90,30],[108,153],[334,148],[75,128],[-125,112],[-123,0],[123,91],[276,12],[29,59],[360,-102],[276,-31],[295,40],[342,115],[201,145],[-65,19],[-194,-114],[32,64],[126,64],[122,12],[231,110],[-11,-57],[294,145],[-21,81],[367,47],[176,-71],[-40,-95],[-133,-41],[414,-38],[-4,83],[-252,167],[281,-21],[309,16],[219,127],[54,126],[-75,74],[262,21],[137,67],[176,14],[161,57],[256,41],[273,-33],[172,38],[-14,-77],[212,-85],[482,-160],[377,-98],[140,-14],[317,-78],[172,-12],[234,112],[312,83],[69,93],[313,64],[158,10],[39,-81],[108,-31],[219,64],[144,-67],[151,-21],[0,-88],[241,95],[183,-64],[69,50],[158,-17],[25,-43],[291,0],[97,-36],[79,29],[115,-98],[212,5],[58,-52],[97,71],[313,-28],[251,14],[155,-19],[165,55],[65,-46],[158,65],[3,90],[159,62],[262,-140],[97,26],[216,-29],[111,-55],[108,12],[374,229],[61,-31],[180,31],[287,-69],[108,48],[147,-12],[-14,-115],[302,-81],[75,72],[177,-81],[-18,-45],[111,-91],[79,-148],[183,-140],[234,-88],[-25,-222],[47,-159],[133,-98],[-40,-236],[72,-121],[187,-77],[-4,-47],[-122,14],[25,-121],[-82,-48],[143,-86],[-50,-114],[-226,-207],[-11,-103],[-137,-128],[-72,33],[-93,-79],[7,-133],[-140,-119],[-187,-105],[-47,-79],[-341,-245],[-104,-133],[-349,-562],[-90,-191],[-101,-276],[-39,-196],[47,-181],[161,-35],[-79,-48],[72,-50],[-147,-267],[-144,-186],[7,-73],[-190,-170],[7,-38],[-259,-221],[-4,-72],[-97,-116],[-39,-153],[-162,-95],[76,-219],[-33,-67],[29,-205],[-151,-200],[36,-26],[-86,-129],[-198,-200],[-115,-28],[-4,-115],[-82,-16],[-105,-160],[-129,-117],[-208,-64],[-119,-112],[-165,0],[-169,-164],[-130,-305],[-21,-107],[-94,-31],[-86,33],[14,112],[-255,26],[-97,-152],[94,-55],[215,9],[18,51],[101,-36],[187,7],[-76,-191],[-219,-71],[-122,-79],[-61,-100],[18,-152],[176,-65],[-94,-154],[-122,-103],[-162,-247],[-122,-67],[-83,2],[-125,-74],[-101,0],[-155,-121],[-43,-88],[-129,-50],[-108,-100],[-237,-84],[-108,-226],[-65,-71],[-122,19],[-216,102],[-287,-21],[-270,-112],[-108,47],[-291,-24],[-320,-123],[-377,-3],[-65,62],[-43,-47],[-144,-15],[-136,-121],[-122,-48],[-349,-314],[-205,-146],[-191,-88],[-147,-4],[-169,-84],[0,-45],[277,12],[270,88],[111,69],[554,188],[334,138],[43,57],[305,34],[166,100],[133,40],[54,86],[100,43],[256,10],[219,-110],[219,50],[76,-29],[-22,-278],[-40,-181],[-79,-98],[-183,-76],[-198,-10],[-36,-50],[162,10],[148,-84],[89,29],[40,93],[65,-50],[50,-155],[90,7],[75,-95],[194,-2],[65,-39],[360,-23],[147,-50],[144,-181],[165,-86],[97,-5],[83,-83],[-104,-124],[-108,-22],[-227,-193],[-129,-50],[-94,-92],[-266,-98],[-89,-5],[-399,-169],[-65,-64],[-76,57],[-82,-57],[-209,33],[7,64],[-165,110],[-273,40],[-140,-19],[-176,-93],[-209,-209],[-118,-74],[-62,17],[-129,-93],[-122,-153],[-69,5],[-248,-179],[-82,0],[-86,-138],[7,-164],[-90,-176],[-270,9],[-151,-90],[-61,64],[-233,-40],[-187,-131],[0,-55],[-115,40],[-137,-105],[-173,15],[-68,-53],[-7,-131],[-86,10],[-87,76],[-460,143],[-129,2],[-43,46],[-216,2],[-190,160],[-90,-103],[-133,0],[-25,69],[-155,-2],[-172,-67],[-220,41],[-154,126],[-58,-19],[25,-265],[133,-59],[105,98],[64,-12],[-7,-124],[126,-57],[180,0],[176,50],[187,-17],[79,-52],[305,-70],[94,-52],[176,17],[284,-60],[291,-28],[241,97],[212,-155],[356,-35],[75,40],[309,-31],[194,29],[119,-22],[245,-202],[136,-69],[209,-38],[54,62],[248,-8],[183,55],[111,105],[356,36],[133,86],[79,138],[-64,74],[140,42],[122,-14],[-115,141],[72,93],[104,-8],[187,215],[187,28],[226,-62],[29,27],[316,-41],[130,45],[154,-28],[51,-45],[161,-27],[94,-85],[-18,-72],[180,-95],[-40,-55],[122,-38],[97,-76],[191,43],[118,-69],[184,-17],[93,-86],[137,10],[32,-77],[255,-85],[8,-84],[165,-114],[230,-83],[36,-55],[194,5],[151,-48],[140,-7],[212,69],[317,-136],[248,-5],[57,-71],[-43,-133],[61,-70],[277,-73],[57,-60],[26,-221],[97,-55],[0,-57],[258,-324],[58,-22],[97,-176],[-104,-41],[284,-231],[3,-28],[331,-253],[140,-62],[101,-121],[100,-234],[108,-116],[176,-69],[83,33],[83,157],[39,-128],[115,-150],[-82,-86],[54,-76],[169,114],[319,-105],[162,-167],[187,-71],[-47,-50],[151,-198],[-104,-83],[126,-150],[21,-196],[159,-78],[-4,-441],[90,-69],[-4,-207],[-82,-31],[-112,-160],[47,-202],[129,-193],[76,-14],[126,-127],[-130,-274],[-7,-128],[72,-188],[86,-119],[86,-48],[58,-181],[144,-133],[21,-103],[-97,-38],[7,-57],[-107,-110],[100,-178],[112,-100],[28,-86],[-25,-136],[130,-152],[50,-5],[111,-131],[0,-122],[141,-126],[25,-143],[72,-69],[-94,-74],[166,-116],[154,-60],[-3,-57],[136,-67],[47,-136],[-97,-154],[50,-208],[58,-64],[-61,-71],[115,-422],[115,-103],[32,-157],[57,-78],[11,-231],[83,-162],[180,-150],[183,-215],[101,-66],[316,-141],[-140,-48],[-7,-59],[107,-246],[87,-90],[-8,-112],[-118,-2],[-79,-93],[187,-3],[125,62],[98,-7],[-11,98],[97,-74],[233,-88],[227,-31],[39,-64],[284,-131],[209,-60],[172,21],[115,-19],[173,-128],[302,-3],[280,-109],[234,-17],[68,-112],[69,-9],[32,-115],[72,-21],[151,57],[122,-107],[83,-14],[46,-120],[101,-64],[205,-55],[140,-7],[201,-74],[101,-133],[241,-167],[-68,-178],[50,-86],[158,-81],[50,9],[184,-152],[158,-279],[147,-214],[-32,-81],[72,-219],[54,-79],[115,-31],[-87,-45],[8,-62],[201,-171],[72,-103],[104,22],[169,-120],[352,-116],[-133,9],[-47,-138],[54,-131],[76,-76],[269,-153],[346,-62],[244,-128],[194,-38],[133,-79],[40,-81],[-187,-88],[-223,0],[-194,-48],[-119,-152],[-72,-22],[-75,-114],[-33,-140],[-7,-241],[22,-126],[208,-527],[130,-231],[28,-121],[191,-291],[331,-364],[111,-153],[464,-514],[190,-188],[22,-57],[338,-336],[165,-205],[115,-274],[40,-195],[-44,-72],[-176,-152],[205,221],[-36,96],[-219,157],[-262,107],[-223,33],[-266,-57],[-288,-100],[-198,19],[-161,45],[-374,298],[-32,72],[-356,242],[-112,210],[-201,72],[-155,14],[-212,-38],[-388,-129],[-366,-81],[-195,31],[-284,-57],[-183,-17],[-241,155],[-108,31],[-222,-17],[-227,-66],[-165,-224],[25,-110],[43,143],[453,138],[75,-9],[87,-98],[230,-162],[126,-40],[197,9],[245,165],[345,-8],[747,143],[115,-21],[389,-498],[147,-145],[334,-191],[360,-283],[108,-41],[107,53],[76,-91],[115,-52],[316,-327],[4,-78],[108,-76],[147,26],[83,-46],[86,-126],[180,-59],[29,28],[129,-105],[122,-7],[112,-159],[28,-129],[162,-205],[79,-14],[25,-164],[94,-162],[86,-88],[183,-298],[65,-162],[212,-324],[148,-336],[7,-150],[57,-107],[51,-215],[-44,-216],[-7,-258],[-72,-290],[-276,-86],[-187,-176],[-209,-115],[-72,-81],[-323,-190],[-36,-69],[-245,-186],[-86,-93],[-21,-128],[-62,-17],[-147,-253],[-280,-226],[219,155],[4,-153],[154,-83],[162,38],[162,-164],[219,-55],[21,-119],[274,-324],[122,7],[158,-47],[108,30],[302,-23],[-47,-24],[180,-100],[262,226],[119,74],[194,50],[47,105],[-15,147],[169,279],[104,350],[263,229],[388,7],[280,-17],[216,41],[68,-50],[26,105],[-133,-38],[-15,57],[212,7],[352,-60],[40,-35],[144,31],[169,-36],[298,-14],[-43,-65],[79,-28],[94,119],[97,2],[0,-62],[194,12],[165,-78],[589,33],[-71,31],[-220,-7],[87,71],[373,-112],[547,-131],[481,-33],[231,-29],[337,-74],[281,-114],[140,-100],[399,-200],[385,-307],[215,-124],[550,-388],[263,-210],[255,-255],[93,-121],[51,-162],[186,-443],[69,-227],[-58,-321],[15,-138],[-40,-15],[7,-155],[198,-612],[-86,-78],[-119,-246],[-21,-195],[25,-57],[-36,-155],[-227,-367],[-28,-145],[-98,-181],[-140,-107],[-118,-210],[-22,-291],[-47,-335],[8,-148],[-115,-236],[-141,-581],[-32,-57],[-543,-219],[-140,-81],[-194,-205],[-54,-150],[-140,-124],[-126,-64],[-36,112],[-158,83],[-29,136],[-100,50],[50,59],[-50,95],[-4,129],[-129,79],[-40,126],[-29,-79],[144,-164],[-14,-67],[97,-78],[-47,-107],[104,-70],[40,-147],[100,-38],[72,-172],[-122,-143],[-180,-76],[-161,-198],[-18,177],[-184,104],[-39,77],[18,159],[-432,119],[-183,74],[-219,181],[82,-150],[281,-181],[126,-5],[212,-69],[54,-47],[50,-200],[-75,-43],[-112,50],[-194,-67],[-219,24],[-61,86],[-101,14],[-191,-86],[-222,-21],[-83,33],[-144,-102],[104,2],[263,-57],[338,69],[50,-53],[316,3],[97,52],[220,-28],[86,43],[-4,-112],[-122,-72],[-190,-364],[-173,-62],[370,26],[126,-81],[-7,-81],[-349,-384],[-172,-111],[-209,-84],[-302,-167],[-104,-33],[-485,-14],[-72,255],[129,33],[-251,19],[-112,91],[-64,104],[-36,170],[-8,-198],[40,-72],[-94,17],[155,-107],[-133,50],[-172,-24],[-317,-200],[-11,-107],[-111,81],[-165,12],[179,-50],[112,-115],[-61,-21],[-187,47],[-58,-16],[205,-79],[-230,-169],[-359,-12],[-166,19],[-197,-78],[-126,52],[-40,-69],[-86,55],[25,-93],[94,-72],[337,-66],[-39,-74],[288,152],[136,36],[68,-50],[234,69],[162,181],[223,29],[129,-162],[-57,-222],[53,-159],[-129,-465],[65,-86],[133,8],[-25,-58],[-216,-216],[-406,-277],[-248,-133],[-266,-172],[-101,58],[-766,109],[-50,-67],[-169,-2],[144,-93],[-115,-62],[-302,-55],[-111,20],[-58,78],[-104,-12],[-65,103],[18,-122],[119,-19],[-191,-71],[-334,12],[-115,-127],[-40,-262],[-147,-50],[36,-95],[262,83],[-25,98],[90,148],[86,40],[284,-26],[392,0],[183,-79],[205,31],[176,-62],[180,10],[133,-124],[14,-129],[-129,-85],[-187,-7],[-32,90],[-86,55],[28,-105],[-154,29],[-112,-48],[40,-69],[-148,-98],[-168,3],[-133,-46],[-137,27],[129,-127],[141,-66],[100,-3],[169,-97],[7,83],[137,-17],[7,77],[112,-29],[97,-143],[79,133],[154,-14],[-90,119],[0,136],[205,31],[-54,-57],[36,-136],[252,-143],[0,-188],[262,-14],[209,-58],[158,22],[115,-26],[111,-100],[241,45],[363,-5],[126,36],[104,119],[209,10],[57,33],[176,-10],[40,38],[431,12],[263,58],[251,-29],[205,2],[65,41],[180,-14],[406,54],[50,50],[277,-14],[137,-117],[-62,-276],[-161,-183],[-270,33],[-72,-67],[58,-52],[36,-217],[179,-483],[4,-527],[-158,-245],[-241,-95],[-11,-48],[-151,-14],[-14,-89],[-94,-2],[-212,-102],[-284,-19],[-147,-81],[-7,-50],[-230,-96],[-442,-40],[-342,-129],[-277,-209],[-154,-200],[-90,-382],[57,-216],[62,-134],[-18,-66],[-162,-17],[-414,62],[-636,133],[-133,-16],[29,-41],[-155,-31],[-154,-88],[-295,-236],[-101,-119],[-388,-105],[-57,-40],[-550,-69],[-191,-72],[-435,-62],[-291,-105],[-151,-83],[-126,-210],[-122,-45],[-280,-276],[-33,-74],[-140,-38],[-237,50],[-97,69],[-223,86],[-93,-22],[-130,31],[-345,200],[-201,-14],[-593,179],[-223,86],[-431,95],[-396,45],[-413,-12],[-295,-67],[-237,-81],[-521,-61],[-615,0],[-162,-24],[-219,-74],[-313,-31],[-535,-138],[-180,-153],[-29,-90],[-151,-174],[-61,9],[-129,127],[-335,216],[-262,98],[-61,45],[144,103],[32,119],[133,26],[173,-74],[104,41],[43,97],[-151,-100],[-108,19],[-75,89],[68,76],[4,100],[-58,9],[29,-107],[-72,-126],[-155,-55],[61,83],[-43,112],[22,81],[-130,17],[47,-150],[-7,-157],[-97,24],[-144,114],[83,183],[-130,19],[-17,-69],[-130,58],[-29,-60],[-129,67],[-129,4],[-33,-140],[-82,67],[-72,-10],[46,-71],[18,-262],[58,-62],[-392,-86],[-129,112],[-22,143],[72,47],[79,153],[-151,45],[-237,31],[-29,43],[-133,-33],[169,-38],[58,-155],[107,-98],[72,-152],[-140,-120],[-68,-9],[-104,88],[-169,36],[-148,152],[-187,103],[-427,174],[-36,88],[-94,31],[-323,295],[-72,41],[-43,-74],[-65,88],[-262,128],[-58,-35],[-165,64],[129,-86],[198,-26],[172,-226],[295,-224],[176,-62],[-57,-31],[82,-136],[112,7],[-133,-133],[-104,-162],[-223,-2],[-238,-153],[-291,-47],[-266,-127],[-133,5],[-115,-45],[43,-50],[-212,-246],[-136,98],[-475,129],[-208,28],[-187,-19],[-86,-45],[-76,-141],[-352,55],[-194,5],[-363,-57],[-227,-112],[-161,-157],[-47,21],[129,69],[0,45],[-165,108],[-183,9],[-11,-43],[-173,29],[-187,74],[-122,-24],[-68,-93],[-33,-143],[123,19],[21,72],[191,71],[-15,-286],[112,74],[118,-133],[327,52],[-68,-195],[72,-81],[119,2],[-61,-95],[-101,-33],[-54,-141],[90,-19],[-97,-145],[-306,2],[-136,-24],[-194,-105],[-58,124],[-72,36],[-197,14],[-328,160],[-161,0],[-151,59],[-112,-50],[-133,-4],[-147,45],[-374,31],[-86,62],[-191,-7],[-82,35],[-284,5],[-79,-48],[-108,-142],[61,-60],[-104,-81],[-69,-124],[51,-93],[201,-2],[104,-193],[-18,-60],[-126,-104],[-43,-86],[-100,-55],[64,398],[-122,124],[-428,338],[-456,312],[-403,224],[-632,295],[-119,46],[-769,147],[-158,-28],[-65,-91],[-316,-131],[-216,-50],[-377,38],[-87,-57],[-32,-95],[-234,14],[-388,-19],[-237,-43],[-227,-69],[-136,-150],[3,-52],[-129,-160],[-209,-38],[-208,-129],[-119,-24],[-244,79],[50,105],[-108,148],[-122,269],[-97,31],[4,-167],[97,-107],[50,-343],[122,35],[-14,-59],[-259,-245],[-50,-136],[-130,-162],[-100,33],[-331,-9],[-136,-65],[212,34],[280,4],[68,-31],[-108,-276],[-14,-205],[115,-54],[47,-155],[-194,-34],[-90,74],[-122,-105],[-51,-119],[36,-262],[169,-7],[104,-52],[191,12],[-129,-105],[46,-64],[-122,-62],[-36,-141],[25,-83],[-115,-93],[-255,93],[-29,240],[-90,60],[90,59],[-64,46],[-238,-22],[198,-14],[-4,-81],[97,-67],[-28,-88],[61,-62],[-11,-81],[76,-33],[-36,-138],[-245,-58],[-151,-131],[-79,-128],[-72,-255],[-21,-226],[118,-91],[-118,-43],[-158,31],[-162,-143],[-104,-26],[-94,110],[-216,62],[94,159],[-22,234],[-82,-93],[93,-72],[-18,-78],[-147,-112],[3,-141],[-244,57],[-86,91],[-169,62],[-69,78],[76,-4],[14,154],[-154,108],[-43,69],[-191,121],[-176,5],[-22,110],[-107,-48],[-184,31],[-147,-48],[-104,-74],[-130,15],[-154,74],[25,54],[129,7],[-198,53],[-186,-7],[-47,33],[-15,143],[-50,57],[43,67],[-68,86],[122,16],[-323,5],[-148,33],[18,89],[-57,123],[-79,72],[75,212],[126,95],[108,186],[-86,-50],[-101,-150],[-101,186],[-104,112],[50,-191],[72,-81],[-72,-93],[22,-133],[-36,-103],[-165,-50],[-108,-78],[-90,26],[-54,-107],[205,28],[83,110],[143,21],[112,-164],[-270,-83],[176,-22],[69,-76],[136,76],[61,-93],[-32,-64],[-115,-24],[-79,-90],[79,-108],[-129,5],[-76,-57],[-43,176],[-122,88],[-299,141],[-266,24],[-219,-12],[-140,38],[-313,-33],[-97,-77],[4,-69],[-140,-47],[-8,-50],[-161,26],[-15,-43],[-312,-57],[-234,71],[-108,-64],[-234,12],[33,78],[-230,-123],[-97,-8],[14,158],[-57,69],[-166,-69],[-248,-62],[-72,-65],[18,-114],[58,-31],[-191,-162],[36,-78],[-36,-136],[97,-88],[-108,-57],[11,-93],[-93,-36],[-47,-107],[-54,102],[-334,41],[-115,-96],[-137,-162],[-122,-78],[-65,97],[-165,-47],[-97,-146],[7,-173],[-65,-117],[-82,-14],[-87,-86],[-61,93],[119,62],[-187,4],[54,165],[-76,205],[-172,-12],[-104,52],[122,-129],[7,-102],[65,-24],[-61,-124],[-158,29],[68,-81],[133,-19],[-191,-103],[25,-59],[-100,-81],[-11,-88],[61,-41],[-126,-88],[-427,-19],[100,-36],[65,36],[230,-19],[158,-95],[11,-131],[68,-3],[87,-131],[-72,-42],[-18,-120],[-180,-73],[39,-86],[-61,-95],[-179,35],[-223,-19],[-44,-128],[-99,-98],[12,-105],[-97,-76],[-124,-7],[-18,112],[-197,62],[18,59],[-130,124],[68,200],[-65,131],[-86,31],[7,126],[-241,220],[-111,73],[-194,-14],[-166,124],[-122,7],[-129,-62],[-4,67],[-129,55],[-97,104],[-180,46],[-248,-41],[3,-69],[-107,-55],[93,-174],[-115,-233],[-187,-90],[-305,-24],[-80,-79],[-86,29],[-190,-69],[-234,252],[54,122],[97,38],[-50,300],[-51,97],[94,77],[-4,71],[140,148],[137,38],[133,-7],[212,226],[50,-36],[227,127],[115,102],[79,-17],[198,46],[104,-41],[72,-129],[223,-71],[21,60],[191,152],[61,119],[-18,95],[108,27],[54,-65],[158,12],[190,100],[83,115],[108,16],[64,88],[69,3],[147,109],[50,134],[-3,128],[83,34],[136,-17],[126,172],[176,66],[47,229],[-68,112],[79,28],[-8,122],[205,19],[-68,40],[151,5],[32,105],[72,-79],[180,103],[104,131],[68,202],[-50,50],[36,134],[-79,71],[126,110],[-22,121],[25,148],[-68,74],[115,7],[115,-86],[112,19],[86,138],[172,88],[-28,-111],[72,-22],[53,-240],[26,47],[183,-40],[75,35],[230,15],[-237,16],[-93,-28],[-162,119],[-32,179],[97,90],[-126,102],[111,58],[65,-84],[169,-12],[75,100],[338,3],[144,26],[155,205],[36,274],[57,152],[126,3],[86,114],[119,2],[47,72],[111,14],[32,93],[141,79],[25,185],[201,117],[47,88],[140,38],[190,136],[26,405],[3,319],[-68,162],[11,214],[129,160],[7,207],[76,108],[-7,376],[53,112],[364,-5],[133,-59],[154,-5],[194,-148],[133,-57],[169,-10],[280,60],[173,176],[129,184],[148,45],[65,162],[64,24],[51,-86],[122,-5],[0,-83],[-83,-93],[86,24],[58,109],[43,181],[126,81],[183,-19],[47,98],[187,-67],[-104,98],[-144,0],[-4,-50],[-183,-15],[-184,-80],[-43,-84],[-151,91],[-43,93],[4,250],[-151,45],[47,88],[-166,86],[43,45],[216,-24],[47,46],[39,188],[-136,133],[111,19],[54,74],[198,0],[341,119],[76,-24],[144,65],[111,2],[129,-79],[141,69],[460,29],[215,107],[223,-64],[122,59],[205,31],[205,-26],[151,119],[94,-69],[276,-19],[281,-69],[348,-36],[76,-54],[194,61],[61,62],[227,12],[251,-81],[58,10],[190,-150],[133,16],[108,-126],[176,-100],[230,22],[137,-31],[158,12],[79,-34],[248,19],[72,53],[259,57],[126,71],[133,-19],[161,76],[173,17],[190,-21],[133,-62],[133,24],[169,114],[83,12],[-83,-212],[-93,2],[-65,-62],[151,22],[212,367],[0,95],[-122,174],[50,495],[-158,62],[280,-67],[65,234],[-65,95],[166,41],[29,154],[-119,48],[248,93],[115,-21],[108,35],[118,117],[26,129],[107,71],[105,153],[194,121],[133,145],[133,26],[39,53],[274,2],[61,57],[89,-38],[-39,93],[147,138],[158,246],[18,166],[133,103],[98,181],[-112,59],[-50,-42],[-173,-24],[-201,-205],[-259,-24],[-252,-105],[-330,-174],[-176,-31],[-245,-85],[-36,21],[-287,7],[-205,76],[-58,-95],[-553,-300],[-230,-67],[-94,-197],[-140,-138],[-32,69],[-122,21],[7,-105],[93,-69],[-39,-114],[7,-193],[-133,-55],[-245,26],[-208,-71],[-29,-62],[-158,-10],[-140,58],[-194,-100],[-105,23],[-309,-23],[-104,61],[-172,-4],[-155,47],[-323,57],[-133,-21],[-123,36],[-241,340],[-287,193],[0,74],[-122,60],[-256,-48],[-118,38],[-187,260],[-147,326],[-126,207],[-54,-21],[-47,138],[-266,236],[25,79],[-115,-27],[-215,7],[-47,-45],[-158,-33],[-33,38],[-230,-17],[-111,-57],[-101,-124],[0,-121],[187,-81],[-133,-34],[-144,39],[-79,-36],[-79,38],[-140,-36],[-50,-55],[-288,103],[-223,-5],[-97,-119],[90,-60],[-32,-59],[-255,55],[-101,-17],[7,-86],[-190,48],[-317,174],[-161,21],[129,81],[-36,184],[-79,123],[47,51],[129,-8],[22,55],[147,95],[43,134],[68,-100],[227,-79],[374,95],[158,58],[93,78],[158,48],[76,88],[-83,169],[18,-183],[-36,-46],[-431,-64],[-219,229],[-151,31],[-112,-48],[-244,-21],[-101,-77],[-215,46],[-191,138],[-176,188],[-61,186],[90,-41],[75,29],[223,-67],[-101,107],[-197,10],[-72,40],[-7,131],[97,251],[118,109],[-144,-59],[-147,-236],[-137,-72],[-258,103],[68,74],[-40,61],[-93,-119],[18,-57],[169,-107],[25,-62],[-172,-86],[-205,0],[-486,67],[-125,-71],[-227,35],[-234,-35],[-158,-53],[-129,-97],[-7,-91],[72,-79],[-108,-159],[47,-50],[-144,-134],[32,-40],[-320,2],[18,-74],[-122,-9],[-29,-64],[-162,31],[4,40],[-374,31],[7,-76],[-89,-7],[-126,-77],[-54,-138],[-122,-26],[0,-107],[-162,2],[-61,60],[-202,69],[-151,-26],[-190,90],[-108,5],[-18,105],[61,90],[-108,184],[-212,26],[-154,121],[82,98],[213,-21],[0,-84],[194,-26],[25,60],[-83,31],[50,57],[133,7],[126,-43],[184,-5],[43,-131],[237,24],[-237,72],[115,121],[151,43],[100,-43],[79,74],[83,-7],[43,78],[122,3],[126,-131],[-93,159],[-137,-12],[-7,103],[72,12],[-151,64],[54,233],[-112,53],[-143,2],[-65,-69],[155,55],[82,-50],[11,-243],[83,-45],[-36,-167],[-194,-69],[-65,40],[-176,-26],[-158,-64],[-155,31],[-162,71],[-50,-31],[-295,-7],[-61,122],[-122,-88],[-378,40],[36,-64],[112,-29],[-155,-207],[-90,86],[4,162],[-104,21],[-47,93],[-115,5],[-162,85],[-3,50],[284,-35],[46,181],[112,-5],[165,150],[266,-31],[104,129],[-7,247],[-75,146],[14,52],[-83,174],[-75,64],[-252,-4],[-61,40],[-165,-7],[-40,50],[-179,-5],[-47,-43],[-94,34],[-183,-84],[-129,-14],[-29,50],[83,98],[-58,69],[133,78],[-86,110],[334,79],[147,121],[155,24],[90,150],[270,-10],[97,117],[165,-9],[101,78],[97,-5],[18,136],[-90,65],[129,97],[-108,84],[122,95],[-10,40],[334,-45],[11,-36],[187,41],[68,-100],[-68,-76],[36,-50],[258,35],[159,72],[75,83],[-4,110],[123,-38],[43,-79],[194,24],[147,-19],[-93,162],[176,135],[198,27],[176,159],[208,346],[126,-89],[97,-23],[115,-148],[18,112],[-111,152],[32,96],[76,-10],[201,81],[388,-2],[104,59],[83,-50],[248,-26],[140,72],[36,76],[115,66],[40,110],[68,-50],[151,74],[223,195],[126,136],[115,28],[43,-71],[176,24],[287,176],[144,124],[166,33],[172,112],[133,155],[7,72],[87,21],[61,117],[161,157],[112,217],[21,104],[151,284],[101,472],[101,219],[72,33],[-4,150],[-43,245],[255,-14],[147,62],[115,148],[83,-29],[61,76],[112,43],[-148,-2],[-294,-100],[-299,-55],[-100,12],[-241,419],[-148,165],[76,247],[140,248],[93,36],[162,124],[-14,181],[165,12],[126,90],[104,21],[58,108],[93,19],[166,128],[-148,-50],[-90,-69],[-251,-59],[-79,-96],[-97,-23],[-83,62],[-112,200],[-416,469],[-47,83],[172,148],[54,131],[-14,90],[-162,265],[36,76],[198,43],[205,12],[169,195],[-137,-12],[-183,-126],[-69,33],[69,84],[-148,55],[-61,-136],[-251,-53],[-310,103],[-237,-69],[-341,-12],[-72,-24],[-29,-129],[-284,41],[-129,-10],[-140,-121],[-313,-93],[-122,-141],[57,-59],[-158,-72],[-58,-100],[8,-114],[93,-26],[25,-81],[-61,-91],[-140,17],[-104,-133],[-79,59],[21,160],[-226,138],[-212,50],[-234,-217],[-108,53],[-176,-103],[-79,69],[-144,0],[-75,-178],[-155,59],[-72,93],[97,52],[15,98],[86,124],[97,40],[-25,160],[190,43],[36,121],[155,55],[0,72],[115,159],[115,-5],[83,139],[143,33],[115,107],[288,-9],[101,26],[316,236],[79,140],[137,131],[194,0],[111,129],[255,197],[69,129],[25,272],[-76,255],[61,78],[119,-217],[54,88],[11,186],[205,86],[136,193],[291,176],[18,167],[101,93],[201,52],[248,155],[115,-38],[108,26],[61,-45],[309,57],[148,67],[61,71],[262,105],[191,33],[320,177],[90,-22],[104,84],[86,-8],[-39,201],[-223,111],[61,91],[244,-48],[40,-116],[111,-15],[205,55],[83,-88],[154,-33],[4,-86],[147,-86],[403,-19],[115,19],[172,-38],[302,88],[349,141],[237,112],[79,-15],[173,74],[370,119],[144,0],[219,50],[108,-185],[133,-96],[489,-231],[136,-121],[281,-198],[298,-176],[151,43],[-144,35],[-32,222],[83,38],[-144,79],[-79,147],[-47,179],[-101,124],[-172,119],[-108,138],[-54,122],[115,128],[108,53],[410,142],[161,110],[231,55],[179,-360],[90,-262],[144,-107],[147,-260],[191,-174],[86,-9],[176,-124],[245,17],[212,109],[223,-2],[208,76],[-119,122],[-204,-48],[-166,88],[-115,-48],[-273,65],[-302,217],[-280,138],[-112,104],[-93,191],[-47,255],[-68,105],[-144,119],[14,67],[-140,235],[-14,181],[-237,177],[0,202],[93,157],[140,172],[133,228],[184,191],[158,117],[7,64],[118,169],[123,50],[-4,124],[76,36],[-8,112],[-230,16],[-255,50],[-187,160],[-75,172],[18,566],[50,200],[-22,451],[281,85],[11,-283],[79,-102],[129,-50],[-4,-162],[47,154],[-158,141],[-32,288],[438,145],[209,-35],[129,66],[151,146],[-136,45],[-54,176],[-108,141],[-40,116],[-118,103],[115,43],[82,178],[169,115],[122,31],[195,105],[43,157],[57,36],[43,138],[-118,47],[-51,131],[-89,110],[-4,105],[-191,83],[33,93],[180,83],[68,-2],[100,136],[123,69],[-79,159],[-29,-176],[-194,-69],[-61,-105],[-76,12],[-295,-95],[-86,-95],[-32,-215],[-399,-86],[-144,93],[47,136],[-245,176],[130,55],[-97,193],[-151,55],[-8,-107],[123,-46],[-25,-81],[-94,-54],[4,-86],[-69,-67],[15,-162],[-112,-78],[-61,-143],[-208,-191],[-72,-93],[-133,-83],[-104,-107],[-130,97],[4,62],[-112,84],[-111,-141],[-129,117],[-26,221],[54,200],[-133,69],[22,58],[176,7],[72,64],[21,255],[62,31],[10,233],[-75,134],[-94,59],[18,-166],[-82,-124],[-101,-74],[83,-136],[-87,-98],[-133,-4],[-43,47],[-133,-78],[-118,9],[-101,103],[-208,297],[-238,246],[-104,169],[29,138],[-58,229],[11,121],[79,81],[-18,117],[-111,-67],[61,-71],[-79,-31],[-112,100],[-158,257],[-463,493],[-105,69],[-122,184],[-118,126],[-108,21],[-155,208],[187,107],[86,214],[122,176],[-21,165],[75,109],[8,177],[-51,238],[69,-31],[32,112],[201,162],[90,112],[147,276],[216,121],[165,172],[29,219],[-46,153],[183,333],[82,238],[209,198],[137,62],[3,-41],[291,-95],[123,-98],[-26,134],[144,45],[94,172],[-151,-96],[-184,36],[-28,71],[93,151],[370,161],[162,27],[137,-46],[36,-57],[136,-35],[148,-91],[176,-2],[237,88],[54,66],[151,-2],[-198,76],[-72,-47],[-54,66],[158,131],[62,129],[-223,-95],[-194,-3],[-166,-104],[-309,97],[-115,10],[-201,-62],[-79,31],[-76,-60],[-190,34],[-133,66],[-331,-57],[-248,50],[-176,138],[-130,-155],[-151,-57],[-330,0],[-191,103],[-133,188],[15,-195],[-58,-27],[50,-114],[-61,-176],[8,-124],[89,-33],[58,-162],[-86,-110],[-123,-57],[4,-115],[-356,65],[-323,7],[-33,33],[-140,-66],[-93,-100],[-141,-70],[-179,-21],[-40,91],[-140,69],[-47,-98],[108,-69],[-3,-79],[-101,26],[-101,129],[-43,-17],[76,-119],[-133,27],[-33,-39],[162,-150],[68,-12],[-108,-97],[-111,2],[-101,-107],[-219,-81],[-201,-48],[-165,-140],[-98,-22],[-176,31],[-248,-21],[-133,98],[0,85],[108,186],[-79,117],[-11,112],[-161,-248],[-26,-379],[-89,10],[-40,83],[-309,19],[-162,165],[-14,81],[-148,47],[-72,143],[-3,186],[83,76],[-105,36],[-36,-83],[-165,-115],[-36,-59],[-205,76],[-72,-2],[-381,169],[-72,121],[-68,3],[18,92],[-93,53],[-177,-115],[22,-247],[65,-207],[126,-60],[248,-69],[75,-103],[-14,-95],[-162,34],[61,-115],[-79,-55],[104,-52],[-47,-167],[4,-266],[61,7],[7,-112],[-86,-122],[-180,-119],[-100,5],[-241,131],[-237,48],[-263,128],[-147,162],[-155,36],[-61,76],[-50,174],[-144,112],[-108,21],[-291,148],[-291,233],[-313,10],[-162,76],[-176,231],[-201,48],[-25,-91],[-270,-90],[-276,-126],[-151,-198],[133,-279],[-11,-112],[136,-164],[69,-255],[7,-114],[65,-79],[190,-95],[-93,-91],[-15,-150],[47,-116],[129,-5],[4,-48],[-147,0],[-18,38],[-263,41],[-277,219],[-54,190],[162,81],[-122,148],[50,110],[-223,43],[40,131],[-90,21],[-36,83],[36,89],[-201,150],[-140,166],[-148,46],[-75,109],[-90,5],[-241,190],[-61,81],[22,91],[-256,355],[-14,348],[54,112],[-54,95],[111,205],[87,74],[97,-17],[212,98],[126,-50],[25,-101],[72,-42],[82,-243],[-75,-31],[36,-98],[0,-167],[75,-102],[184,-129],[100,5],[137,95],[-36,172],[-65,45],[0,93],[-154,224],[-76,174],[-90,105],[-32,109],[50,212],[166,269],[86,50],[25,153],[76,59],[35,272],[116,57],[283,198],[141,224],[194,164],[126,69],[0,222],[100,185],[47,22],[4,295],[-58,114],[36,48],[205,86],[21,93],[213,93],[25,81],[-15,252],[144,164],[223,117],[144,-5],[230,58],[100,147],[-14,122],[104,62],[-3,107],[57,9],[-25,146],[-169,155],[-57,114],[-108,0],[-65,83],[97,-36],[86,43],[-50,300],[-212,172],[-316,167],[-43,50],[-137,21],[-158,-21],[-33,78],[-93,-50],[-50,48],[79,57],[-130,134],[-187,109],[-14,83],[-270,127],[8,195],[125,67]],[[68432,75751],[94,-160],[-65,-93],[-201,-26],[61,69],[46,172],[65,38]],[[68849,76225],[-11,-126],[-129,-31],[140,157]],[[68533,76594],[-97,10],[140,50],[-43,-60]],[[68723,77039],[-266,-143],[58,-31],[140,34],[18,-157],[-162,38],[-18,-43],[-212,12],[-61,126],[176,112],[327,52]],[[68087,77106],[126,-133],[-65,-74],[-93,9],[-58,115],[90,83]],[[69453,77137],[-158,-110],[-25,72],[183,38]],[[67889,77204],[51,-100],[-76,21],[25,79]],[[68022,77370],[137,-78],[-79,-67],[-58,145]],[[71344,77487],[-133,-90],[18,69],[115,21]],[[66951,77761],[115,-43],[-3,-76],[104,-40],[-36,-65],[198,-14],[327,-148],[158,-107],[-122,-57],[107,-14],[0,-89],[101,-88],[-101,-88],[151,-21],[-93,-67],[212,-24],[-201,-157],[-306,-62],[-64,-86],[133,-38],[89,24],[90,119],[194,22],[126,-17],[50,50],[105,-67],[-108,-107],[147,24],[-57,-55],[-273,-52],[-130,0],[-190,64],[79,-67],[-140,-28],[-51,59],[-277,-40],[-190,174],[-18,74],[-129,150],[-209,185],[-4,174],[-71,53],[-295,4],[-18,74],[79,115],[72,190],[108,79],[111,-3],[147,81],[83,5]],[[67214,77823],[93,-57],[104,26],[43,-119],[-89,-36],[-177,43],[-54,126],[80,17]],[[69841,78571],[18,-71],[-93,52],[75,19]],[[71944,78664],[104,-64],[-115,-60],[11,124]],[[70456,79081],[18,-150],[-115,-100],[-40,-98],[115,-100],[0,-55],[-162,-102],[-32,64],[-147,52],[-270,39],[-72,-55],[-161,19],[122,274],[122,112],[72,-124],[205,-43],[115,86],[-22,114],[155,-2],[97,69]],[[69406,79121],[83,-159],[-151,-12],[-119,66],[-3,65],[190,40]],[[69442,79424],[50,-91],[-89,-57],[-220,21],[76,79],[183,48]],[[50905,79486],[69,-146],[-187,3],[100,71],[18,72]],[[71340,79538],[18,-121],[-104,7],[-29,76],[93,-26],[22,64]],[[68357,79607],[89,-12],[-25,-71],[-64,83]],[[67900,79657],[36,-52],[183,-60],[101,-69],[97,-7],[244,-126],[76,57],[86,-95],[133,-19],[29,-74],[-97,-22],[205,-166],[136,-27],[29,-212],[-65,-19],[-53,-119],[-108,93],[-158,-17],[68,-69],[-79,-138],[-97,17],[-126,-67],[-86,-98],[258,-69],[105,5],[122,115],[234,-8],[7,-40],[194,-76],[18,-124],[133,100],[7,124],[108,69],[18,-84],[72,46],[-4,-167],[108,-17],[-133,-57],[11,-171],[165,4],[165,89],[65,102],[86,-48],[130,5],[154,98],[40,-248],[-43,43],[-140,-17],[-169,-64],[75,-57],[76,-155],[-51,-67],[198,17],[-29,-55],[122,-50],[51,98],[-97,-10],[54,129],[-173,28],[410,165],[90,2],[122,76],[86,-69],[-86,-150],[22,-240],[-252,28],[-79,-88],[-104,31],[-133,-114],[-11,-72],[-122,-69],[25,-45],[-79,-79],[-108,143],[-241,96],[-86,-41],[97,-50],[-115,-45],[-87,-129],[187,38],[-57,-102],[25,-67],[205,0],[-129,-81],[-184,-40],[115,-48],[43,-150],[-107,14],[-98,-138],[-122,-81],[79,-55],[-36,-97],[-97,-62],[202,-110],[-94,-186],[-244,-38],[-33,105],[-68,-29],[-104,181],[72,24],[-15,165],[-136,140],[-68,0],[-44,98],[87,43],[68,-67],[101,2],[-15,60],[-151,107],[-108,-74],[-79,17],[133,121],[173,-7],[176,38],[14,-81],[65,62],[255,31],[36,62],[-190,-28],[-202,52],[11,41],[158,76],[198,-79],[-104,222],[158,45],[18,98],[-219,-41],[-11,107],[-266,362],[36,129],[-79,21],[-166,-147],[-100,-41],[-302,-40],[-108,-69],[-180,28],[-93,-57],[68,-40],[-93,-29],[-184,24],[-90,-55],[-104,43],[-75,-52],[-133,112],[-94,145],[36,217],[-122,45],[4,136],[82,-22],[187,26],[43,193],[-161,172],[0,183],[-101,34],[0,-84],[-144,26],[-86,-38],[101,-83],[111,7],[61,-64],[-79,-74],[176,-184],[-313,139],[-194,2],[187,-79],[47,-104],[-129,16],[201,-140],[-94,-100],[26,-48],[-191,-7],[-14,-83],[-105,-19],[-143,45],[-8,45],[-165,48],[29,74],[-94,211],[47,270],[68,66],[-46,86],[147,38],[-93,79],[-11,207],[21,119],[-64,22],[93,114],[65,14],[104,155],[86,45],[162,7],[273,105],[259,12]],[[71872,79679],[22,-91],[-144,36],[122,55]],[[71563,79712],[108,-52],[-126,-10],[57,-93],[198,-21],[119,26],[11,-50],[-180,-17],[-43,-78],[90,-100],[341,54],[-54,-78],[54,-138],[126,-24],[-119,-96],[-151,0],[-97,-57],[-118,50],[-4,-90],[-86,31],[54,119],[-26,76],[-172,83],[-162,-50],[104,-95],[-21,-133],[-281,19],[4,83],[112,105],[-4,79],[129,40],[155,-17],[39,120],[-104,50],[-230,207],[133,-24],[144,81]],[[69625,79798],[141,-55],[-51,-336],[-129,88],[-40,236],[79,67]],[[68677,80048],[172,-24],[72,-157],[280,-5],[184,81],[93,-74],[-129,-95],[-22,-76],[86,-208],[-233,-73],[-281,-3],[-222,93],[-105,72],[-50,97],[-83,24],[-25,133],[86,93],[177,122]],[[70308,80274],[69,-98],[-79,-112],[-36,201],[46,9]],[[70876,80447],[151,-104],[-118,-59],[-97,33],[7,121],[57,9]],[[70733,80486],[32,-64],[-54,-107],[191,-67],[-94,-141],[-75,-181],[10,-193],[137,-104],[-11,-72],[-219,10],[-130,-60],[-25,193],[-208,117],[-4,159],[220,-69],[93,50],[18,146],[-94,57],[47,128],[-18,105],[184,93]],[[72932,81015],[15,-231],[266,-86],[-313,-7],[-22,52],[-136,19],[-237,-93],[-47,-109],[-155,-136],[40,76],[-58,36],[-122,-62],[108,-57],[65,-174],[-87,86],[-151,43],[-125,-7],[3,-153],[-97,53],[-61,100],[-86,-89],[3,74],[-143,24],[-69,-36],[-28,-116],[-159,-100],[-43,-153],[-97,103],[7,-155],[-64,5],[-40,190],[58,126],[194,67],[14,86],[205,121],[187,53],[-68,64],[111,0],[-136,119],[-4,117],[216,-26],[140,104],[230,-7],[-68,-95],[-115,-19],[-101,-114],[-40,-136],[115,-5],[169,48],[90,83],[201,122],[133,-22],[112,31],[3,112],[187,74]],[[69439,81422],[57,-5],[43,-104],[-93,-10],[36,-164],[-202,-12],[-32,-84],[111,22],[220,-124],[115,12],[25,-62],[101,38],[18,-100],[100,-43],[11,-171],[173,14],[111,-181],[-147,36],[-115,-177],[-72,62],[79,155],[-76,12],[-269,245],[-238,22],[133,-122],[-233,-69],[-15,-62],[-161,129],[-119,31],[43,64],[-21,167],[-241,121],[-87,134],[270,-85],[54,47],[111,-19],[159,57],[28,164],[123,62]],[[69974,81651],[58,-93],[-29,-100],[-58,7],[-39,-117],[75,-81],[-43,-147],[-86,40],[-101,-19],[-11,198],[94,97],[54,191],[86,24]],[[73188,81698],[72,-69],[-187,-16],[-94,-138],[97,-96],[-136,-69],[-58,67],[-154,14],[129,186],[-29,62],[169,2],[191,57]],[[78026,83085],[198,-60],[17,-57],[-97,-74],[11,-86],[-86,27],[-32,-122],[-133,-2],[-62,55],[65,38],[58,266],[61,15]],[[80952,86953],[158,-62],[-97,-78],[-161,23],[-41,89],[50,51],[91,-23]],[[79877,87136],[-13,-53],[-108,53],[121,0]],[[79715,87869],[4,85],[74,-45],[-78,-40]],[[79985,87940],[-175,0],[161,36],[14,-36]],[[79877,88101],[-145,22],[27,81],[101,-36],[17,-67]],[[75176,88231],[169,-45],[26,-116],[-67,-197],[-266,85],[10,49],[-145,41],[-37,67],[121,89],[189,27]],[[81643,88423],[30,-130],[91,58],[30,-120],[280,-41],[37,-40],[-54,-116],[-64,-4],[-97,120],[-91,40],[-122,-178],[-27,-215],[-256,72],[-91,76],[-7,134],[81,107],[-239,183],[17,85],[371,-9],[80,80],[31,-102]],[[77414,89856],[283,-44],[91,22],[64,-156],[-145,-23],[-54,-53],[-118,22],[-229,161],[108,71]],[[82681,90138],[-172,-130],[-7,-44],[-155,-99],[-152,-156],[-161,0],[-226,94],[101,53],[-91,85],[-185,14],[91,129],[256,-18],[-10,-49],[172,67],[80,-18],[98,103],[236,-27],[152,49],[-27,-53]],[[83668,90571],[118,13],[64,-49],[-253,-40],[-37,67],[108,9]],[[81174,90893],[-107,0],[0,62],[101,0],[6,-62]],[[80955,91085],[-67,-18],[-105,93],[38,67],[134,-142]],[[80200,91281],[41,89],[64,-49],[-105,-40]],[[82158,92215],[118,-5],[64,-67],[-91,-76],[-118,14],[11,-67],[-172,49],[188,152]],[[82981,92322],[91,-41],[107,18],[105,-76],[-20,-116],[101,-9],[188,90],[71,-103],[-17,-85],[-225,-201],[-172,94],[-17,49],[-118,-31],[-71,67],[-202,-18],[121,-54],[118,-111],[-199,-85],[-158,94],[-88,205],[-155,134],[-13,80],[64,94],[175,-18],[135,-53],[179,76]],[[80160,92246],[-57,-425],[13,-241],[-64,-85],[-212,14],[-14,-45],[199,-40],[-37,-76],[51,-85],[-14,-89],[105,-31],[-10,-148],[188,90],[108,-72],[125,121],[91,22],[118,-58],[111,-210],[135,-54],[-37,-84],[64,-58],[121,53],[10,-103],[-118,14],[-27,-90],[172,-40],[44,-85],[135,143],[145,5],[6,62],[145,76],[145,-13],[0,-72],[-320,-272],[-172,-76],[10,-121],[81,90],[253,-40],[-47,-54],[20,-205],[-145,-23],[-135,-89],[-91,49],[-232,4],[-10,-66],[145,-23],[-11,-49],[159,-76],[81,36],[81,-72],[144,50],[-74,-152],[10,-76],[-188,0],[-81,-36],[-145,-138],[118,-59],[158,14],[71,-31],[10,-85],[-290,-27],[-87,-143],[-155,-9],[47,152],[-145,-13],[37,-58],[-253,-175],[108,0],[108,54],[27,-161],[135,54],[-41,-161],[-145,-147],[10,-32],[270,179],[-10,-103],[47,-71],[-101,-161],[185,-112],[11,-49],[-156,9],[48,-134],[-155,27],[37,-121],[-54,-17],[-135,89],[37,-94],[-27,-98],[-182,-72],[101,-62],[-6,-224],[74,-62],[6,-116],[172,-22],[-54,-54],[-134,18],[-189,-36],[30,-201],[178,-160],[-57,-12],[11,-157],[-97,26],[-61,147],[-11,-80],[-295,60],[144,-155],[-40,-60],[47,-88],[-72,-52],[47,-108],[-83,-26],[-22,-114],[-104,9],[108,-85],[18,-181],[-90,-53],[90,-133],[-14,-124],[-187,195],[-69,-135],[-50,97],[72,91],[-75,131],[-130,14],[-86,-131],[-43,55],[-133,-22],[-79,241],[154,17],[-29,121],[44,131],[111,-21],[68,69],[-18,88],[-140,36],[29,121],[122,-55],[-73,114],[17,140],[134,18],[17,156],[115,98],[-27,152],[-135,-116],[-108,72],[-91,-76],[-64,22],[81,116],[78,40],[-54,125],[43,85],[128,107],[-101,45],[118,31],[54,108],[118,-50],[-20,99],[91,58],[-131,40],[74,98],[6,304],[-60,-152],[-64,-58],[-135,18],[54,36],[0,142],[-78,58],[91,121],[-134,-18],[-172,-85],[10,139],[-202,-89],[23,-139],[-104,-129],[-213,84],[-20,-223],[-118,103],[-111,31],[-145,-13],[-17,156],[-118,-13],[-94,71],[27,143],[81,36],[162,0],[-64,192],[-34,-99],[-182,-80],[-101,-134],[-213,-4],[-37,102],[118,41],[44,-50],[101,18],[-145,121],[-134,-107],[-108,-18],[-199,94],[47,53],[-330,125],[20,197],[67,152],[-128,44],[0,63],[118,94],[135,35],[351,18],[296,-89],[27,125],[162,0],[216,53],[121,-17],[-27,178],[94,54],[27,-72],[135,-35],[216,0],[64,102],[-91,-49],[-320,130],[-7,134],[-74,71],[128,9],[6,63],[172,58],[118,-32],[27,99],[-54,53],[-249,81],[10,281],[-212,139],[-17,-67],[-91,-14],[-54,116],[101,81],[-293,31],[-81,71],[-98,-102],[-91,13],[-188,-36],[-159,94],[101,54],[71,156],[108,-36],[175,90],[-23,147],[53,98],[226,94],[64,-40],[-20,-152],[118,-76],[131,14],[-114,80],[37,103],[81,0],[71,120],[235,134],[-74,116],[128,81],[-60,169],[347,-102],[242,0],[-10,138],[128,9],[98,103],[54,-125]],[[82859,94144],[128,-45],[4,-210],[64,58],[33,134],[91,23],[162,-72],[175,0],[-10,-67],[155,-44],[-37,-50],[-108,18],[-118,-67],[129,-62],[26,-152],[-289,27],[91,-192],[118,-23],[40,-152],[-115,0],[48,72],[-145,67],[-189,0],[-10,-31],[199,-5],[-27,-178],[-135,-108],[-91,-22],[-44,-192],[212,-22],[0,-81],[-171,-94],[-256,72],[-65,-13],[182,-90],[-64,-94],[-118,41],[-70,84],[-243,0],[-158,41],[-98,67],[0,-125],[175,-36],[10,-49],[-182,-98],[101,-90],[-10,-49],[-418,89],[27,-107],[135,-36],[24,-102],[-118,-148],[27,-71],[81,18],[17,-67],[104,-23],[-17,-138],[-101,-27],[10,-138],[-199,-5],[54,-98],[91,-40],[-27,-179],[-67,-161],[-229,0],[-270,90],[0,-54],[135,-18],[-17,-67],[-333,-4],[-71,103],[-91,40],[-4,120],[-101,63],[47,53],[-64,192],[24,85],[-101,27],[74,161],[-88,205],[75,45],[33,205],[182,134],[44,67],[91,5],[17,138],[64,23],[0,152],[-61,53],[74,116],[-20,99],[118,40],[135,-36],[94,54],[189,-72],[54,54],[162,-36],[104,-58],[-50,-103],[148,-71],[64,31],[-64,165],[108,54],[-10,103],[128,98],[-7,170],[47,44],[-101,134],[81,90],[101,35],[-101,27],[91,67],[108,0],[91,121],[-10,58],[97,40]]]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/investigations/what-whisky/geo.json\n// module id = 560\n// module chunks = 92755437227203","import React, { Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Section, Subsection, Paragraph, Figure, Code\n} from '../../../components'\n\nimport Constants from '../../../components/constants.js'\n\nimport whisky from './whisky.json';\nimport Radial from './_Radial'\nimport Map from './_Map';\nimport FormattedOverview from './_FormattedOverview';\nimport ClusterSelector from './_ClusterSelector';\n\nimport rothes from './rothes.png'\n\nconst ALLSTRING = 'All'\n\nclass WhatWhiskyIndex extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      selected: null,\n      selectedcluster: ALLSTRING\n    }\n    this.onHover.bind(this)\n    this.clusterupdate.bind(this)\n  } \n  \n  onHover = (d) => {\n    this.setState({\n      selected: d\n    })\n  }\n\n  clusterupdate = (d) => {\n    this.setState({\n      selectedcluster: d,\n      selected: null\n    })\n  }\n\n  render() {\n    const theme ={\n      seafill: Constants.vlightblue,\n      landfill: Constants.darkgreen,\n      riverColour: Constants.darkblue,\n\n      selectedColour: Constants.lightred,\n      unselectedColour: Constants.darkred,\n      disabledColour: Constants.lightgrey,\n\n      radialOverall: Constants.darkyellow,\n      radialFill: Constants.lightyellow,\n    }\n\n    return (\n      <article>\n        <Paragraph>\n          I have nearly finished my bottle of whisky.\n          I would like to make an informed decision when purchasing my next one.\n          I know a little bit about whisky but not enough to make a confident decision.\n          I found a <a href='https://www.mathstat.strath.ac.uk/outreach/nessie/nessie_whisky.html'>dataset from Glasgow University</a>.\n          Can I use data to make a better decision?\n        </Paragraph>\n        <Paragraph>\n          After digging around in this data, I've found a few new ways to think about my whisky purchase.\n          I also found <a href=\"https://www.youtube.com/watch?v=t5YeM55l2_0&index=1&list=PL1ABF6820EA98D487\">Brian Cox</a> clearly enjoying himself while helping with the pronunciation.\n        </Paragraph>\n        <Section name=\"Contents of the dataset\">\n          <Paragraph note=\"On all these maps, hover over the points to find out more.\">\n            There are 86 individual distilleries contained in this dataset.\n            Here they all are on a map.\n          </Paragraph>\n          <FormattedOverview\n            whisky={whisky}\n            {...theme}\n            selected={this.state.selected}\n            onHover={this.onHover}\n            nooverview={true}\n          />\n          <Paragraph>\n            Each of these distilleries is given a score between 0 and 4 over 12 different taste categories.\n          </Paragraph>\n          <Figure caption=\"The average of all the scores. The average scotch has a high score in body, fruity, malty, and sweetness.\">\n            <Radial\n              {...theme}\n              width={594}\n              height={300}\n              whisky={whisky}\n            />\n          </Figure>\n          <Paragraph>\n            This means that there are 12 ⨉ 86 = 1,032 observations in this dataset.\n            We'd need to hold them all in our head at once to make an informed decision,\n            which is beyond me.\n            There are a few rules of thumb that we can use to narrow down our decision making criteria.\n          </Paragraph>\n        </Section>\n        <Section name='Geography of Scotland'>\n          <Paragraph>\n            One of the easiest things to get your head around is the geography of Scotland.\n            The geography of Scotland is thought to have quite an impact on the characteristics of the whisky.\n          </Paragraph>\n          <Figure caption={<div>From <a href=\"https://www.wineware.co.uk/Content/Images/uploaded/Satelite%20Pages/scotch-whisky-map-1.jpg\">wineware.co.uk</a>, the whisky regions of Scotland</div>}>\n            <img src=\"https://www.wineware.co.uk/Content/Images/uploaded/Satelite%20Pages/scotch-whisky-map-1.jpg\" />\n          </Figure>\n          <Paragraph>\n            In particular there are two regions with a very high concentration of distilleries.\n            Islay and Speyside.\n          </Paragraph>\n          <Subsection name='Islay'>\n            <Paragraph>\n              Islay is an island on the west coast, in the island group called the Inner Hebrides.\n              When you think about Islay whisky,\n              you think about big, smoky, peaty whisky.\n              You can see that this is the case, particularly in the three distilleries in the south coast.\n            </Paragraph>\n            <FormattedOverview\n              {...theme}\n              whisky={whisky}\n              selected={this.state.selected}\n              onHover={this.onHover}\n              rotate0={6.25}\n              rotate1={1.92}\n              scale={57400}\n              spey={true}\n            />\n          </Subsection>\n          <Subsection name='Speyside'>\n            <Paragraph note={<a href=\"https://www.thewhiskyexchange.com/c/314/speyside-single-malt-scotch-whisky\">60% figure comes from Whisky Exchange</a>}>\n              The second area that has a high concentration of distilleries is Speyside.\n              I've highlighted on this map the River Spey, which gives this area its name.\n              More than 60% of Scotland's whisky comes from Speyside.\n              I can't find out why so much whisky comes from Speyside.\n              Some people claim that the area has water and climate that is particularly suitable for whisky production,\n              but I can't verify that.\n            </Paragraph>\n            <Paragraph>\n              When you think about Speyside whisky you think about lighter, relaxed whisky.\n              This does seem to be the case,\n              but you also notice that there is a lot of variation between whiskies that are even right next to each other.\n              There's something else going on here.\n            </Paragraph>\n            <FormattedOverview\n              {...theme}\n              whisky={whisky}\n              selected={this.state.selected}\n              onHover={this.onHover}\n              rotate0={3.93}\n              rotate1={0.5}\n              scale={24800}\n              spey={true}\n            />\n            <Paragraph>\n              It is easy to miss some of the detail on this map.\n              There are a lot of distilleries in Speyside.\n              We'll zoom in a bit closer.\n            </Paragraph>\n            <FormattedOverview\n              {...theme}\n              whisky={whisky}\n              selected={this.state.selected}\n              onHover={this.onHover}\n              rotate0={3.3}\n              rotate1={0.29}\n              scale={100000}\n              spey={true}\n            />\n            <Paragraph>\n              See if you can find the Glen Rothes, Glen Spey, and Glen Grant distilleries.\n              They're towards the north of this area, right on the banks of the river.\n              They almost overlap each other.\n              Looking at them on a map we can see that these distilleries are about 300m apart, just down the road from each other.\n            </Paragraph>\n            <Figure caption={\n                <div>\n                  <div>Map of the village of Rothes</div>\n                  <div><a href=\"https://www.google.co.uk/maps/@57.5294291,-3.2074024,1898m/data=!3m1!1e3\">source</a></div>\n                </div>\n                }>\n                <img src={rothes} />\n            </Figure>\n          </Subsection>\n        </Section>\n        <Section name='Putting the whisky into groups'>\n          <Paragraph note={<a href=\"https://github.com/dataewan/whisky-vis/blob/master/analysis/whiskyanalysis.ipynb\">analysis</a>}>\n            The other trick we can use is to group the whiskies into groups with similar characteristics.\n            I've found there are 9 groups in the data that can help break down the problem.\n            Select the groups below to find out more about them.\n          </Paragraph>\n          <ClusterSelector \n            whisky={whisky}\n            selectedcluster={this.state.selectedcluster}\n            onUpdate={this.clusterupdate}\n            allstring={ALLSTRING}\n          />\n          <FormattedOverview\n            {...theme}\n            whisky={whisky}\n            selected={this.state.selected}\n            clusterselected={this.state.selectedcluster}\n            clusteroverview={true}\n            onHover={this.onHover}\n            cluster={this.state.selectedcluster === ALLSTRING ? null : this.state.selectedcluster}\n            controls={true}\n            colourcluster={true}\n          />\n        </Section>\n        <Section name=\"What am I going to buy?\">\n          <Paragraph>\n            Everyone has different tastes when it comes to whisky,\n            and even your own tastes might change depending on the occasion.\n            There isn't going to be a single correct answer.\n            I've learned a lot for my shopping expedition.\n          </Paragraph>\n          <Paragraph>\n            From past experience, I know that I personally don't enjoy very strong smoky peaty whisky much.\n            So this is groups 2, 5, and 7.\n            I've steered clear of Islay whiskies for this reason.\n            However, there is a lot more subtlety there than I realised.\n            Bunnahabhain in particular, and also Bruichladdich, and Bowmore might be something that I should try.\n          </Paragraph>\n          <Paragraph>\n            I've also learned that there is a lot more variation in Speyside whisky than I realised.\n            I've been introduced to the term <a href=\"https://www.thewhiskyexchange.com/c/314/speyside-single-malt-scotch-whisky\">lunchtime whisky</a>, which looks a bit like group 0.\n          </Paragraph>\n          <Paragraph>\n            I'm not looking for lunchtime whisky.\n            I think that I'm looking for something that I can sit in my chair with a book and drink.\n            I've learned about winey whiskies (group 4), which look quite interesting.\n            I'm also poking around in group 8, as I've enjoyed some whiskies from there before.\n          </Paragraph>\n          <Paragraph>\n            Sadly I've also learned that there is some poor quality information in this dataset.\n            For example <i>Belvenie</i> should be <i>The Balvenie</i>, and had the wrong location in the original data.\n            I've tidied things up, and most of the data looks good quality.\n            I'm probably going to incorporate some other information in my decision process.\n          </Paragraph>\n        </Section>\n      </article>\n    );\n  }\n}\n\n\nexport default WhatWhiskyIndex;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/investigations/what-whisky/index.js","module.exports = {\"type\":\"Topology\",\"objects\":{\"tracts\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"LineString\",\"arcs\":[0],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"630C90FA-3524-47E1-80C5-1A203D41BC56\",\"startNode\":\"D9AA3038-B59F-49DA-B5CB-F1BE8D9B2702\",\"endNode\":\"EA619465-2954-4504-83BA-5BD8F8FDB717\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":17,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[1],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"48AC20DE-F833-4972-A804-BA12EDA88AEF\",\"startNode\":\"EA619465-2954-4504-83BA-5BD8F8FDB717\",\"endNode\":\"46E06692-840B-4AB3-B37A-D3AFE3767747\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":717,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[2],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"F38C86A8-4C85-4EDB-A9D0-1170E438E509\",\"startNode\":\"46E06692-840B-4AB3-B37A-D3AFE3767747\",\"endNode\":\"A24594A6-00EA-43F5-BBC5-131C134D1E75\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":185,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[3],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7E0E761F-F2F4-4C96-85F8-9CFCF71BF19E\",\"startNode\":\"A24594A6-00EA-43F5-BBC5-131C134D1E75\",\"endNode\":\"841BC4D7-EB30-4A30-AD03-48C93B07D6C2\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":276,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[4],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D6B036D4-128F-4C65-BEB1-4E6C6FB11F31\",\"startNode\":\"156DDB08-56A6-4253-8E68-4214E776BA97\",\"endNode\":\"C7615DEA-E131-441D-9110-5F20261205A4\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":792,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[5],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D4089A61-EE38-4D23-8182-6EBCACCE6BB5\",\"startNode\":\"841BC4D7-EB30-4A30-AD03-48C93B07D6C2\",\"endNode\":\"156DDB08-56A6-4253-8E68-4214E776BA97\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":18,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[6],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"CC9DB557-05DA-4891-8E26-FA38B98A14E1\",\"startNode\":\"C7615DEA-E131-441D-9110-5F20261205A4\",\"endNode\":\"218E60A6-7852-40A0-94A7-4736C8558681\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":572,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[7],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"68A5DB3A-A6C0-4C79-9C9B-EF42ED7EEA5F\",\"startNode\":\"DD5186C1-C4F6-49FB-9A30-0E4EC31688CA\",\"endNode\":\"381A5B64-0BC4-4869-9380-27771A655B4B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":92,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[8],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"65F10C4C-2F3D-45ED-825C-EFA487F93CD8\",\"startNode\":\"218E60A6-7852-40A0-94A7-4736C8558681\",\"endNode\":\"72577D28-D376-47E1-8979-B95C1D741C80\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":930,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[9],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"42B88053-DF5A-41A6-AAE3-6D0D9AEE579C\",\"startNode\":\"381A5B64-0BC4-4869-9380-27771A655B4B\",\"endNode\":\"5066E4D0-D070-4D9B-8CF1-7ED3935A9472\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":308,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[10],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"327AEB53-4FD3-4C1C-BFBB-11B6DF55E33E\",\"startNode\":\"5066E4D0-D070-4D9B-8CF1-7ED3935A9472\",\"endNode\":\"72577D28-D376-47E1-8979-B95C1D741C80\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1329,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[11],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"623344EE-1F68-4839-9EAB-87F1F918877B\",\"startNode\":\"72577D28-D376-47E1-8979-B95C1D741C80\",\"endNode\":\"22B10B36-DD63-4585-BF4F-1486CAF601CA\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":656,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[12],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"009FB7E3-659B-4C60-919D-B450644D249E\",\"startNode\":\"22B10B36-DD63-4585-BF4F-1486CAF601CA\",\"endNode\":\"C5567EE1-43CB-40BE-9113-2CB73B8BB17D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":616,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[13],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"34485F1F-33FD-4579-8042-8C0EF10E3970\",\"startNode\":\"5649CD5D-4D2A-4BF7-8C77-C8140A9AB6C8\",\"endNode\":\"C5567EE1-43CB-40BE-9113-2CB73B8BB17D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":61,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[14],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E0AB476C-F8E4-49C3-B427-A0E01DAA3B8A\",\"startNode\":\"6A9A6EF3-EA35-4426-B527-F87A8B735590\",\"endNode\":\"48233DFB-AB1E-41E9-ADAB-559497070203\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":307,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[15],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"6BFFAF95-DA26-4A00-8035-8EB7025AFA7B\",\"startNode\":\"48233DFB-AB1E-41E9-ADAB-559497070203\",\"endNode\":\"F1D97C69-0E00-41D1-AB7F-C7B32726E850\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1653,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[16],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C3AA1D2F-D12F-406A-AA35-AAF8F52BF770\",\"startNode\":\"EDD1FC1D-CAC1-47EB-A365-B2E910ECA745\",\"endNode\":\"F1D97C69-0E00-41D1-AB7F-C7B32726E850\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":465,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[17],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"088A5673-53E5-4CDA-9FD2-BC02D4E9295A\",\"startNode\":\"F1D97C69-0E00-41D1-AB7F-C7B32726E850\",\"endNode\":\"1260179D-692E-49DF-BE63-FB0B268AE11D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":287,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[18],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B1D2095E-322C-4F40-B161-67F4DFA6C2B0\",\"startNode\":\"1260179D-692E-49DF-BE63-FB0B268AE11D\",\"endNode\":\"6E174DFA-E91B-4BAD-A766-EEE7FF9E0676\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":178,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[19],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D58100DC-58A7-4754-8004-8C00D605B916\",\"startNode\":\"1260179D-692E-49DF-BE63-FB0B268AE11D\",\"endNode\":\"CD0B123C-8396-4911-9F51-6D12CFEF572D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":235,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[20],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C2486D5E-5CCC-4178-A7D4-922F4193A158\",\"startNode\":\"CD0B123C-8396-4911-9F51-6D12CFEF572D\",\"endNode\":\"281AE9FC-AC48-46E6-B4BE-A650EF741304\",\"form\":\"tidalRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":454,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[21],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"6B324BCE-B60F-4A93-9561-6C2ADE945699\",\"startNode\":\"98B1410D-4E58-471E-A3EF-4DD470DA24AD\",\"endNode\":\"281AE9FC-AC48-46E6-B4BE-A650EF741304\",\"form\":\"tidalRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":150,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[22],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5C265AAC-8FCF-4A45-9D25-6796018F11AC\",\"startNode\":\"281AE9FC-AC48-46E6-B4BE-A650EF741304\",\"endNode\":\"462EE58C-B10C-40A1-AF40-CB383F44B8E5\",\"form\":\"tidalRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":334,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[23],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"2E5F5F0B-26B2-4BAE-96DA-373CF028A57F\",\"startNode\":\"038DA771-366D-4810-AFC8-0D88134B535D\",\"endNode\":\"6E174DFA-E91B-4BAD-A766-EEE7FF9E0676\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":920,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[24],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"42FD2871-77D3-4A2A-8623-C9EBA7B6DE57\",\"startNode\":\"6E174DFA-E91B-4BAD-A766-EEE7FF9E0676\",\"endNode\":\"61750415-D1FC-4AF9-9D06-F8B54E55B148\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":64,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[25],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"48CAD726-A2DA-4566-B5B7-FABD111FC943\",\"startNode\":\"61750415-D1FC-4AF9-9D06-F8B54E55B148\",\"endNode\":\"1B6AF741-11E2-420A-AD0D-AD1DAAF2657D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":146,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[26],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8D08830F-2B7C-4A3F-9016-FC671CB3C21A\",\"startNode\":\"61750415-D1FC-4AF9-9D06-F8B54E55B148\",\"endNode\":\"CF533D9B-BEF6-43E0-8AF7-8EF5030021CF\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":57,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[27],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8236B932-BA6F-454B-A6DD-ABE4A1822270\",\"startNode\":\"CF533D9B-BEF6-43E0-8AF7-8EF5030021CF\",\"endNode\":\"65E498D9-EB06-499B-90C6-8D2CF8DCE48D\",\"form\":\"tidalRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":179,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[28],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B1DE22D1-C8A5-4E90-B8E0-6D2C5E411C0C\",\"startNode\":\"1B6AF741-11E2-420A-AD0D-AD1DAAF2657D\",\"endNode\":\"65E498D9-EB06-499B-90C6-8D2CF8DCE48D\",\"form\":\"tidalRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":121,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[29],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5F33F9E5-93B2-474B-90F5-652911E52E62\",\"startNode\":\"65E498D9-EB06-499B-90C6-8D2CF8DCE48D\",\"endNode\":\"98B1410D-4E58-471E-A3EF-4DD470DA24AD\",\"form\":\"tidalRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":214,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[30],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"96AD0700-CF11-41FB-9002-33F50A0BD3FD\",\"startNode\":\"1F388FB9-2E98-4421-91E5-BB39CE953957\",\"endNode\":\"175CB59C-46B3-4668-A993-14487FD2F8CC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":668,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[31],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C1F8B179-A25D-4F79-90D8-61A4CC1D2333\",\"startNode\":\"FF687202-E16F-47EB-8AF5-574A6DAC66B6\",\"endNode\":\"175CB59C-46B3-4668-A993-14487FD2F8CC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":110,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[32],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"90956055-AA0D-44D0-B0C6-60DADB0ED751\",\"startNode\":\"175CB59C-46B3-4668-A993-14487FD2F8CC\",\"endNode\":\"E431CEB2-0DCC-4EDC-818A-52922FA69B27\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":37,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[33],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C42768C8-7C7C-4AA2-847A-A9F69E73326D\",\"startNode\":\"E431CEB2-0DCC-4EDC-818A-52922FA69B27\",\"endNode\":\"536DD0CA-379D-4773-B6DE-7309EDC182F6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":593,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[34],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"32353BE5-BA67-4925-B811-D4AA885AC55D\",\"startNode\":\"536DD0CA-379D-4773-B6DE-7309EDC182F6\",\"endNode\":\"46290F17-11C6-4311-BA36-6AA52CE9BDC3\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1620,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[35],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"6B54C38D-4141-422A-B537-A25627160543\",\"startNode\":\"603121F7-4AFF-430B-ADEB-1FA155BE4208\",\"endNode\":\"46290F17-11C6-4311-BA36-6AA52CE9BDC3\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":301,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[36],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"2E126743-E3FE-4838-B9A4-6B952975477F\",\"startNode\":\"46290F17-11C6-4311-BA36-6AA52CE9BDC3\",\"endNode\":\"5BD9A705-DAF1-4944-ACA8-FAF402CD33C6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":983,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[37],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"6115F3BF-D524-48FF-BE27-CAED8C87A577\",\"startNode\":\"F483D34C-4DC8-4AF4-8688-4D5DD32B9605\",\"endNode\":\"8B4A02E0-7E09-4E81-B684-474CDB051D5C\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":103,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[38],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"09F971E1-1E96-43FE-87B0-CF3C7E81FAC2\",\"startNode\":\"E36A2924-947C-4BF1-9583-FCDC10CF94C0\",\"endNode\":\"5BD9A705-DAF1-4944-ACA8-FAF402CD33C6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":236,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[39],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5F8C3933-E890-4F42-A90D-A94B8427A301\",\"startNode\":\"5BD9A705-DAF1-4944-ACA8-FAF402CD33C6\",\"endNode\":\"06CAF757-AF37-4CED-A29A-F9731F0B9A74\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":486,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[40],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"DCDAA40A-C4DB-432A-93F0-403FE29E32E9\",\"startNode\":\"6507723F-BE94-4B4F-9D73-39BE3B259473\",\"endNode\":\"6447F990-B55F-42BD-8112-03B905A8CE0C\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":224,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[41],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"92690DB7-09EF-4621-8A5E-0D28422B7736\",\"startNode\":\"6447F990-B55F-42BD-8112-03B905A8CE0C\",\"endNode\":\"48233DFB-AB1E-41E9-ADAB-559497070203\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1230,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[42],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"14C00BB9-0BA0-4537-A602-876FC4640083\",\"startNode\":\"CD32F251-0F18-4DCD-AEC3-B6B05056D7FC\",\"endNode\":\"A41C2B1C-F3C7-4294-97CF-4989A4B13A50\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1649,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[43],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"CB085137-E6CD-49C7-BEAA-ACE39743E4EC\",\"startNode\":\"4F956D3A-5FC9-4016-835D-803612B76A8A\",\"endNode\":\"A41C2B1C-F3C7-4294-97CF-4989A4B13A50\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":307,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[44],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E3C22A18-B8A6-48F9-8371-7F8564FDB8B3\",\"startNode\":\"E4D60C55-DDD9-4AD4-B70E-9AD1FD88F8FB\",\"endNode\":\"6B93C6AC-B0C5-4520-B248-1F6E3B0C6FC8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":663,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[45],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"956158E6-A7B1-4281-9014-421AC8449E35\",\"startNode\":\"A41C2B1C-F3C7-4294-97CF-4989A4B13A50\",\"endNode\":\"6B93C6AC-B0C5-4520-B248-1F6E3B0C6FC8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":166,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[46],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7A2E131D-EE25-4CBD-9080-B5BBDF78186A\",\"startNode\":\"6B93C6AC-B0C5-4520-B248-1F6E3B0C6FC8\",\"endNode\":\"B53DC151-DC40-49AB-A2F1-C2CB67FB7D61\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":117,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[47],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"692A6091-B9B7-445C-9571-1FC067070F8E\",\"startNode\":\"B2A372FA-4919-4074-98B0-EE499985BD7E\",\"endNode\":\"B53DC151-DC40-49AB-A2F1-C2CB67FB7D61\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":105,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[48],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"965A7C78-4627-45FD-AFCA-325ED7749DF4\",\"startNode\":\"B53DC151-DC40-49AB-A2F1-C2CB67FB7D61\",\"endNode\":\"02191D05-ED78-46D4-B6AF-7DE610F641CD\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":2228,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[49],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E10D3196-D9FD-4874-82AF-615192F23064\",\"startNode\":\"392C9FDF-011E-4FED-8034-8C06118E5EF9\",\"endNode\":\"02191D05-ED78-46D4-B6AF-7DE610F641CD\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":412,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[50],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E596ADA6-C2BE-40D4-9B2F-454BF68D9E93\",\"startNode\":\"02191D05-ED78-46D4-B6AF-7DE610F641CD\",\"endNode\":\"18315417-4E86-4671-9B63-58A7D7F65E3E\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":102,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[51],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"27644724-7D54-41C1-824E-7B9F2C9FAC64\",\"startNode\":\"18315417-4E86-4671-9B63-58A7D7F65E3E\",\"endNode\":\"1139CDED-56F5-49B4-841A-FBCCD813F614\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":529,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[52],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"58F165C8-FDFB-49E2-9EA4-75905905B1BE\",\"startNode\":\"627159DB-4C4B-4CA4-9E38-8975D0230145\",\"endNode\":\"E5474FD0-C696-4B4A-ACF6-BA096E9F482C\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1499,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[53],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"6C95CF5E-D871-4C05-AF1F-4EEF0797C271\",\"startNode\":\"E5474FD0-C696-4B4A-ACF6-BA096E9F482C\",\"endNode\":\"246FB825-EF42-4165-AF9F-07D609A64FAB\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":27,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[54],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"1752AAC4-ABAF-4284-A768-EF4E41757817\",\"startNode\":\"D7A9FE01-700F-4B8D-A260-FB245B175AE8\",\"endNode\":\"D6634043-0D30-4A0F-947F-DDB5AC97B1F2\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":818,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[55],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"72B264D8-3BCB-4373-8AAE-FC3F0B777833\",\"startNode\":\"D6634043-0D30-4A0F-947F-DDB5AC97B1F2\",\"endNode\":\"569C35B9-2FAC-4B77-9681-B0E02B3F54F8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":636,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[56],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"0760D93C-69D8-4CA9-84E2-AC3BA6E16FE5\",\"startNode\":\"569C35B9-2FAC-4B77-9681-B0E02B3F54F8\",\"endNode\":\"DA17D129-80B7-4087-B806-02DDC07DAA99\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":2845,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[57],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"A9017F7C-D8C3-4655-A6B5-3502A549F5C2\",\"startNode\":\"DA17D129-80B7-4087-B806-02DDC07DAA99\",\"endNode\":\"1E5DFAB8-55DE-4558-BC58-04FD0D729708\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1980,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[58],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"21175CEA-60B9-48FC-A832-4419D924F83A\",\"startNode\":\"1E5DFAB8-55DE-4558-BC58-04FD0D729708\",\"endNode\":\"97002789-804A-4B1C-8CD2-4684D9108E26\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":778,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[59],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E5B6D170-324E-4C47-BE05-CC174B6BF1D6\",\"startNode\":\"97002789-804A-4B1C-8CD2-4684D9108E26\",\"endNode\":\"CD32F251-0F18-4DCD-AEC3-B6B05056D7FC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":845,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[60],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D8D1C031-D341-4D1B-BADF-291CA0D6CA99\",\"startNode\":\"69544140-3528-42D0-9865-1449BCBA439F\",\"endNode\":\"CF106E3A-4AA3-416B-A48C-818CE0847D14\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":2236,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[61],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"76575344-14C3-472E-A08D-8DB611DD76A3\",\"startNode\":\"CF106E3A-4AA3-416B-A48C-818CE0847D14\",\"endNode\":\"5B88FBC5-3209-44AE-BE03-AB12E0ECF682\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":402,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[62],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"697456DB-42EF-44D1-9539-60837FDFA56A\",\"startNode\":\"5B88FBC5-3209-44AE-BE03-AB12E0ECF682\",\"endNode\":\"D7A9FE01-700F-4B8D-A260-FB245B175AE8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":489,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[63],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"33ADDC23-14FE-4AB1-AD21-7B32FFB1BD03\",\"startNode\":\"C1D22860-20B1-426B-B6A4-077FC9942BCD\",\"endNode\":\"BF9B4403-BE76-4E6B-887B-9DEECBFA27D8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":648,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[64],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"741BF8AD-CDA2-44B8-8699-283ACE773B3F\",\"startNode\":\"BF9B4403-BE76-4E6B-887B-9DEECBFA27D8\",\"endNode\":\"C604B15A-A016-414E-946E-6A50ABE76B50\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":992,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[65],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"806A1B0A-42B7-4E3C-B758-3D638CED5BC8\",\"startNode\":\"C604B15A-A016-414E-946E-6A50ABE76B50\",\"endNode\":\"04850E94-7C72-4BF8-933C-BA8C2234136D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":144,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[66],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"44E81B46-78CE-4CC5-8B33-894BA23157DA\",\"startNode\":\"04850E94-7C72-4BF8-933C-BA8C2234136D\",\"endNode\":\"590A2134-DE1B-4680-8A58-B50FB87E263D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":612,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[67],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"54006E53-CC6F-4114-A6E1-EAF19965EE6C\",\"startNode\":\"590A2134-DE1B-4680-8A58-B50FB87E263D\",\"endNode\":\"73C0F1AF-B815-4702-A4EC-96435422A8CA\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":2347,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[68],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"4D230C70-25CB-4546-8D9E-EBBD54D985E0\",\"startNode\":\"AD0F1824-753B-456A-99A4-AB9507880021\",\"endNode\":\"69544140-3528-42D0-9865-1449BCBA439F\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1505,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[69],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B8834582-41EB-4393-9932-13D22D5AA115\",\"startNode\":\"73C0F1AF-B815-4702-A4EC-96435422A8CA\",\"endNode\":\"AD0F1824-753B-456A-99A4-AB9507880021\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":271,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[70],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"4FCEA2A5-143A-4FDA-A8DC-E1A15AD09057\",\"startNode\":\"C817B9BC-69E0-4156-BB87-A5B8D57EC806\",\"endNode\":\"263D7605-8942-4D85-B8BE-4B0B58FC3F36\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1084,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[71],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"2FEE596B-0644-4C7C-89D9-CA4493996701\",\"startNode\":\"B748595D-7AC2-40DD-9BAF-D3F62F37B92B\",\"endNode\":\"4726A42A-12C2-4D8C-AFF1-A5ED1246B6EC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":389,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[72],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"FD26B181-4FED-4344-816C-033C7068D1D5\",\"startNode\":\"263D7605-8942-4D85-B8BE-4B0B58FC3F36\",\"endNode\":\"7B19EB5C-CF68-472B-8F8E-711A01419E43\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1056,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[73],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E60EBADA-6EB7-4A62-BB14-518BBA1283E4\",\"startNode\":\"6DA2CA63-A4E3-40E1-B4F7-A71004E84668\",\"endNode\":\"B748595D-7AC2-40DD-9BAF-D3F62F37B92B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":995,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[74],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7FFBF80D-EEAF-436A-9EC8-9E26B7D6BD6E\",\"startNode\":\"7B19EB5C-CF68-472B-8F8E-711A01419E43\",\"endNode\":\"83192ABB-405E-4FEC-A40A-861F01678B47\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":20,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[75],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5E6FD935-0468-40B2-B409-C6083FE045BD\",\"startNode\":\"DDA4317E-A89A-44F6-BD51-39DA150EBFFF\",\"endNode\":\"AD36269E-62F2-4AAB-84A7-18C9E9E6C5B5\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":646,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[76],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D2E6471E-5B72-4A79-B85B-22B22FBBF161\",\"startNode\":\"83192ABB-405E-4FEC-A40A-861F01678B47\",\"endNode\":\"C116B8CB-C50E-4108-8B62-E22A1DD81CAC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":762,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[77],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7930DB72-A407-4200-BCA3-80FE23CCF117\",\"startNode\":\"AD36269E-62F2-4AAB-84A7-18C9E9E6C5B5\",\"endNode\":\"6DA2CA63-A4E3-40E1-B4F7-A71004E84668\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":417,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[78],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"FD16F88A-B91B-407E-809B-A7E9DDE7614F\",\"startNode\":\"C116B8CB-C50E-4108-8B62-E22A1DD81CAC\",\"endNode\":\"B1CFF2B0-59BE-4C53-BCF1-D062475AA2BC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":401,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[79],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"DB37622F-1A37-4A98-8D69-EA4C0C2F4519\",\"startNode\":\"D75EA2AF-9F64-49B9-82B0-247E137B169C\",\"endNode\":\"C1D22860-20B1-426B-B6A4-077FC9942BCD\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1992,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[80],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E6E000EF-A5B0-4AF0-B051-81A431DEF17A\",\"startNode\":\"B1CFF2B0-59BE-4C53-BCF1-D062475AA2BC\",\"endNode\":\"421BB577-B4CA-420C-AB01-A41A282EDC14\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":385,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[81],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8630D186-ACD8-4797-BD8B-61BA121555A6\",\"startNode\":\"CC876838-B390-41E9-9950-25944B1CBA90\",\"endNode\":\"4AB0CF2A-D562-4996-A437-9B0BD04D0238\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":405,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[82],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"3D346412-C8D2-4B7E-9BF4-EDCADE3C4CB3\",\"startNode\":\"4AB0CF2A-D562-4996-A437-9B0BD04D0238\",\"endNode\":\"C5664699-E6E4-4489-AFB4-306707353AA2\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1283,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[83],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"32B4BC97-D487-4478-BEB1-7F9268E51E15\",\"startNode\":\"F45CC587-963C-47B3-B03C-77C299B8812D\",\"endNode\":\"C5664699-E6E4-4489-AFB4-306707353AA2\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":96,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[84],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"82358C1D-1E8E-445E-973F-2AEBC2208C21\",\"startNode\":\"C5664699-E6E4-4489-AFB4-306707353AA2\",\"endNode\":\"85FD50A9-5F87-485D-A41C-5920ABA41E50\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":946,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[85],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C94500C9-4612-4460-8B51-57F1C8A5C3BD\",\"startNode\":\"85FD50A9-5F87-485D-A41C-5920ABA41E50\",\"endNode\":\"DDA4317E-A89A-44F6-BD51-39DA150EBFFF\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1102,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[86],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5D1C5140-1E69-4706-ACB7-D10CF738B1EF\",\"startNode\":\"2AFA516C-4E06-4B8B-BC0E-1D9B7A791E70\",\"endNode\":\"DDA4317E-A89A-44F6-BD51-39DA150EBFFF\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":120,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[87],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E2CEEC5B-ECC8-45A2-9703-174023663C86\",\"startNode\":\"D41D493F-1216-4018-8F42-9EF77AF0DE0D\",\"endNode\":\"CC876838-B390-41E9-9950-25944B1CBA90\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":576,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[88],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"856E553D-2985-41F2-87A9-22AA6B0BA01F\",\"startNode\":\"5CE67990-1730-40A8-8FED-4C54B335AA3A\",\"endNode\":\"00779897-84C6-4105-A632-120EA0B91866\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":63,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[89],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5A85D51D-24F3-4719-89B5-378E68E80E22\",\"startNode\":\"00779897-84C6-4105-A632-120EA0B91866\",\"endNode\":\"0BA1CBF8-FF63-46B8-B1ED-45D1EA6B643E\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":206,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[90],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"9145D940-6C6C-47EC-9E74-357FC317EE50\",\"startNode\":\"A4ECAEDF-7835-4228-8299-E183ED3CCBF2\",\"endNode\":\"D41D493F-1216-4018-8F42-9EF77AF0DE0D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":265,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[91],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"0D53FEBB-7618-4244-897A-7769AB3EC086\",\"startNode\":\"02F4EBE9-00FB-4DFE-9CAE-2CCBED0BCF6F\",\"endNode\":\"0BA1CBF8-FF63-46B8-B1ED-45D1EA6B643E\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":228,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[92],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"49178108-6BDD-41C1-81AF-AE3D41BA35BA\",\"startNode\":\"0BA1CBF8-FF63-46B8-B1ED-45D1EA6B643E\",\"endNode\":\"2DEA11A8-210F-4400-B12E-426900352012\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":513,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[93],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"002CBC9E-DEFF-4A8D-B0D0-28B8E754BF4D\",\"startNode\":\"284FBC14-1685-482A-9CE1-706A322FF88D\",\"endNode\":\"01F8C2CE-30F2-4E96-98B2-51B2CF260465\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1111,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[94],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D7AD9DB5-7A3E-4F33-84DD-5E7D6C8A8DF8\",\"startNode\":\"43D1FBFC-6A70-4B8F-97FC-BA03D44E13DD\",\"endNode\":\"B777413C-3EB4-488F-9099-DF253111C953\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1197,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[95],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7FD3936D-3E47-4446-B1FF-C4C16D9DB6C0\",\"startNode\":\"403BA50E-B275-43D5-842B-5019A436DF97\",\"endNode\":\"B3CDFA9C-F9DC-40FE-BC30-D714F80BAACB\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":848,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[96],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B39A2A79-C610-4971-8018-4B1A79C3DD13\",\"startNode\":\"5F40EA81-7D84-44D6-8209-8BD45F2FFB9D\",\"endNode\":\"403BA50E-B275-43D5-842B-5019A436DF97\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":303,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[97],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B801BDB5-D9B2-41F1-894D-85A1EBC9DDC4\",\"startNode\":\"B777413C-3EB4-488F-9099-DF253111C953\",\"endNode\":\"5F40EA81-7D84-44D6-8209-8BD45F2FFB9D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":445,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[98],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"3E088DC1-8959-4464-B731-A37D18691AEB\",\"startNode\":\"B3CDFA9C-F9DC-40FE-BC30-D714F80BAACB\",\"endNode\":\"3E1DC84B-5195-4A25-B041-8241FF3C6ADF\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":790,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[99],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"47CFAAA8-2A50-412F-B2BA-32AEBAE0876A\",\"startNode\":\"3E1DC84B-5195-4A25-B041-8241FF3C6ADF\",\"endNode\":\"00779897-84C6-4105-A632-120EA0B91866\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1354,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[100],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"F0BECFA6-9EF9-4542-92F2-87BB3FF51658\",\"startNode\":\"314A355E-D5C8-4EFB-9AC5-4FEE39D20BD4\",\"endNode\":\"AACEF031-B5F0-45E4-847D-76DB19A982E0\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":894,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[101],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"33EE6229-BAD6-4973-A268-44A9247C2A4D\",\"startNode\":\"AACEF031-B5F0-45E4-847D-76DB19A982E0\",\"endNode\":\"6DB73E33-8621-4D3F-928C-E40593541D32\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":156,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[102],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5FED79F9-DCD7-4526-A6E8-ACA95740425C\",\"startNode\":\"34957072-1EC4-4EFB-9929-5903600FED69\",\"endNode\":\"E3344E44-29A2-48F5-8C09-6FADE3E0A443\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":132,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[103],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"BD7FAAA9-46F0-4C77-ACCF-49A61601E0D2\",\"startNode\":\"E3344E44-29A2-48F5-8C09-6FADE3E0A443\",\"endNode\":\"974077E7-5B1D-492B-8DC9-6247664CE7E0\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":526,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[104],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"53399B71-0B24-410F-97A1-78C697228B48\",\"startNode\":\"7D92492B-7904-4110-BF68-5A654F3B56F7\",\"endNode\":\"974077E7-5B1D-492B-8DC9-6247664CE7E0\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":193,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[105],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"92AE6BC8-BA43-4EC7-A2DC-455FADDD392F\",\"startNode\":\"EEA82326-CC1F-4951-A985-6DEF2B236BFC\",\"endNode\":\"D2BCE089-5AD6-44AB-ABED-BE444B23CF37\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":54,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[106],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"050E86AC-BDF8-45B9-8D9B-F92F9AD383A0\",\"startNode\":\"974077E7-5B1D-492B-8DC9-6247664CE7E0\",\"endNode\":\"1043FB8A-ECD4-4DF6-AF4C-73774FF66399\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":327,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[107],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"CEB138AF-5046-4808-94D8-89472331AF79\",\"startNode\":\"1043FB8A-ECD4-4DF6-AF4C-73774FF66399\",\"endNode\":\"85C03969-E6DD-43D2-8E02-972B4188AE40\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":504,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[108],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"302E6F51-8E10-49F3-BAE7-5E275D5E9D94\",\"startNode\":\"7D64F4B6-A2E4-4085-85E4-9F88F11E8E16\",\"endNode\":\"85C03969-E6DD-43D2-8E02-972B4188AE40\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":90,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[109],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8325FF33-6AAA-4C0F-80CA-4A1059C2D498\",\"startNode\":\"85C03969-E6DD-43D2-8E02-972B4188AE40\",\"endNode\":\"174EBF37-D5E3-43F3-9343-3E3EF7121FF8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":507,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[110],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C7F3B2E8-A80A-4337-B15F-588B1C3734C4\",\"startNode\":\"5BEDB126-02C8-41BE-A983-F66532E2312A\",\"endNode\":\"174EBF37-D5E3-43F3-9343-3E3EF7121FF8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":141,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[111],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"83B23BB4-9D50-48C5-B4B1-F1EDB7A31ECA\",\"startNode\":\"174EBF37-D5E3-43F3-9343-3E3EF7121FF8\",\"endNode\":\"D6A69967-32E5-4A72-B482-BF8A5A7BED60\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":592,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[112],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"DD060367-4513-45FE-9EC3-DD2D30667412\",\"startNode\":\"81873AC0-275A-4D01-A5FE-CAA775A3F18F\",\"endNode\":\"D6A69967-32E5-4A72-B482-BF8A5A7BED60\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":291,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[113],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B7573A2E-9922-44F7-9C91-DBE46A001D55\",\"startNode\":\"50DD55A1-E747-44F2-9B23-E0D0AD7F9580\",\"endNode\":\"C862DA7B-DDDC-46B5-A87B-3E4B20DEA0F6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":533,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[114],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"86E8F52C-5384-4B1C-B7D3-ABF1F9B21A59\",\"startNode\":\"69E60CBD-88BB-4A1B-BDAB-CB36E2ED0C4F\",\"endNode\":\"5074184B-CC13-4454-9D94-7DF949B6474A\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1489,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[115],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"877CCB23-D1C5-49AE-B1FC-C1920952108E\",\"startNode\":\"5074184B-CC13-4454-9D94-7DF949B6474A\",\"endNode\":\"D536FE18-6B70-4357-A39B-67332334501D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":471,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[116],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7F03E3B8-2219-4F46-81FA-66EBCC7C2DD5\",\"startNode\":\"D536FE18-6B70-4357-A39B-67332334501D\",\"endNode\":\"314A355E-D5C8-4EFB-9AC5-4FEE39D20BD4\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":863,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[117],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"F447B512-D11D-40C5-A9DA-C69B774F2F8F\",\"startNode\":\"9A0AA1FC-0ED7-4EC6-B800-A5F536DD4B9D\",\"endNode\":\"17B67A12-97BC-4231-98F3-5C2960158298\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":115,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[118],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"F88F6C1F-3AE3-468D-A9F0-A165CE194234\",\"startNode\":\"6DB73E33-8621-4D3F-928C-E40593541D32\",\"endNode\":\"9A0AA1FC-0ED7-4EC6-B800-A5F536DD4B9D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":617,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[119],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"694D151C-EBEA-49AB-8E0D-6F9A60463B16\",\"startNode\":\"97BE6F73-67AA-4A35-83F2-275C5D65F339\",\"endNode\":\"34957072-1EC4-4EFB-9929-5903600FED69\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":548,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[120],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"24AF6377-F141-4370-A9BE-7F5F6DA19D44\",\"startNode\":\"CFB46C2A-EB8B-4669-B2FF-DA230648778C\",\"endNode\":\"34957072-1EC4-4EFB-9929-5903600FED69\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":141,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[121],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8B80C080-3530-40FB-B01C-D441FCCF95C0\",\"startNode\":\"FF41E397-9380-442D-A43D-C78EBC4C0EA5\",\"endNode\":\"6DB73E33-8621-4D3F-928C-E40593541D32\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":192,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[122],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8190D3B5-4CF6-4492-971B-2D1CDA3575B3\",\"startNode\":\"2A0EE4A5-F27B-4194-BFBA-307C4EB36D5F\",\"endNode\":\"E04D9D19-4C37-43C5-A566-32601149885B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":2072,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[123],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"71C9ECA9-4F1D-471A-BD98-03B7A12AB84D\",\"startNode\":\"E04D9D19-4C37-43C5-A566-32601149885B\",\"endNode\":\"09C94578-7DE4-42D8-9D4D-6D880ACD9B71\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":924,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[124],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"911EF50C-5AEE-4477-9456-8B1D5A96B02C\",\"startNode\":\"09C94578-7DE4-42D8-9D4D-6D880ACD9B71\",\"endNode\":\"B3F135A0-D109-4A10-AC0D-CFB60929797E\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":61,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[125],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B7384900-BEAC-471E-8F36-97043F3BEA73\",\"startNode\":\"B3F135A0-D109-4A10-AC0D-CFB60929797E\",\"endNode\":\"02DCE2B6-266E-4A44-824B-B9F6865BBBA6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":250,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[126],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"346B2027-5A66-497A-9B1D-5E1AD063FFEE\",\"startNode\":\"02DCE2B6-266E-4A44-824B-B9F6865BBBA6\",\"endNode\":\"6341085F-ECE0-4E78-8906-58DE19BAF327\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":351,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[127],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"A7A0B40C-7187-46A7-8F6C-B8FB7DBB8287\",\"startNode\":\"3A2B8EC9-EBA9-4625-A5B5-DEA419BBD3C6\",\"endNode\":\"91C4F6A6-A681-4D60-8001-85A4DC0893AB\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1249,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[128],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"62C20CD2-0AAA-4693-B63C-B05D6AEDE154\",\"startNode\":\"6341085F-ECE0-4E78-8906-58DE19BAF327\",\"endNode\":\"3A2B8EC9-EBA9-4625-A5B5-DEA419BBD3C6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":551,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[129],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"6C3D9517-7A3B-4D58-A614-6CB077B0E64C\",\"startNode\":\"74BE37E1-7E57-40ED-AA6F-6C663F1DC6BD\",\"endNode\":\"3A2B8EC9-EBA9-4625-A5B5-DEA419BBD3C6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":114,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[130],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"408F7AB7-5F6A-4DCE-9939-173A6E0EF69D\",\"startNode\":\"E11893FE-528D-41E7-B1BB-826C6FB60E8E\",\"endNode\":\"6341085F-ECE0-4E78-8906-58DE19BAF327\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":37,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[131],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"EFB3936E-4C48-4E74-981D-B4A8C9C451A9\",\"startNode\":\"91C4F6A6-A681-4D60-8001-85A4DC0893AB\",\"endNode\":\"2FF9A7AE-CCD3-4F7C-AB6C-93B782E3CC84\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1060,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[132],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"0F9D9EFB-6C01-4B1E-AD74-BED3192BBA07\",\"startNode\":\"2FF9A7AE-CCD3-4F7C-AB6C-93B782E3CC84\",\"endNode\":\"50DD55A1-E747-44F2-9B23-E0D0AD7F9580\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":301,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[133],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D9F730B2-441C-4ABD-8A1F-42611340A138\",\"startNode\":\"D6A69967-32E5-4A72-B482-BF8A5A7BED60\",\"endNode\":\"284FBC14-1685-482A-9CE1-706A322FF88D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":647,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[134],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"A0C5285A-6712-4BD8-963D-0E52FD18E76E\",\"startNode\":\"2B31B111-41C8-4389-BAF1-9F3294FB1973\",\"endNode\":\"2E0791F9-C068-4F16-90BB-F73BD822DED7\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1289,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[135],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"EE50A46B-C304-45F8-8C30-B88472AA7825\",\"startNode\":\"E7E267E2-DAB7-42F0-B86B-EF4097EFBDC0\",\"endNode\":\"2B31B111-41C8-4389-BAF1-9F3294FB1973\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":77,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[136],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"05E91658-7428-4B16-B5F0-582BA95C4C0E\",\"startNode\":\"2E0791F9-C068-4F16-90BB-F73BD822DED7\",\"endNode\":\"04F8D1AC-B273-4551-95BE-62FC2A896751\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":872,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[137],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"76F3E68D-4636-49C3-B4A4-34915843B597\",\"startNode\":\"04F8D1AC-B273-4551-95BE-62FC2A896751\",\"endNode\":\"F9BD3C3F-0A00-4EA0-9A6C-9480EF99C99F\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1117,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[138],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B7241EF3-A100-4025-820C-4A610850F8E7\",\"startNode\":\"F9BD3C3F-0A00-4EA0-9A6C-9480EF99C99F\",\"endNode\":\"2A0EE4A5-F27B-4194-BFBA-307C4EB36D5F\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":2720,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[139],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8DFCB398-5241-436E-9E7C-42FCA75CCBE2\",\"startNode\":\"9AED493C-48B5-4968-AB1F-F8260C522EEE\",\"endNode\":\"332FB702-93DB-4D5F-BCAD-96538015C8EE\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":669,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[140],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5429087C-CF3F-41F9-8FF7-8D913C51A6EC\",\"startNode\":\"332FB702-93DB-4D5F-BCAD-96538015C8EE\",\"endNode\":\"6CEE9E6C-A807-4EA6-9C48-BA1C92645121\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":158,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[141],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B1BA1574-DABA-487C-92AD-F76DB2D1556D\",\"startNode\":\"6CEE9E6C-A807-4EA6-9C48-BA1C92645121\",\"endNode\":\"C1282B42-639F-4C9C-AC29-927C0D8525CC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":674,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[142],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"1997FA53-1B74-481D-A029-CEFA9529F6E9\",\"startNode\":\"C1282B42-639F-4C9C-AC29-927C0D8525CC\",\"endNode\":\"3B381727-7B07-4B29-9EE6-5B6090E7676A\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":976,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[143],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D26F7F91-5064-460E-8D1B-1CE41A0A2B71\",\"startNode\":\"3B381727-7B07-4B29-9EE6-5B6090E7676A\",\"endNode\":\"575526FA-7070-4840-B3D4-A0527CC548E4\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":213,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[144],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8C8B9518-A7F7-4FA9-A072-063DF39700E6\",\"startNode\":\"575526FA-7070-4840-B3D4-A0527CC548E4\",\"endNode\":\"CB5629FF-FD5E-48A3-98CC-869D88FBE9E6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":400,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[145],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"88D1F771-E22D-44B1-A648-16842EA7D4BC\",\"startNode\":\"CB5629FF-FD5E-48A3-98CC-869D88FBE9E6\",\"endNode\":\"80667810-F31F-479F-A649-AE763072B49A\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":271,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[146],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B8615F97-DB05-4D50-B792-4BB4C43B9F86\",\"startNode\":\"80667810-F31F-479F-A649-AE763072B49A\",\"endNode\":\"D3991260-B995-4FB5-87F5-F74A6C536357\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":302,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[147],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"1826A5A3-57A2-4C21-A747-8035AFE5F76E\",\"startNode\":\"D8AFEA9C-D404-4E14-B564-06794D8F3A8D\",\"endNode\":\"D3991260-B995-4FB5-87F5-F74A6C536357\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":103,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[148],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E9EB5F44-C400-4E90-8042-0A30A9E138BB\",\"startNode\":\"D3991260-B995-4FB5-87F5-F74A6C536357\",\"endNode\":\"B210FA9F-AE36-4167-AA75-C9E60635B336\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1364,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[149],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"48B28028-2293-4F76-8F3F-36816A39AA9B\",\"startNode\":\"B210FA9F-AE36-4167-AA75-C9E60635B336\",\"endNode\":\"B9A37525-766A-466D-A451-C8E059F758BF\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":143,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[150],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"6DDEC9AB-EDA3-4979-B085-10C09410E51D\",\"startNode\":\"B9A37525-766A-466D-A451-C8E059F758BF\",\"endNode\":\"E0696013-B5BD-477F-8F06-8D3756EBF92D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":515,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[151],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"67BE343C-6EC6-4AA7-ACB1-D63E2D8D3439\",\"startNode\":\"E0696013-B5BD-477F-8F06-8D3756EBF92D\",\"endNode\":\"BB1DDF44-3FFB-45EF-BECC-4B9113080E09\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":312,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[152],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"FD40D81A-3E63-4CAF-8AB8-A9157B2E1CD9\",\"startNode\":\"BB1DDF44-3FFB-45EF-BECC-4B9113080E09\",\"endNode\":\"E7E267E2-DAB7-42F0-B86B-EF4097EFBDC0\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1522,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[153],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"3614D3E1-8DFF-4213-BC1D-FD5D813A35A7\",\"startNode\":\"357C0B41-E5D1-4762-B4D7-3900581481B2\",\"endNode\":\"4EE09D1A-FA86-4687-A872-D019C48D8FC5\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":261,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[154],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8402269C-443A-4D50-A92F-5B28A465336B\",\"startNode\":\"4EE09D1A-FA86-4687-A872-D019C48D8FC5\",\"endNode\":\"9AED493C-48B5-4968-AB1F-F8260C522EEE\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1154,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[155],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7D62D1A8-CF6B-4C62-9677-F59802FC0A1C\",\"startNode\":\"67FF1616-5025-4496-B67D-E2A112132BA5\",\"endNode\":\"2124C7F4-6A59-43ED-BB5C-A85CB9D991AC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1376,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[156],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"956B7020-D1CD-4392-B0A8-1DA8D1D3DAB3\",\"startNode\":\"2124C7F4-6A59-43ED-BB5C-A85CB9D991AC\",\"endNode\":\"A33A586D-2D6B-4258-AE19-89AE6FC367D8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1304,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[157],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"805C6BD2-E51F-4C9B-A977-2BF85A76FF7F\",\"startNode\":\"A33A586D-2D6B-4258-AE19-89AE6FC367D8\",\"endNode\":\"3B9FD864-30AE-4F52-A74A-19756BDF7FE8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":284,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[158],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8E16D979-9524-4B61-9724-59EAE0ED31E3\",\"startNode\":\"3B9FD864-30AE-4F52-A74A-19756BDF7FE8\",\"endNode\":\"73495B18-E623-48C5-9A7D-33CAB6A4DBE6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":363,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[159],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"32E6613F-96F6-4EEE-B10E-C92D616ACD68\",\"startNode\":\"73495B18-E623-48C5-9A7D-33CAB6A4DBE6\",\"endNode\":\"357C0B41-E5D1-4762-B4D7-3900581481B2\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":911,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[160],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"123D84CC-8477-4775-B9A6-381F4D92805B\",\"startNode\":\"B1F2CBD9-E405-4E87-97E1-72588E115F94\",\"endNode\":\"357C0B41-E5D1-4762-B4D7-3900581481B2\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":98,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[161],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"30C01CAA-44A6-43E2-B28E-5311F4620BC4\",\"startNode\":\"8674B358-CC4F-4413-AB4A-5CB3CB5CEFD6\",\"endNode\":\"41E9293A-F28A-4CF9-8AC4-DE22C30F8306\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":553,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[162],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"568E0DBB-A844-4AFD-8CC3-DEC42720C9DC\",\"startNode\":\"568E64AD-A9AF-4D5A-8CA2-5ED32613CBB6\",\"endNode\":\"8674B358-CC4F-4413-AB4A-5CB3CB5CEFD6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":204,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[163],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"AC11E8BA-9982-4742-BF1B-04FD63BF6E27\",\"startNode\":\"51CB5B12-8518-40D5-9AC6-97E961298BAF\",\"endNode\":\"B5211A06-AEC2-417C-9D0F-A03B28DC1B1D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":36,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[164],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8B8338A4-387B-4F76-8F64-E4C8E00FBCA1\",\"startNode\":\"41E9293A-F28A-4CF9-8AC4-DE22C30F8306\",\"endNode\":\"F3331A13-053D-42CC-A974-933A36B89BA1\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":614,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[165],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"223065D0-7132-4996-827B-2605A26D0558\",\"startNode\":\"13EB9616-9D77-4B50-9433-A477F9151D29\",\"endNode\":\"3B2F8C20-62F7-48A7-8161-303BE6183301\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1259,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[166],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"73590963-542E-46CE-A3EE-483BDCC8855C\",\"startNode\":\"C1AEB77F-A5FF-44B3-BE0D-8FE98B30C245\",\"endNode\":\"67FF1616-5025-4496-B67D-E2A112132BA5\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":206,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[167],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"84C8FFD7-C5BD-496E-B01D-F491C95D7009\",\"startNode\":\"3B2F8C20-62F7-48A7-8161-303BE6183301\",\"endNode\":\"C1AEB77F-A5FF-44B3-BE0D-8FE98B30C245\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":244,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[168],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"08E65293-041E-490B-A480-F47600A79EFA\",\"startNode\":\"7B3595CC-BD7B-4D65-A04E-A66547F14DFA\",\"endNode\":\"F4404184-30B2-49A4-8539-F6BF3482A031\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":81,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[169],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B97DE34E-DEF9-42BA-8B6B-D578FC50249F\",\"startNode\":\"F4404184-30B2-49A4-8539-F6BF3482A031\",\"endNode\":\"AA54173A-2C5B-405E-B965-DD675CFA5561\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":158,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[170],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"0280B914-1A25-44A3-B823-2A4EFE20257E\",\"startNode\":\"80B04DCE-ECA6-4500-9B6D-C78C3C734588\",\"endNode\":\"AA7D52E0-6FDD-4CA5-A90E-AFE4DC3C7831\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":395,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[171],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B6D686FF-2F39-434E-9876-8EEB40E9E8FB\",\"startNode\":\"AA54173A-2C5B-405E-B965-DD675CFA5561\",\"endNode\":\"AA7D52E0-6FDD-4CA5-A90E-AFE4DC3C7831\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":306,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[172],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"CE80D772-208A-4297-9C19-5C63DB090D0A\",\"startNode\":\"AA7D52E0-6FDD-4CA5-A90E-AFE4DC3C7831\",\"endNode\":\"2EEC6E1E-B9A0-4ED9-8133-C7BBCE54E90B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":301,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[173],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D174769F-36EC-49BA-8DAD-FECC9F435221\",\"startNode\":\"1598EDBD-5F0D-4D16-BE09-A09EB94E281D\",\"endNode\":\"2EEC6E1E-B9A0-4ED9-8133-C7BBCE54E90B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":110,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[174],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"1EBF65A3-5163-4B3C-B9B9-4B70285B3FD1\",\"startNode\":\"2EEC6E1E-B9A0-4ED9-8133-C7BBCE54E90B\",\"endNode\":\"AEB0A1B8-A96D-46C1-B2E5-6B9026B3EBC5\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1180,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[175],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"94013371-B2C2-4B7F-A640-925966F6DE85\",\"startNode\":\"AEB0A1B8-A96D-46C1-B2E5-6B9026B3EBC5\",\"endNode\":\"08AB3FE0-854E-4373-BBB1-C7C9FAC84930\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1208,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[176],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"92F19462-3560-4FA8-B74A-37CE27A51E1D\",\"startNode\":\"00F4BC68-AB96-448A-B229-C14B004E942A\",\"endNode\":\"08AB3FE0-854E-4373-BBB1-C7C9FAC84930\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":52,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[177],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"58F48F76-0A0D-47B7-B79C-DA1090E069AE\",\"startNode\":\"08AB3FE0-854E-4373-BBB1-C7C9FAC84930\",\"endNode\":\"A155A0F2-A1C0-478A-BB3D-801FF72B1471\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1109,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[178],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"3CEEF85D-DFB1-479E-8321-C30FAB61D7E0\",\"startNode\":\"A155A0F2-A1C0-478A-BB3D-801FF72B1471\",\"endNode\":\"D8E27BDF-A878-4092-A0FD-4DF7D599AD6A\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":403,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[179],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8CD9CED1-25F7-472B-A8B9-D403D77906C7\",\"startNode\":\"D8E27BDF-A878-4092-A0FD-4DF7D599AD6A\",\"endNode\":\"B5211A06-AEC2-417C-9D0F-A03B28DC1B1D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1510,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[180],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"776F4152-1AF6-4CC8-8822-8EE30BA875BA\",\"startNode\":\"B5211A06-AEC2-417C-9D0F-A03B28DC1B1D\",\"endNode\":\"BCB06545-2DFE-4857-A5F3-920AE75584A6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":730,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[181],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"95784E8F-A49C-4209-AC32-74B69C4CED79\",\"startNode\":\"C4E22F8E-8CC7-4001-A900-92E8EFB41E87\",\"endNode\":\"BCB06545-2DFE-4857-A5F3-920AE75584A6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":47,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[182],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"501D6839-5D1F-4105-A2E7-02296ADE2D20\",\"startNode\":\"BCB06545-2DFE-4857-A5F3-920AE75584A6\",\"endNode\":\"8674B358-CC4F-4413-AB4A-5CB3CB5CEFD6\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":107,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[183],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"717E6A35-B3F1-42A1-A45D-44E9D50BD813\",\"startNode\":\"B5957662-207F-4C78-96BD-351A9F8F463B\",\"endNode\":\"F3331A13-053D-42CC-A974-933A36B89BA1\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":511,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[184],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"0CA7A6CF-5A78-44C6-9990-9FD410EE60A0\",\"startNode\":\"F3331A13-053D-42CC-A974-933A36B89BA1\",\"endNode\":\"E07922A3-EB0F-4256-96C6-956DBB4B7803\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":98,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[185],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"AEF24040-378A-4CC8-9D3C-55862468F024\",\"startNode\":\"E07922A3-EB0F-4256-96C6-956DBB4B7803\",\"endNode\":\"42A2C020-5613-42FE-B3F6-B7CDB43141C2\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":856,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[186],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D7C3AA06-49C6-4009-95B4-11E357F6941F\",\"startNode\":\"47B47273-0FED-4E86-BA69-9F1ADBE4FFD1\",\"endNode\":\"42A2C020-5613-42FE-B3F6-B7CDB43141C2\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":259,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[187],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"51B90BD1-9A4E-4FAC-9B01-91E8803A3DCF\",\"startNode\":\"42A2C020-5613-42FE-B3F6-B7CDB43141C2\",\"endNode\":\"2F3613D0-0F22-4E8C-8024-C080B45C2E6D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1564,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[188],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"070BBACB-CB0A-4DBB-9CAC-71EF7A10E168\",\"startNode\":\"2F3613D0-0F22-4E8C-8024-C080B45C2E6D\",\"endNode\":\"C59C16DC-F060-460A-8FAF-D86AEA53A929\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":628,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[189],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"2F8887D5-024D-4663-A054-5FA5A9557CAA\",\"startNode\":\"C59C16DC-F060-460A-8FAF-D86AEA53A929\",\"endNode\":\"C6CDA271-7BFE-4E81-A754-C773C87F54FE\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1417,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[190],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"669AF7F3-A6FB-4E1B-A29C-56C35792C095\",\"startNode\":\"C6CDA271-7BFE-4E81-A754-C773C87F54FE\",\"endNode\":\"29F7467A-14ED-46B3-A2FD-CE2ECFD73758\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1591,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[191],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"A8151013-0BBC-4D71-863A-996ED28F1F2F\",\"startNode\":\"29F7467A-14ED-46B3-A2FD-CE2ECFD73758\",\"endNode\":\"13EB9616-9D77-4B50-9433-A477F9151D29\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":355,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[192],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"F74A40EA-470C-4D4B-84A8-C2E0358CBAE5\",\"startNode\":\"2A717750-2E8D-487D-B4A6-0B72873C154D\",\"endNode\":\"760FA747-1B77-42C5-B8FE-A07BAFD6FE66\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1268,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[193],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C1D2F8DF-72E3-4825-A2B7-F7B094372A87\",\"startNode\":\"4A2D0624-807C-4EFE-AA81-BBA80FEC82B3\",\"endNode\":\"760FA747-1B77-42C5-B8FE-A07BAFD6FE66\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":133,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[194],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8DFA7424-263B-4D58-9D24-77F83D09DDBA\",\"startNode\":\"760FA747-1B77-42C5-B8FE-A07BAFD6FE66\",\"endNode\":\"9BA00987-CA0F-4256-86A5-729218167720\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":188,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[195],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"803810C3-27A2-4197-A2E8-AD1C1AB09E39\",\"startNode\":\"9BA00987-CA0F-4256-86A5-729218167720\",\"endNode\":\"F4404184-30B2-49A4-8539-F6BF3482A031\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1761,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[196],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B687EAD4-A99D-462A-AAD7-B9C92ADC77EE\",\"startNode\":\"BDB125DD-3803-4498-8644-72F2F545ED3B\",\"endNode\":\"297CEE28-81CF-474B-8E34-096FDE61BF54\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":334,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[197],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"EE0E91F3-B406-4FA3-B8CC-828F06FFC26D\",\"startNode\":\"297CEE28-81CF-474B-8E34-096FDE61BF54\",\"endNode\":\"AAD28F37-1BBD-4C07-A19B-1E1EA202ADE3\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1348,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[198],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"20A2EA6F-1136-4FCD-82AC-CBBF368A72AF\",\"startNode\":\"AAD28F37-1BBD-4C07-A19B-1E1EA202ADE3\",\"endNode\":\"408BA632-EC5A-44EC-BFC8-5E97CA703FDA\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":370,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[199],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"A28109C2-9937-4AB6-BCEC-375EAC97DC16\",\"startNode\":\"408BA632-EC5A-44EC-BFC8-5E97CA703FDA\",\"endNode\":\"A9A39E7D-052F-458F-8B9D-BA213DB89F77\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":262,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[200],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C938799E-17D6-4E62-A062-8F2DB9BD79E6\",\"startNode\":\"A9A39E7D-052F-458F-8B9D-BA213DB89F77\",\"endNode\":\"9248AA29-FA7B-401D-AFB6-0085B5909C23\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1105,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[201],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7EE02746-9F4F-4742-B846-CA353251BDB2\",\"startNode\":\"9248AA29-FA7B-401D-AFB6-0085B5909C23\",\"endNode\":\"4DCF2659-912F-4504-8F18-849F8B7C0B50\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1102,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[202],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7D244479-BFA3-4809-AF69-5252270D27F2\",\"startNode\":\"4DCF2659-912F-4504-8F18-849F8B7C0B50\",\"endNode\":\"C43BC65C-E2FB-4B7C-9821-821541DAD122\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":621,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[203],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"60B20531-DE1C-4AE9-919D-F32FFFC045FA\",\"startNode\":\"C43BC65C-E2FB-4B7C-9821-821541DAD122\",\"endNode\":\"E22FE5CE-4C9F-4F79-86DF-28AEE5E1B42E\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":3668,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[204],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"CC86A15B-06EB-45AC-B84E-FA74C6FABFCA\",\"startNode\":\"E22FE5CE-4C9F-4F79-86DF-28AEE5E1B42E\",\"endNode\":\"9375BCE6-251A-4DBD-BD56-0618DE7B8D75\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":189,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[205],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"051C020D-DC35-4C09-A109-22D67C7180FC\",\"startNode\":\"9375BCE6-251A-4DBD-BD56-0618DE7B8D75\",\"endNode\":\"6CF7F37F-B869-415C-91B9-0BDD2E918091\",\"form\":\"lake\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":433,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[206],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"78A94AC4-10B0-446A-A315-36BDABC10DEF\",\"startNode\":\"6CF7F37F-B869-415C-91B9-0BDD2E918091\",\"endNode\":\"6F138498-0680-4762-A6C3-BAA14D5E1739\",\"form\":\"lake\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1011,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[207],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"21580E6F-4A18-4A5A-8E85-B833AF710E61\",\"startNode\":\"6F138498-0680-4762-A6C3-BAA14D5E1739\",\"endNode\":\"D63250B8-CE7B-4093-A59B-D30789049A72\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":11,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[208],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"BE31104B-9D5B-4498-BEBD-C9EBADB0AF0B\",\"startNode\":\"D63250B8-CE7B-4093-A59B-D30789049A72\",\"endNode\":\"9339133F-F3DB-4216-87D3-B76620EA9861\",\"form\":\"lake\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":615,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[209],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"36F8E393-905B-415A-8BD9-DF12CE702066\",\"startNode\":\"9339133F-F3DB-4216-87D3-B76620EA9861\",\"endNode\":\"EC66A777-73A5-451E-9CC9-833FB27990EA\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":405,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[210],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5959FB1A-DFBC-40C5-AEC5-12D5073AE180\",\"startNode\":\"EC66A777-73A5-451E-9CC9-833FB27990EA\",\"endNode\":\"2A717750-2E8D-487D-B4A6-0B72873C154D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":123,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[211],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"1B2AC0BD-2C17-4953-9594-FE0CACF23D7E\",\"startNode\":\"FADDBB66-2C22-4A05-B590-41F28C3BCEFE\",\"endNode\":\"28EFFA43-460E-410D-B807-03C52E1A54D8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1731,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[212],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"3BC27F40-82AC-4198-B2B3-D9D70D24F63F\",\"startNode\":\"28EFFA43-460E-410D-B807-03C52E1A54D8\",\"endNode\":\"A9825F94-81D6-4B53-BCFA-0D0CFDD15783\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":12,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[213],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"1A701352-9C2D-425F-868F-519F013EA651\",\"startNode\":\"A9825F94-81D6-4B53-BCFA-0D0CFDD15783\",\"endNode\":\"BDB125DD-3803-4498-8644-72F2F545ED3B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":607,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[214],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"11D8878F-93CF-4C8D-AD62-4093313C91D3\",\"startNode\":\"2521114C-A616-4B82-919B-184DBD2493C1\",\"endNode\":\"BDB125DD-3803-4498-8644-72F2F545ED3B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":82,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[215],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B796DBD2-4C2E-4203-8A7A-D0D5D87FB874\",\"startNode\":\"D39E3199-100F-4252-A803-E03D3ABE780D\",\"endNode\":\"2B524E04-DB5E-48F4-9B18-1FA7E465F6B1\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":608,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[216],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"45C1AD86-E23C-42CD-A5DF-B3C1847C5EBA\",\"startNode\":\"4BF2F931-DEE6-4BDB-9D28-9755B75FC8B2\",\"endNode\":\"614C7E15-4589-456C-B870-068CB5698AD0\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":978,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[217],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"12980AFA-05D4-4542-9A8A-A88CBB3993A6\",\"startNode\":\"6A56AC6C-320F-4E8C-91C9-090498CF6492\",\"endNode\":\"614C7E15-4589-456C-B870-068CB5698AD0\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":84,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[218],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"CC197185-AE87-4700-B82A-1A2B7BBEA757\",\"startNode\":\"614C7E15-4589-456C-B870-068CB5698AD0\",\"endNode\":\"56B61C5E-FDC6-492F-ABA3-6FD069F9E2BC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1367,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[219],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"B39D35BD-625B-470E-A70D-7360EFA798EA\",\"startNode\":\"C53D3471-6686-4D36-96C6-2694BA4DDFAA\",\"endNode\":\"E91E070D-AAB7-4614-88E9-873CB0854B84\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":3746,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[220],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"1C45BFBE-094D-4F57-BECB-CFB687EB77FD\",\"startNode\":\"56B61C5E-FDC6-492F-ABA3-6FD069F9E2BC\",\"endNode\":\"C53D3471-6686-4D36-96C6-2694BA4DDFAA\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":157,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[221],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"A27C3FCA-C8DE-4FD4-BEA2-B1A14CB83926\",\"startNode\":\"E91E070D-AAB7-4614-88E9-873CB0854B84\",\"endNode\":\"4314849A-60DD-4ADD-BBE2-D04BC451D6F2\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1156,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[222],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"7DF877FA-3697-4B70-A9D7-63EBC73274DE\",\"startNode\":\"C5567EE1-43CB-40BE-9113-2CB73B8BB17D\",\"endNode\":\"E5B90FDD-F528-414E-A626-CB5E53853A1F\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":408,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[223],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"2560B046-9679-41EA-9E0F-D3DEA1B7A4F6\",\"startNode\":\"6646F3D7-71EA-411F-9773-54E246882856\",\"endNode\":\"D04F9735-3597-4F3A-9515-343DD1A5356C\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":67,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[224],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C9D1BDC0-422E-4E8E-97C3-9A74A3D2F79E\",\"startNode\":\"D04F9735-3597-4F3A-9515-343DD1A5356C\",\"endNode\":\"E5B90FDD-F528-414E-A626-CB5E53853A1F\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":99,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[225],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"F02303E4-D6A6-44A5-8C08-9440422EE42F\",\"startNode\":\"E5B90FDD-F528-414E-A626-CB5E53853A1F\",\"endNode\":\"81126C4E-FAE0-48FB-91DB-EAFFE4597237\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":405,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[226],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"3A49F799-BB2D-4881-8EF1-F407F85568AB\",\"startNode\":\"F019262B-AD43-4880-8AFF-B96DE1ACE9EA\",\"endNode\":\"22AF1BBD-C735-4342-B1F6-44B3073AA9F4\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":754,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[227],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C3417E25-5186-4A68-8BC7-3596672236F7\",\"startNode\":\"E286FD15-2B49-4A36-96DB-2858D467E8B3\",\"endNode\":\"3E1556D3-52D6-420E-876F-67388239C1DC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":57,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[228],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"CD43111E-D5F6-4D94-8B61-4840265B7AE3\",\"startNode\":\"9EB6B583-0D3E-4437-B255-56E2D256B76D\",\"endNode\":\"8B0A0E41-AC45-4B44-83BF-6A8B3A0D0592\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":180,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[229],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"07E92BDC-E196-49AE-8E3F-882223831FC4\",\"startNode\":\"8B0A0E41-AC45-4B44-83BF-6A8B3A0D0592\",\"endNode\":\"299EBB82-C66B-4AD7-A5C1-7D1564B2F6B5\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":283,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[230],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5CBF9E5C-52A9-4282-AC2C-EE3ADCBD5D4C\",\"startNode\":\"9C45F10A-22FA-466B-983D-0326AE5118AC\",\"endNode\":\"8B0A0E41-AC45-4B44-83BF-6A8B3A0D0592\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1762,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[231],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E1873889-0F84-47CE-A6B1-9D1129F3BBD1\",\"startNode\":\"76457108-E588-4825-99AB-16999EAC8D33\",\"endNode\":\"0ED5CC5A-C415-4D98-B040-F161365A4923\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":203,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[232],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"45C7B9F6-CC12-4E0C-8E9D-780D2C6D2D7D\",\"startNode\":\"A2A63847-899F-435E-B69F-764E1658BC2B\",\"endNode\":\"76457108-E588-4825-99AB-16999EAC8D33\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":753,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[233],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"41C48579-761D-4F8A-BD94-DFD2B7D26EB6\",\"startNode\":\"212B988D-06B4-4B98-8248-12B4FE07F47C\",\"endNode\":\"299EBB82-C66B-4AD7-A5C1-7D1564B2F6B5\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":212,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[234],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"AEFCE97B-2EB6-4783-96A9-B4ACF2E5F90A\",\"startNode\":\"299EBB82-C66B-4AD7-A5C1-7D1564B2F6B5\",\"endNode\":\"01269D3B-EEE8-45E3-88A7-22C6410A1FA8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":297,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[235],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"F6026E23-F1B3-4163-BC7E-C9E9D1DF2984\",\"startNode\":\"0B3906A6-5C63-447C-B0C8-0FCF6F523AA2\",\"endNode\":\"01269D3B-EEE8-45E3-88A7-22C6410A1FA8\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":217,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[236],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"ED11763A-FAD7-4658-9F20-17752C04DB1B\",\"startNode\":\"01269D3B-EEE8-45E3-88A7-22C6410A1FA8\",\"endNode\":\"A2A63847-899F-435E-B69F-764E1658BC2B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":127,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[237],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"3EDA0A49-5910-419A-96ED-42FF328EFC9A\",\"startNode\":\"64DBF809-544B-4FF0-84F0-0F7CAC51370C\",\"endNode\":\"A2A63847-899F-435E-B69F-764E1658BC2B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":27,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[238],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"1D4A2D0C-933D-401D-AAD2-0DEF60854FAF\",\"startNode\":\"3E1556D3-52D6-420E-876F-67388239C1DC\",\"endNode\":\"A69821A3-C53A-4A2B-8247-BD9CB3F78F33\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":2682,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[239],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"80A5116E-30AF-4912-8D5C-A9BDF95BE96F\",\"startNode\":\"A69821A3-C53A-4A2B-8247-BD9CB3F78F33\",\"endNode\":\"9C45F10A-22FA-466B-983D-0326AE5118AC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1108,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[240],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"9AED3835-4D24-44C6-A251-310A9C93155F\",\"startNode\":\"4314849A-60DD-4ADD-BBE2-D04BC451D6F2\",\"endNode\":\"FADDBB66-2C22-4A05-B590-41F28C3BCEFE\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1091,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[241],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"6BFDC70E-0DF8-4E02-ADFC-86EEBD644FF4\",\"startNode\":\"83797AD6-1A81-414B-BD7B-F19F2F7C3876\",\"endNode\":\"A58B7092-C90A-4653-86DA-6C21905A6C76\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1165,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[242],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"5D7E184D-0C01-41D7-B23A-C996BD11EA9F\",\"startNode\":\"A58B7092-C90A-4653-86DA-6C21905A6C76\",\"endNode\":\"274AFD35-8EFF-4D70-B118-9361286BD31B\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1194,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[243],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"24573DD1-BB68-4F42-9394-06F8CF41843C\",\"startNode\":\"274AFD35-8EFF-4D70-B118-9361286BD31B\",\"endNode\":\"C7590260-3681-4D60-AA28-ED204A8E1C76\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":927,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[244],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"A286DAA9-D38C-4692-8989-5C8575E28137\",\"startNode\":\"C7590260-3681-4D60-AA28-ED204A8E1C76\",\"endNode\":\"4AAD20F7-EEC7-4C85-8557-BDD78C7DAD03\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":660,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[245],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"36E10235-44E3-4489-8591-ECA21564814D\",\"startNode\":\"4AAD20F7-EEC7-4C85-8557-BDD78C7DAD03\",\"endNode\":\"FF3CA07B-0FCD-4602-916B-72684043F2FC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":200,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[246],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"FD15F9C5-784E-4C99-92E7-50BA556CDE06\",\"startNode\":\"FF3CA07B-0FCD-4602-916B-72684043F2FC\",\"endNode\":\"CB87E627-48EA-4C9F-8438-96764B7FE816\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":17,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[247],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"41045ED3-7307-4B8F-BA67-3922608863FC\",\"startNode\":\"CB87E627-48EA-4C9F-8438-96764B7FE816\",\"endNode\":\"D39E3199-100F-4252-A803-E03D3ABE780D\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":3696,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[248],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"96C1C8CB-2FC5-45DC-82A4-F0FCD6C2810F\",\"startNode\":\"81126C4E-FAE0-48FB-91DB-EAFFE4597237\",\"endNode\":\"F019262B-AD43-4880-8AFF-B96DE1ACE9EA\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":158,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[249],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"4D820C96-F959-4D64-A4E5-4B6E5851C632\",\"startNode\":\"22AF1BBD-C735-4342-B1F6-44B3073AA9F4\",\"endNode\":\"6A22BFAB-A6EE-45AC-B752-9282A6D4A156\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":688,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[250],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"9F7FC56E-F4C5-40CA-A8D0-D63A53562870\",\"startNode\":\"575BEC86-F3A4-460B-A34C-6A9967128D48\",\"endNode\":\"6A22BFAB-A6EE-45AC-B752-9282A6D4A156\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":44,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[251],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"050F1F2D-F406-4827-9791-2BC190E4712F\",\"startNode\":\"6A22BFAB-A6EE-45AC-B752-9282A6D4A156\",\"endNode\":\"C260E2FC-1438-4745-BFBE-2ACDE97568E3\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":322,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[252],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E2629B33-4CAD-43FD-995E-1E13858E506E\",\"startNode\":\"C260E2FC-1438-4745-BFBE-2ACDE97568E3\",\"endNode\":\"3E1556D3-52D6-420E-876F-67388239C1DC\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":944,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[253],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D66AA5DA-9D61-42CD-9756-FB4838CD43F0\",\"startNode\":\"561A0CAB-FBAA-4116-AC6D-6467074141E7\",\"endNode\":\"451194AA-16AB-4A63-8F39-3FF87CF863B5\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":2033,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[254],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"D7B05B62-7C76-493D-8C6A-65E14F47265C\",\"startNode\":\"AC0B7B63-D776-4FB1-AE33-0254714762D6\",\"endNode\":\"EC840A23-52AB-452C-B2AC-2D2AE62DE27F\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":812,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[255],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"17606830-4EBC-4D4B-B523-1A43FC0E2B9C\",\"startNode\":\"B16F2A3D-9FF1-4579-B1A9-31E44FA4A6C7\",\"endNode\":\"C7F4539A-5127-445D-B453-715CE9ADEE29\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":200,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[256],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"A3D24E15-54F2-4B44-82FE-67DAEB48CBD3\",\"startNode\":\"C7F4539A-5127-445D-B453-715CE9ADEE29\",\"endNode\":\"96E6DA13-EFE9-4FF3-AFD1-AFD9FCA0DD0C\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":129,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[257],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"CFCE4155-FEE2-4077-89EF-EEB978154422\",\"startNode\":\"0ED5CC5A-C415-4D98-B040-F161365A4923\",\"endNode\":\"B16F2A3D-9FF1-4579-B1A9-31E44FA4A6C7\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1569,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[258],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"130AB411-2738-4761-846B-F1964CFE2F1E\",\"startNode\":\"96E6DA13-EFE9-4FF3-AFD1-AFD9FCA0DD0C\",\"endNode\":\"2E4B0885-CCB8-43F6-8610-5F7AD9983DF9\",\"form\":\"lake\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1846,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[259],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C8324116-65B2-40CC-8B02-0864705169AD\",\"startNode\":\"1DABACD7-A66A-4EC7-A570-D21536D68C36\",\"endNode\":\"B16F2A3D-9FF1-4579-B1A9-31E44FA4A6C7\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":28,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[260],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"8D0789DF-AD54-4154-A3DC-74F26265BF09\",\"startNode\":\"23BDE209-9D71-423D-B565-AAD74CACCD7C\",\"endNode\":\"1DABACD7-A66A-4EC7-A570-D21536D68C36\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":72,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[261],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"14441A4A-27A7-4EA1-99DA-22159931D0FE\",\"startNode\":\"2E4B0885-CCB8-43F6-8610-5F7AD9983DF9\",\"endNode\":\"561A0CAB-FBAA-4116-AC6D-6467074141E7\",\"form\":\"lake\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":89,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[262],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"E43C36D7-FFB3-4AEC-B347-D46168FD7BB5\",\"startNode\":\"EC840A23-52AB-452C-B2AC-2D2AE62DE27F\",\"endNode\":\"5D125C55-70C7-4CFD-A3E8-7F3DF7C12936\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1362,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[263],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"AA46195C-9FA4-4DE8-AE06-E0095C8D5EA6\",\"startNode\":\"5D125C55-70C7-4CFD-A3E8-7F3DF7C12936\",\"endNode\":\"F35ADB8A-1BC1-4E5B-932F-2B29C9A7DA86\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":220,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[264],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"C48249B5-8CFF-456F-A160-5F673C6E5C79\",\"startNode\":\"F35ADB8A-1BC1-4E5B-932F-2B29C9A7DA86\",\"endNode\":\"8B0A455F-DE10-44E5-8C17-083B1012DC0F\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":864,\"name2\":null}},{\"type\":\"LineString\",\"arcs\":[265],\"properties\":{\"name1\":\"River Spey\",\"identifier\":\"2625FF23-81D2-421E-B302-52A44BC59FE9\",\"startNode\":\"8B0A455F-DE10-44E5-8C17-083B1012DC0F\",\"endNode\":\"83797AD6-1A81-414B-BD7B-F19F2F7C3876\",\"form\":\"inlandRiver\",\"flow\":\"in direction\",\"fictitious\":\"false\",\"length\":1116,\"name2\":null}}]}},\"arcs\":[[[-4.5948822297823,57.00848736503577],[-4.594639698268275,57.008571480580244]],[[-4.594639698268275,57.008571480580244],[-4.5943343654054045,57.0088866945058],[-4.592754037059848,57.0090140888367],[-4.592167615285217,57.00934977105691],[-4.591159485529921,57.009041373439],[-4.590777550051798,57.0095250524144],[-4.590398715266141,57.00943538861948],[-4.5901907455624285,57.00966140252079],[-4.588454972343878,57.01005087388338],[-4.587937707985016,57.01049124042832],[-4.5873808204429,57.010596222854204],[-4.586522826335943,57.011194699755585],[-4.586054212337098,57.01127349651084],[-4.585710890689298,57.01116870529853]],[[-4.585710890689298,57.01116870529853],[-4.584084270260819,57.011409371686554],[-4.583879187821979,57.01186286373386],[-4.583483179595449,57.01202912169766]],[[-4.583483179595449,57.01202912169766],[-4.582301550439272,57.01213583624502],[-4.581418143906651,57.011856150271015],[-4.5811753845638075,57.011911575477406],[-4.580611457714384,57.01244085484396],[-4.579686846163809,57.01254359088558]],[[-4.5793862460027555,57.01252273795955],[-4.579363105126706,57.01293301814611],[-4.578447454674381,57.01398610520597],[-4.577811167100247,57.01434449336418],[-4.576916859422974,57.01453357708684],[-4.576315965000065,57.014956203644275],[-4.576262569727617,57.01523212245897],[-4.575392856445565,57.015465173633785],[-4.575004950730846,57.015425706711184],[-4.5744305379763075,57.01513107402368],[-4.5739466440194,57.015292548670196],[-4.573859340108344,57.01559297905597],[-4.5741034163789935,57.01602076655849],[-4.573685167349151,57.01635271882187],[-4.57292603513346,57.01614105318347],[-4.57237228180176,57.015625537969214]],[[-4.579686846163809,57.01254359088558],[-4.5793862460027555,57.01252273795955]],[[-4.57237228180176,57.015625537969214],[-4.571647836250868,57.01577739011327],[-4.570884175256546,57.01614635801685],[-4.569652981102505,57.016234288163574],[-4.568558411738236,57.01689132618397],[-4.5667345100120125,57.017425189308746],[-4.566616189726005,57.01768050689961],[-4.56712625080654,57.018026642135936],[-4.567092822922528,57.0182132662717],[-4.566890536008345,57.018333257007555],[-4.566140608430642,57.01834118012576]],[[-4.570780417398609,57.01799115989623],[-4.571211777249728,57.01818953396576],[-4.571053791968192,57.01870269589671]],[[-4.566140608430642,57.01834118012576],[-4.565328671437673,57.01854906962987],[-4.564554041977386,57.018353937212495],[-4.563384176863884,57.01829531995041],[-4.561840753745031,57.01881527544416],[-4.561638199233907,57.01923335679575],[-4.5608173196257065,57.01959210899598],[-4.559696850748504,57.01985696092832],[-4.559356314427087,57.02043737719447],[-4.55892120887663,57.02051951869745],[-4.557839185864272,57.020471634047205],[-4.557303682623145,57.02089121089728],[-4.555688755558458,57.02095323230841],[-4.5537831160727995,57.02163649429476]],[[-4.571053791968192,57.01870269589671],[-4.570410717840252,57.0188862093279],[-4.56955386746883,57.0186294390242],[-4.569454952841901,57.018497296234656],[-4.568800026254693,57.01865713964527],[-4.568731403548999,57.01951553657903],[-4.568580228623024,57.01973396538611],[-4.568247127675619,57.0198326485427]],[[-4.568247127675619,57.0198326485427],[-4.566830565396583,57.02007524335094],[-4.565964676430464,57.01994552839238],[-4.5651930295629395,57.02030105326703],[-4.564837654581044,57.020676889196196],[-4.5648933244923615,57.02090374471533],[-4.565220862677057,57.02113293554952],[-4.5659301715143386,57.021163596374066],[-4.566037322849654,57.02158261330086],[-4.56540949633249,57.02203862844225],[-4.564173153229637,57.021138682560505],[-4.563185669561771,57.02117437152121],[-4.561369867043092,57.02094644126147],[-4.560523555441848,57.02100312443458],[-4.559743591408155,57.021780267926076],[-4.55939899131954,57.02163561879511],[-4.55898921813872,57.021166079216336],[-4.556939580377215,57.02164015539222],[-4.555121270583729,57.02158185721257],[-4.554139689733297,57.02172303907296],[-4.5537831160727995,57.02163649429476]],[[-4.5537831160727995,57.02163649429476],[-4.552460449881844,57.02157343317705],[-4.5511070657737625,57.02133376430907],[-4.549519461083603,57.0219225848206],[-4.546677533241091,57.02234280323432],[-4.545083237528802,57.02311251662097],[-4.544619769041084,57.02324344357265],[-4.544084686148977,57.023221072099005]],[[-4.544084686148977,57.023221072099005],[-4.541992980584558,57.02439600559972],[-4.540134407535819,57.02513759073357],[-4.53879491292686,57.025160189815004],[-4.537710485501477,57.02471118857294],[-4.536949007740411,57.0248851550371],[-4.535638823473836,57.02490973236064]],[[-4.536442431737163,57.02523781985771],[-4.535638823473836,57.02490973236064]],[[-3.101243250810859,57.65193885665691],[-3.101264769067867,57.65217896433507],[-3.102111713922903,57.652264200853715],[-3.1022708504116503,57.652417231571725],[-3.101328875376201,57.65422814505911]],[[-3.101328875376201,57.65422814505911],[-3.10129752352314,57.65629576306623],[-3.101496100853838,57.656632692354876],[-3.102688143389343,57.657555188142695],[-3.1031465720421703,57.658418677523684],[-3.103181258807821,57.65919684055339],[-3.102946425449511,57.65985841936121],[-3.1012571813915533,57.660837192403406],[-3.1008014185519177,57.66128932069755],[-3.0997426986925665,57.661756213194074],[-3.098086017478791,57.66274777471458],[-3.0982739186004213,57.662936492540155],[-3.0968022634324384,57.66361939195312],[-3.0965014492002765,57.6642711094598],[-3.0965802822171806,57.665316762326036],[-3.097955886757639,57.666367245280355],[-3.0991825513045765,57.66679199654534]],[[-3.1002047700137565,57.66268516682207],[-3.0996155341152702,57.66392868373921],[-3.0997529298483455,57.66500113426998],[-3.0991825513045765,57.66679199654534]],[[-3.0991825513045765,57.66679199654534],[-3.0991780551865693,57.668089266177454],[-3.098672494103686,57.66895503485603],[-3.0982393618268973,57.66924517290393]],[[-3.0982393618268973,57.66924517290393],[-3.0968925454571408,57.6696792373915],[-3.0955087133159487,57.66980980417242]],[[-3.0982393618268973,57.66924517290393],[-3.098206817006326,57.67031451806234],[-3.0986169014031106,57.670581075050066],[-3.0994533787337226,57.67074960448716],[-3.099719838541812,57.67091778504739]],[[-3.099719838541812,57.67091778504739],[-3.0998862394684314,57.67112007202693],[-3.0998352870977692,57.67192880214864],[-3.1001411128103733,57.67256043000344],[-3.1000340294198465,57.67299937045471],[-3.0994154910931004,57.673452278513615],[-3.0973628115350125,57.67430183261176]],[[-3.0955788333035734,57.67335144702933],[-3.0973628115350125,57.67430183261176]],[[-3.0973628115350125,57.67430183261176],[-3.098465688040357,57.67501008954478],[-3.0999403897688085,57.676932205767464]],[[-3.0961040763370664,57.66253410298401],[-3.0961752175635002,57.662814294163425],[-3.0948642514241946,57.66502593694394],[-3.0947403545680428,57.66569821653117],[-3.093510682784002,57.66758728023944],[-3.0937705703481884,57.66783952065315],[-3.094768035844883,57.66792377584528],[-3.095639270774449,57.668402480559486],[-3.0960182339098377,57.66903348470723],[-3.0955087133159487,57.66980980417242]],[[-3.0955087133159487,57.66980980417242],[-3.094594285252233,57.67011846937944]],[[-3.094594285252233,57.67011846937944],[-3.092754200564857,57.67098820791308]],[[-3.094594285252233,57.67011846937944],[-3.094198354605901,57.67058766107846]],[[-3.094198354605901,57.67058766107846],[-3.0937141787033746,57.67168426548131],[-3.0930695768485257,57.67202508071148]],[[-3.092754200564857,57.67098820791308],[-3.0926521245663716,57.67147937932805],[-3.0930695768485257,57.67202508071148]],[[-3.0930695768485257,57.67202508071148],[-3.0935424054744654,57.67248846734951],[-3.0955788333035734,57.67335144702933]],[[-3.1120524701337886,57.61052149560371],[-3.1126134351122405,57.61082036538337],[-3.112589728024907,57.61120567805364],[-3.1116211569819257,57.612308607737084],[-3.1089933722618395,57.61371310844515],[-3.107699188471559,57.61397912765605],[-3.1057844052296137,57.614667288602895]],[[-3.1060005590605906,57.61374346667807],[-3.1055811125143378,57.61446631966993],[-3.1057844052296137,57.614667288602895]],[[-3.1057844052296137,57.614667288602895],[-3.105388918895954,57.614928382080144]],[[-3.105388918895954,57.614928382080144],[-3.1052428920826225,57.6156816301729],[-3.106236501216488,57.61748059606131],[-3.1065610092253837,57.61959730507972],[-3.1068283561353813,57.620147241814685]],[[-3.1068283561353813,57.620147241814685],[-3.1054269556651244,57.62093707789045],[-3.104093329652717,57.62245617785705],[-3.103327478288459,57.62308449118731],[-3.1013872753495377,57.624140568835024],[-3.1010388926805206,57.62475642622005],[-3.0981136226482318,57.62588983876893],[-3.0970814586279625,57.62649931606967],[-3.0967923509624553,57.626957174222724],[-3.096875742133611,57.62862890945949],[-3.0975040630486332,57.62946229046055],[-3.0994925184765214,57.6305935807725],[-3.1021062402352877,57.631221012808915]],[[-3.1004866740236756,57.62895774573729],[-3.1018645039866404,57.62981970225006],[-3.1026427354272976,57.63071032087269],[-3.1021062402352877,57.631221012808915]],[[-3.1021062402352877,57.631221012808915],[-3.1062691877393016,57.63240535600195],[-3.1066629880074252,57.63289750298683],[-3.106704519304689,57.63382760123218],[-3.1063031662418075,57.63439794278931],[-3.101067233175029,57.63621555153984],[-3.100318542948509,57.63700152561422]],[[-3.102644711373671,57.63375869215857],[-3.1018707285037976,57.63458603897161]],[[-3.100615661488395,57.634936619074004],[-3.100647746422042,57.63583077856901],[-3.100176363870926,57.636415453528066],[-3.100318542948509,57.63700152561422]],[[-3.100318542948509,57.63700152561422],[-3.099999162390854,57.63824297214329],[-3.1000800470728933,57.63952692860585],[-3.100839913475537,57.640989486096174],[-3.1013034719067787,57.64116807387898]],[[-3.096218851517912,57.643399619316135],[-3.0959239571935293,57.643759159889086],[-3.096129979936584,57.6440358470235],[-3.0955499496262417,57.64430102138199],[-3.0950111468180843,57.64516212720732]],[[-3.0950111468180843,57.64516212720732],[-3.0939787323687167,57.64662927248862],[-3.0932805051750374,57.64810807221822],[-3.0935431602974206,57.649069675730374],[-3.0949780890975362,57.65007170787529],[-3.097671593766351,57.65111661407571],[-3.0989341055816824,57.65271090966513],[-3.0992913601710765,57.653553014177845],[-3.0997331049384838,57.6539083135004],[-3.101328875376201,57.65422814505911]],[[-3.1417456183481214,57.559564782259024],[-3.141263030517625,57.56068485486121],[-3.1393442824187474,57.562752859459906],[-3.1357835905139955,57.56767599564473],[-3.134838801430017,57.56816257259955],[-3.132986183588575,57.568498288303395],[-3.131477759557743,57.56924878931115],[-3.1312139453900047,57.56997097207504],[-3.130769909750701,57.570413505673216],[-3.1297407993812607,57.57125338679692],[-3.1284957893785537,57.57195280574298]],[[-3.1305825486165784,57.56950959232803],[-3.1288410959461204,57.57091207737007],[-3.1285916225977966,57.571213804854814],[-3.1284957893785537,57.57195280574298]],[[-3.1358056625022606,57.56965119242307],[-3.1354631781084286,57.57029800467108],[-3.135028385308406,57.57050960344244],[-3.1321593231261926,57.57118555589118],[-3.1302103523010207,57.57208632457223],[-3.1293879833830553,57.57293073006652],[-3.128688270146471,57.5732447474171],[-3.1278717583941322,57.57337789539616]],[[-3.1284957893785537,57.57195280574298],[-3.1277839050657668,57.573099933204],[-3.1278717583941322,57.57337789539616]],[[-3.1278717583941322,57.57337789539616],[-3.1262402588640064,57.57395929013681]],[[-3.126530040655282,57.573131874422614],[-3.125961956945593,57.573675479055446],[-3.1262402588640064,57.57395929013681]],[[-3.1262402588640064,57.57395929013681],[-3.1251174639522192,57.5745008291593],[-3.1242062628095884,57.57527349713636],[-3.124096806674277,57.57602941340005],[-3.12369459900499,57.576841294055114],[-3.1237511886227147,57.57726120085539],[-3.1230491228707855,57.578773106432095],[-3.1228675738270133,57.581364284510606],[-3.1224329359840017,57.5825323593738],[-3.1210554214070187,57.58400300057478],[-3.119066940224685,57.58511872721784],[-3.1185502202129167,57.58567244098578],[-3.1179740804862677,57.58687948060761],[-3.1175787079607775,57.58842959976529],[-3.1184419100605387,57.58929853163255],[-3.118210770653477,57.59010088218434],[-3.1176928247461158,57.59094448702216],[-3.115819587584041,57.59221724168841]],[[-3.1167844688013657,57.58876693208586],[-3.116230884612683,57.589457863901416],[-3.116099896538749,57.5902056064579],[-3.115374718019151,57.59160376194062],[-3.115426024440964,57.59211022497085],[-3.115819587584041,57.59221724168841]],[[-3.115819587584041,57.59221724168841],[-3.1150599629417517,57.59303278606509]],[[-3.1150599629417517,57.59303278606509],[-3.1147445387571113,57.5943751280502],[-3.114945663104661,57.595534866776326],[-3.1174752575629894,57.59730545384242]],[[-3.117129221347638,57.59829171283762],[-3.115944235842771,57.60008137405949],[-3.1151485899125326,57.60076401616396],[-3.114089866133104,57.601266077356215],[-3.112727914826507,57.60159320467825],[-3.1110232180564945,57.601639915264386],[-3.107787621719329,57.60205073264603],[-3.1061769950708893,57.602886973078725],[-3.1063483426635683,57.60346506043478],[-3.1086891595320845,57.60530242212339],[-3.1105180858406927,57.60710642192612],[-3.110695565515474,57.60752598830134]],[[-3.110695565515474,57.60752598830134],[-3.110617475600872,57.607764097065]],[[-3.1934407233640876,57.52449597606176],[-3.1907480644424546,57.524867178420685],[-3.189552732518756,57.52543415739735],[-3.188724884330172,57.52628270342514],[-3.188301409667534,57.526981009360696],[-3.1881921482693842,57.52784182783235],[-3.1889633319920523,57.529760040956205],[-3.1893786943006677,57.53018112617315]],[[-3.1893786943006677,57.53018112617315],[-3.190132454149503,57.53097712565691],[-3.1922378125415776,57.53177572176945],[-3.193950377826689,57.53310370109473],[-3.1937855819876524,57.53400951679487],[-3.1941142561897813,57.534897189595455]],[[-3.1941142561897813,57.534897189595455],[-3.1938947264746367,57.53718892370445],[-3.1931272348626876,57.53861140549489],[-3.1916141983867243,57.53958565016626],[-3.1894173905815486,57.54034137992687],[-3.1873774492086393,57.54129502379318],[-3.186246193913973,57.541985692281244],[-3.185167383996219,57.542173065145874],[-3.1838292655609512,57.54192726281888],[-3.1829999111074145,57.54139433584888],[-3.1816993361119237,57.53960807035946],[-3.1812852108801755,57.53939616879001],[-3.1817570511564974,57.539089465737064],[-3.181500922690983,57.53842746182455],[-3.1802719433919635,57.537341475093754],[-3.17921859064883,57.5367105446625],[-3.1785965670637846,57.5366542800235],[-3.1738282658241834,57.53419445333694],[-3.17232837583338,57.533970606878654],[-3.1707526582689742,57.53411602870756],[-3.1674325305126656,57.53489391776702],[-3.1651535785288796,57.53609177995366]],[[-3.1651535785288796,57.53609177995366],[-3.1647823267744157,57.53652307797159],[-3.162425668165763,57.53828710097158],[-3.159383859110337,57.53970882395222],[-3.155898450144041,57.540392071886345],[-3.151398456384356,57.54065400572679],[-3.149362967533255,57.54118657497101],[-3.1489552834327386,57.54150820206554],[-3.148867449104855,57.541854405808785],[-3.149512508981914,57.54349488566674],[-3.1495017701021824,57.54616685772678],[-3.149142329800069,57.547141483596725],[-3.148239648672781,57.54828544277413]],[[-3.148239648672781,57.54828544277413],[-3.147326474041545,57.548938019767164],[-3.145260686959976,57.54959718822415],[-3.1442370286164967,57.54971328022772],[-3.1422850028575997,57.54965397098241],[-3.1414286902261406,57.549767717447416],[-3.141180972253328,57.549925365943416],[-3.1413451369724186,57.55003464462484],[-3.140375334405622,57.55081075180019],[-3.139864144356459,57.55095954818583],[-3.139464906472083,57.552135636858125]],[[-3.139464906472083,57.552135636858125],[-3.139370200789294,57.55275776826538],[-3.1400897973711714,57.555683741088906],[-3.1405854124032855,57.55720487769563],[-3.1417896031700954,57.559005002319495],[-3.1417456183481214,57.559564782259024]],[[-3.1853849118362816,57.506728927875386],[-3.1874209657956487,57.507064172432884],[-3.1902569232115128,57.50719645327095],[-3.1916379662457444,57.50707651496955],[-3.194382327728402,57.5064278400701],[-3.1957558793726295,57.50629445238642],[-3.196985935167803,57.50643766020632],[-3.1984272262905757,57.50722519971902],[-3.199754002610481,57.50847807015592],[-3.199978415005904,57.50964484569796],[-3.1990219750027395,57.51128728577094],[-3.1974363359474047,57.51317033475411],[-3.197239103736274,57.51427320103992],[-3.2008524095922586,57.5180219166522],[-3.201187162471718,57.518773867531216]],[[-3.201187162471718,57.518773867531216],[-3.2015092063929553,57.519753216245235],[-3.2013857324278296,57.52077597365269],[-3.200878553385608,57.52164625293849],[-3.2002159370218615,57.52222802734919]],[[-3.2002159370218615,57.52222802734919],[-3.198553652318425,57.52313110701743],[-3.196728289896874,57.52387544877833],[-3.1948333757831455,57.524343736737904],[-3.1934407233640876,57.52449597606176]],[[-3.234063044575947,57.469304909039444],[-3.230617714451162,57.47093601525172],[-3.22868874707226,57.47170152880299],[-3.2251406259107838,57.47246254245093]],[[-3.2251406259107838,57.47246254245093],[-3.2231462115302185,57.473046781724534],[-3.218048600797833,57.47542695973866],[-3.214390929828607,57.4775925589902],[-3.2126020659380616,57.478177882804815]],[[-3.2126020659380616,57.478177882804815],[-3.2104471422686376,57.47874495540339]],[[-3.2104471422686376,57.47874495540339],[-3.2087920283549165,57.479010659512404],[-3.2055556943835546,57.48009628827582],[-3.2014023631698367,57.48124294511633]],[[-3.2014023631698367,57.48124294511633],[-3.1974223038965106,57.48211652109137],[-3.1967623966575727,57.482470530874465],[-3.1961020026340248,57.483111020821994],[-3.1962207650343033,57.483779423545094],[-3.198142897374763,57.48541869522096],[-3.1987552942084028,57.48657604011468],[-3.1985915280105273,57.48798223311547],[-3.1982215058808583,57.488729929564286],[-3.197427106987964,57.48964164787197],[-3.1967332931076364,57.49014635939651],[-3.194946481573429,57.49110762938353],[-3.192770589206237,57.49166174548959],[-3.19169876292999,57.49117222386623],[-3.1895099429327476,57.49070985177772],[-3.1885238603646884,57.490674859877004],[-3.1860970485164244,57.49188413285839],[-3.183836283974478,57.49271315267929],[-3.1818644285604036,57.493677767659804]],[[-3.1813677183058364,57.49594406031716],[-3.1827002384552294,57.49689997469266],[-3.183181970358785,57.497952523604425],[-3.1831306990075,57.498776145469506],[-3.1820464900965564,57.500047925889724],[-3.178698169529281,57.50188247508157],[-3.1785211120861216,57.502627856824205],[-3.179313112804134,57.50376537712885],[-3.1819782988071204,57.50558767086144],[-3.1853849118362816,57.506728927875386]],[[-3.1818644285604036,57.493677767659804],[-3.1811917332928776,57.49418408037833],[-3.180966527258607,57.49466032851467],[-3.1810385820999345,57.495480998320225],[-3.1813677183058364,57.49594406031716]],[[-3.303654474008646,57.45383014112447],[-3.3021802928612365,57.45328947725906],[-3.2990734221227007,57.4526126440548],[-3.296390702411668,57.452450981050134],[-3.2954091662913068,57.452528179299556],[-3.294656626366059,57.45271423418992],[-3.2946490850715056,57.45334953735816],[-3.293800272224128,57.45448604523105],[-3.293618070721222,57.4544897119331],[-3.2929851363831824,57.45519000387801],[-3.2916228303373622,57.45604635559479],[-3.29152574686878,57.45626618900421],[-3.290835337470553,57.45651060555819]],[[-3.310203049928157,57.456651264572244],[-3.308638524093788,57.456134971408694],[-3.3066476391922475,57.45501902549019],[-3.3052356805391616,57.45444047015029]],[[-3.290835337470553,57.45651060555819],[-3.289651664660578,57.45692832705518],[-3.2884379584315964,57.45706641776079],[-3.287542526066526,57.45683750363292],[-3.283994352829745,57.4564288311986],[-3.2797032711023597,57.456445516298004],[-3.2771471954208145,57.456890609635686],[-3.275895845519527,57.45733682527322],[-3.2746649987397785,57.45807604233376]],[[-3.3222044057114317,57.461777566755956],[-3.320371938943794,57.46174197296188],[-3.3183145818695574,57.46072437597225],[-3.317808096201927,57.46031948222861],[-3.3163519761213607,57.45820792781904],[-3.315910578024192,57.45794752128282],[-3.3146309798679643,57.45756712304795],[-3.312290367524168,57.45717817777086],[-3.310203049928157,57.456651264572244]],[[-3.2746649987397785,57.45807604233376],[-3.2745595334082362,57.45824968170608]],[[-3.3330819490937995,57.457518345476906],[-3.332983002623427,57.459878121798376],[-3.3324490389575634,57.46117749235958],[-3.3314682197843277,57.46173270941569],[-3.3302089556294003,57.461860543677005],[-3.3289927550314493,57.461811024758795]],[[-3.2745595334082362,57.45824968170608],[-3.2741603602124076,57.45872472175004],[-3.2728797946845427,57.45945534992621],[-3.269418043102601,57.46056584952236],[-3.2674642965570624,57.46218510678405],[-3.266516691435653,57.46329088430336]],[[-3.3289927550314493,57.461811024758795],[-3.3275813010910755,57.46154857357684],[-3.3257181044514175,57.46142839656556],[-3.3222044057114317,57.461777566755956]],[[-3.266516691435653,57.46329088430336],[-3.2658603548213465,57.464688387972686],[-3.2655596482712075,57.46684510498427]],[[-3.259843254700837,57.46905695001528],[-3.2592119786236977,57.46905588987216],[-3.2547681295109863,57.46983414151591],[-3.2539599928362404,57.46975198754726],[-3.248953152053931,57.46794839868911],[-3.2461930015206306,57.46643442118453],[-3.244160179810179,57.46553576133744],[-3.241565161193243,57.46482919300195],[-3.24023960996305,57.46502981419778],[-3.2389758393310686,57.46557361034422],[-3.237896008565821,57.46635176212073],[-3.236641425238388,57.46783609905512],[-3.234063044575947,57.469304909039444]],[[-3.2655596482712075,57.46684510498427],[-3.2643226703361967,57.46782260984944],[-3.263353373338328,57.46832129637266],[-3.261850611916861,57.46891461104527],[-3.2608906406173093,57.469085647807724]],[[-3.365391288687422,57.45155765945548],[-3.366082669359506,57.45256576916736],[-3.366131211724349,57.45324611343942],[-3.365471171902682,57.45440667511591],[-3.36437112104157,57.454722862750515]],[[-3.36437112104157,57.454722862750515],[-3.362719612800769,57.45502299364949],[-3.3603106608838176,57.45507003505407],[-3.3598003587127527,57.454846638119356],[-3.3556966011408447,57.45394010422531],[-3.3542146120112566,57.45385407058468],[-3.3533427814164236,57.454241554779536],[-3.3515138360884293,57.45472581084162],[-3.3513493056383665,57.45510892941269],[-3.3527468097720488,57.45550556906767],[-3.3529252606055917,57.45603647234853],[-3.3525102481721847,57.45706550756574],[-3.350973193344501,57.45766772159118],[-3.3509371545565934,57.457838437134306]],[[-3.3524417634022416,57.45781520645368],[-3.3518234311898087,57.45797474000835],[-3.3509371545565934,57.457838437134306]],[[-3.3509371545565934,57.457838437134306],[-3.3485345741589922,57.45732604403237],[-3.346436752145504,57.45638767191079],[-3.3429733529958927,57.45405429408098],[-3.3406787244008793,57.45171414635378]],[[-3.3406787244008793,57.45171414635378],[-3.339598376358525,57.451027876265414],[-3.3389327262462043,57.45090342910203],[-3.335259281477384,57.45167168627354],[-3.333188011324837,57.452433320386604],[-3.332885095532533,57.453071663937244],[-3.333163188382824,57.45475027159723],[-3.332812182415878,57.4555561281449],[-3.3330819490937995,57.457518345476906]],[[-3.33423753611433,57.456731464737665],[-3.3335981236863357,57.45743966952392],[-3.3330819490937995,57.457518345476906]],[[-3.3612219374925734,57.446969622212066],[-3.361782415994303,57.44812865644933],[-3.362861428213339,57.44944190142599],[-3.363723966026504,57.450157821533],[-3.3644599319570676,57.45054846081672],[-3.365391288687422,57.45155765945548]],[[-3.3608738310334934,57.43084664314805],[-3.360688286683544,57.430963368374584],[-3.3613484863835557,57.43117750488881]],[[-3.3613484863835557,57.43117750488881],[-3.3598249061054415,57.432837338004234]],[[-3.3609238973997306,57.44459855313211],[-3.3612219374925734,57.446969622212066]],[[-3.3602667604086953,57.431090007702146],[-3.359484405682345,57.43171365245398],[-3.359332785309193,57.43205370277259],[-3.359356420715526,57.43271347737915],[-3.3598249061054415,57.432837338004234]],[[-3.3598249061054415,57.432837338004234],[-3.3595044261733813,57.43345249357055],[-3.3590035010648385,57.4357737941981],[-3.359369320921353,57.43639376332741],[-3.359440745034976,57.43737167221867]],[[-3.4272112687242635,57.40204607647345],[-3.4259684363854386,57.40267743198427],[-3.4253437607249935,57.4033959308497],[-3.426186517516199,57.405577899937775],[-3.426214546553441,57.40642745038827],[-3.42580049664531,57.407161892485526],[-3.424608861107185,57.40814796244671],[-3.4198280836472064,57.41010641827313]],[[-3.417173083579846,57.41121320403434],[-3.4159612497941967,57.41191391191439],[-3.4094423884334155,57.414438513079176],[-3.406157326156859,57.415221148152526],[-3.404330563452061,57.41528527743762],[-3.399785339055518,57.41465112516533]],[[-3.387446478212508,57.41415230348514],[-3.3819884931462316,57.413569605872745],[-3.37980463300968,57.41388929032972],[-3.3785439263238,57.41436943814411],[-3.3779012973292524,57.4149012977866],[-3.377960998354989,57.41539582704098],[-3.378878921919173,57.41652249205405],[-3.378851630338266,57.416722139377825]],[[-3.3924471213552163,57.41432674970422],[-3.390581783158398,57.41437394723323],[-3.3883107820418075,57.414290922507675],[-3.387446478212508,57.41415230348514]],[[-3.399785339055518,57.41465112516533],[-3.3962127771005672,57.4143031250741],[-3.3934973022824213,57.41423895448803],[-3.3924471213552163,57.41432674970422]],[[-3.378851630338266,57.416722139377825],[-3.3794797683092854,57.41694659306839],[-3.3804214465721176,57.417936793904786],[-3.3803550456215805,57.41840215916346],[-3.379890555392473,57.41891689384455],[-3.3770676170422456,57.41987005058837],[-3.37553981075977,57.42107088350929],[-3.373422186891047,57.42166076866483]],[[-3.373422186891047,57.42166076866483],[-3.3713063089368283,57.42193401335986],[-3.370101063505974,57.42225535693723],[-3.3677734663643957,57.42348805605224],[-3.3670462678559088,57.4244846032687],[-3.365718441650834,57.425752137565105],[-3.3651646647933138,57.427182142012114],[-3.363581722660849,57.429256454827126],[-3.3625781928977827,57.430267642857046],[-3.3613484863835557,57.43117750488881]],[[-3.4689682640476724,57.374593047952764],[-3.468701088283915,57.376288016340325],[-3.469204700971338,57.37806382964304],[-3.4691548217685204,57.37902065933973],[-3.469450185025432,57.37947296599681],[-3.469568341142801,57.38070498790972],[-3.468982601791697,57.38137681264656],[-3.4676289679494734,57.382222353025554]],[[-3.4676289679494734,57.382222353025554],[-3.468745472452279,57.38348307102668]],[[-3.469011287852424,57.394198388977884],[-3.468534607588021,57.3953599059508]],[[-3.468534607588021,57.3953599059508],[-3.4675518688773206,57.397275047933874],[-3.466984122315917,57.397729958712794],[-3.4657364114793925,57.39966038922246],[-3.4657994464457587,57.39979692921379]],[[-3.4679406389285705,57.39866149150366],[-3.466996282136471,57.39955381450787],[-3.4663379460734576,57.39977511823509],[-3.4657994464457587,57.39979692921379]],[[-3.4666332842223295,57.381452715610116],[-3.4669382306502374,57.381912013564055]],[[-3.4657994464457587,57.39979692921379],[-3.463905929066078,57.40081131275956],[-3.4611613152942518,57.40101810212211]],[[-3.4611613152942518,57.40101810212211],[-3.4545552069860803,57.401572964229985],[-3.4539618251072564,57.40153777169864],[-3.4530189154366804,57.40122442663817]],[[-3.4543742145963847,57.4011299043901],[-3.45341977678426,57.40103796785248],[-3.4530189154366804,57.40122442663817]],[[-3.4530189154366804,57.40122442663817],[-3.45044823291104,57.400629502197816],[-3.4473305148887343,57.39936549799737],[-3.445825965620195,57.398893430148405]],[[-3.4479706295480304,57.39868812431471],[-3.447443750297972,57.39861620136924],[-3.4468325762503254,57.39875304110538],[-3.4460463660235154,57.39873880307764],[-3.445825965620195,57.398893430148405]],[[-3.445825965620195,57.398893430148405],[-3.444134147688132,57.39862203511705],[-3.4427797565332243,57.39859820990184],[-3.440712813090892,57.39911364834895],[-3.4390433874901802,57.39979457470009],[-3.436683930853125,57.39985538245427]],[[-3.4395535307781,57.39819671897125],[-3.4397764059471223,57.398333690055956],[-3.4389658629889217,57.39853466926403],[-3.4381436007239308,57.399230965889956],[-3.436651395010459,57.39962792370419],[-3.436683930853125,57.39985538245427]],[[-3.5226831607823734,57.36559146389511],[-3.521193783771383,57.366492422454606],[-3.5190792302080554,57.367299120540224],[-3.517712668961412,57.36755817409693],[-3.5151472761865286,57.36772168499482]],[[-3.5112243742410083,57.36818857790152],[-3.506454249568035,57.36869792256745],[-3.5042407721375244,57.3691178030452],[-3.5018631243344913,57.37000964492914],[-3.498561442924025,57.371655599141526],[-3.4960499840142973,57.372401045594735],[-3.4950429000887504,57.37252405232225],[-3.4928902041844334,57.37251680946908],[-3.488826147076284,57.372178901594026]],[[-3.488826147076284,57.372178901594026],[-3.4872981039538216,57.37188046049709],[-3.484539405635834,57.37157118597882],[-3.48344818932831,57.37159599911292],[-3.4812787161254604,57.37200426309688]],[[-3.4812787161254604,57.37200426309688],[-3.477039449134632,57.37183738462722],[-3.473779647461555,57.372224797608126],[-3.471334877314877,57.37290464145834],[-3.470121231463517,57.373399370969324],[-3.4689682640476724,57.374593047952764]],[[-3.4754880558397727,57.38719310912137],[-3.476156470189737,57.38816047808974]],[[-3.468745472452279,57.38348307102668],[-3.469425542875669,57.384377928326415],[-3.470325272620247,57.38505765789378],[-3.4708699117401256,57.3852900886632],[-3.4730101101063635,57.38566000079546],[-3.474631451592026,57.38613280130186],[-3.4754880558397727,57.38719310912137]],[[-3.474716896935534,57.39050938953655],[-3.4734500419787144,57.39145764780812],[-3.4709140110169527,57.39293981421321],[-3.4704418714587253,57.393016480905025],[-3.469600977701037,57.39339580505462],[-3.469142514248081,57.39380192618939],[-3.469011287852424,57.394198388977884]],[[-3.4708257730910037,57.39344933336985],[-3.469568581468573,57.3941244174454],[-3.469011287852424,57.394198388977884]],[[-3.4698087431707783,57.38192812580129],[-3.469291444168564,57.382477420796434],[-3.46911543980992,57.38332117685017],[-3.468745472452279,57.38348307102668]],[[-3.559617566952428,57.32421163763153],[-3.557354520079767,57.3245803565377],[-3.555408741019834,57.32528129770226],[-3.5539752982097057,57.32642724224365],[-3.5533924045816994,57.327460339525246],[-3.553354764006216,57.328693516155205],[-3.5529648053028544,57.33032418773579],[-3.5529489550655446,57.33473073411845],[-3.552675607798093,57.33783111153902],[-3.5534839038408528,57.34101408598791]],[[-3.5534839038408528,57.34101408598791],[-3.553368861404982,57.34152804974668],[-3.552344355761509,57.34301714225569],[-3.5516130502838568,57.343399093025546],[-3.5488723184439364,57.34414215649539],[-3.5475047340375365,57.34418189366603],[-3.5459751030862066,57.34395615075848],[-3.5438644628358213,57.34272654052243],[-3.5427316424745707,57.342372267940625]],[[-3.5427316424745707,57.342372267940625],[-3.5417217635370495,57.342302442316175]],[[-3.5417217635370495,57.342302442316175],[-3.5392490135848775,57.34265803182193],[-3.537957331166136,57.343168670566676]],[[-3.537957331166136,57.343168670566676],[-3.5369658066697363,57.343768974050285],[-3.5353538229722297,57.345946988199934]],[[-3.5359096884369214,57.35075728129131],[-3.5369731467677843,57.35247732253638],[-3.5369936620331424,57.35332588624113],[-3.5364084351352796,57.35420906855707],[-3.5349200053315224,57.35481523864381],[-3.533331621668136,57.35498688203606],[-3.532148858728237,57.3549165681955],[-3.5304329110500103,57.35470754646542],[-3.5257888272737827,57.353620001598934],[-3.524633480549423,57.35351595431661],[-3.5232307550630435,57.353671205713944]],[[-3.5353538229722297,57.345946988199934],[-3.5349562312172482,57.34710341694716],[-3.5360695296938847,57.34884262264005],[-3.5362204255088696,57.34977727958969],[-3.5359096884369214,57.35075728129131]],[[-3.5350586126707584,57.349997911942815],[-3.5353274843463165,57.350590095379665],[-3.5355466949261083,57.3507689884809],[-3.5359096884369214,57.35075728129131]],[[-3.534848009811665,57.34575676753425],[-3.5353538229722297,57.345946988199934]],[[-3.5232307550630435,57.353671205713944],[-3.522689360350965,57.35421212832203],[-3.521648641281274,57.35831936887503],[-3.521540084737288,57.35944772769723],[-3.5221060499556485,57.36161349119225],[-3.5229120356345165,57.36298979658294]],[[-3.5229120356345165,57.36298979658294],[-3.5233885909542164,57.36411439935599],[-3.523209938980089,57.36498675407279],[-3.5226831607823734,57.36559146389511]],[[-3.436683930853125,57.39985538245427],[-3.4349463185040223,57.40023804981343],[-3.4312857186029935,57.40180039679994],[-3.430370260300987,57.40205407914554],[-3.427752942988389,57.401959082574884],[-3.4272112687242635,57.40204607647345]],[[-3.6253915033085984,57.303786582350725],[-3.625528191632463,57.304770032277986],[-3.6248029546170004,57.30598554613321],[-3.6246976185912336,57.306645814551466],[-3.6250860524070934,57.307198449522005],[-3.6260332170411447,57.30780962446519],[-3.6263241395494106,57.3082210259132],[-3.6264247468350144,57.30875114504755],[-3.6261635661603844,57.309205174525275],[-3.6263886244150774,57.30984661659454],[-3.6251592125708725,57.310496621721036],[-3.623736082689709,57.31071912850039],[-3.621704766718228,57.31234355302103],[-3.6194087868724627,57.31312260798819]],[[-3.626067768708588,57.303237882693196],[-3.6256486642289865,57.30339630447492],[-3.6253915033085984,57.303786582350725]],[[-3.6194087868724627,57.31312260798819],[-3.617190388080877,57.313545654478595],[-3.616151805175591,57.314433982833144],[-3.61596625869823,57.31484074856129],[-3.6159638441201536,57.31592446043698],[-3.6153738561943918,57.31710089130413],[-3.613144658069508,57.31961077347202]],[[-3.613144658069508,57.31961077347202],[-3.612004722222212,57.32051914173611],[-3.6107429987342927,57.32096825732969],[-3.6071566273270594,57.32146792978862],[-3.6046741946536183,57.321410862186646],[-3.6028397835721235,57.32108692303965],[-3.60061653151561,57.320225798644294],[-3.599914801834202,57.319772578964496],[-3.5984130585343332,57.31833003118675]],[[-3.5984130585343332,57.31833003118675],[-3.5973341625244126,57.31771331605054],[-3.5960120004918714,57.317390678027195],[-3.594417052835468,57.31719870133697],[-3.5923344902978873,57.31729219836547],[-3.58995559153259,57.318437145422976],[-3.582445619490172,57.320352328441096],[-3.5801932140132826,57.32140709066705],[-3.5779369189981924,57.3226917653047],[-3.575859901801034,57.324276649073475],[-3.574005050056823,57.324974854752185],[-3.573095333014449,57.32515989940672],[-3.5706682855373675,57.32538518626719],[-3.5689319033700913,57.325394548562315],[-3.5662373638690323,57.32503713948404],[-3.561937945480096,57.32423612050781],[-3.560922102693965,57.32414801890492],[-3.559617566952428,57.32421163763153]],[[-3.711893495551996,57.26672530685655],[-3.71024249897694,57.2676371633851],[-3.7082214014874695,57.26847298890756],[-3.7027933349643276,57.27007689558965]],[[-3.7027933349643276,57.27007689558965],[-3.7017141512117395,57.270474971475394],[-3.700478153174686,57.27071334955052]],[[-3.700478153174686,57.27071334955052],[-3.699382111703488,57.27074291043766],[-3.6972282714288425,57.27103490345571],[-3.69112216520659,57.27249741349161],[-3.6901307991098813,57.272839940360406]],[[-3.6901307991098813,57.272839940360406],[-3.6887690679534586,57.27320082351052],[-3.68754929460837,57.273927968087335],[-3.6869609849366345,57.2746530047153],[-3.6868395068413102,57.27535497249416],[-3.686389926627392,57.27618371109245],[-3.6857655594198495,57.27695217084811],[-3.6850230651410256,57.27749202977815],[-3.684071387399973,57.27805391389189],[-3.6828690529693886,57.27851807215375],[-3.6810907933345365,57.27891418450512],[-3.680194478743944,57.278971271721666]],[[-3.680194478743944,57.278971271721666],[-3.6766725800922684,57.279050468348295]],[[-3.6766725800922684,57.279050468348295],[-3.675513402982522,57.279342736520285],[-3.6743932427743373,57.28003428038006],[-3.6738678424119784,57.28015771656577],[-3.672983618233022,57.28025547006233],[-3.6708035754790926,57.280205495969355]],[[-3.6708035754790926,57.280205495969355],[-3.666367227534481,57.28057588025569]],[[-3.666367227534481,57.28057588025569],[-3.666351567030227,57.28077626020327],[-3.6654833469781054,57.28092055716163],[-3.6631463972546174,57.28226906232066],[-3.6628319372147757,57.28224141810365]],[[-3.663346513603043,57.281376600462146],[-3.663035671409278,57.28160918664566],[-3.6628319372147757,57.28224141810365]],[[-3.6628319372147757,57.28224141810365],[-3.661628105672922,57.284028250027525],[-3.6614813227558995,57.2876031880634],[-3.6610098516658054,57.28920639147883],[-3.6601535511224985,57.29039735118061],[-3.658244218537719,57.29237162028029],[-3.657041629490448,57.293072624984376],[-3.655836955163677,57.29328507581934]],[[-3.655836955163677,57.29328507581934],[-3.653470462491779,57.29339375850955]],[[-3.653470462491779,57.29339375850955],[-3.6525998719057338,57.293355971717624],[-3.6488259873979563,57.29374684034406],[-3.647023960541193,57.29421096415567],[-3.646221982852672,57.29456143575017],[-3.645813180677255,57.2949315523072]],[[-3.645813180677255,57.2949315523072],[-3.6453298083090475,57.2962036824192],[-3.6439567990850392,57.2975122429468]],[[-3.6439567990850392,57.2975122429468],[-3.640883085689524,57.299471268962314],[-3.6391288162475885,57.301173859942004],[-3.636974081406035,57.3020635278147],[-3.6356515212598572,57.30241136242983],[-3.6335384274798277,57.30245060303026],[-3.633106187650728,57.302345531336],[-3.631889783990929,57.30135508297304],[-3.6309741522835353,57.30100094330463],[-3.630204080160459,57.30096888374355],[-3.629585668968679,57.30111588753567],[-3.6290832273533233,57.30143073971602],[-3.627927089611724,57.30250325560078],[-3.626067768708588,57.303237882693196]],[[-3.7275411284181077,57.26136490756347],[-3.7270414792244915,57.261908692216565],[-3.726918762744811,57.26241836456865],[-3.7271212053896305,57.263636490589484]],[[-3.7271212053896305,57.263636490589484],[-3.727278666152632,57.26429028702898],[-3.726968027430651,57.26500092077638],[-3.726551333506957,57.265362614139555],[-3.7257680485484648,57.26566168781919],[-3.72473673587057,57.26581663516929],[-3.723648121302865,57.26576041506283],[-3.720295722852786,57.265143387822974],[-3.7188713218704534,57.26509729358984],[-3.717126671107665,57.2652816103143],[-3.714120748650757,57.265890471920876],[-3.711893495551996,57.26672530685655]],[[-3.7630041298040533,57.23559802398391],[-3.7621007566056655,57.23607664503008],[-3.760383273282789,57.23579345485726],[-3.758533341378676,57.235825030747485],[-3.754551335446914,57.23721071580069],[-3.7516244176656914,57.23792604454215],[-3.750478593696237,57.23885575425986],[-3.7483523159102314,57.24002911021213],[-3.747938881407904,57.24063144219655],[-3.74689512897433,57.241540110523545],[-3.7463067578647613,57.24239338352008]],[[-3.7463067578647613,57.24239338352008],[-3.745733644931167,57.243489295058],[-3.745620494553543,57.244149079141835],[-3.746169027594694,57.24479670174615],[-3.747319070734742,57.24554323253592],[-3.747814922994076,57.24879459834507],[-3.747383862542048,57.25147414021383],[-3.747710610864562,57.25265798674119],[-3.7472525708842332,57.25370082005636]],[[-3.7472525708842332,57.25370082005636],[-3.746681624555694,57.254635339638924],[-3.7459139725720343,57.25485022951034],[-3.7439201733859924,57.25506408159144]],[[-3.7439201733859924,57.25506408159144],[-3.742135628871419,57.25528281693371],[-3.739009785507559,57.255407433242326],[-3.738017329137549,57.25559879148703]],[[-3.738017329137549,57.25559879148703],[-3.734668651065928,57.257536321229566],[-3.7338827144607905,57.258264496838756],[-3.7299913008557324,57.260542532825816],[-3.7281802636186208,57.261279031077],[-3.7275411284181077,57.26136490756347]],[[-3.7282178665854886,57.26059514973161],[-3.727594096580973,57.26107972879161],[-3.7275411284181077,57.26136490756347]],[[-3.8295539741643188,57.179681237449564],[-3.829316710944384,57.180845628960626],[-3.8297755824746633,57.18240329052309],[-3.8293738957589634,57.18290942330992],[-3.8295026067771016,57.18328059766693],[-3.828759412856608,57.183997998683424],[-3.8285363047078147,57.18444869499715]],[[-3.829562706651813,57.17814775539901],[-3.828796779782946,57.179052554083576],[-3.828926028001766,57.1794919162519],[-3.8295539741643188,57.179681237449564]],[[-3.828656297481133,57.172787217020975],[-3.8290540972382945,57.173031287433076]],[[-3.8285363047078147,57.18444869499715],[-3.828242355854621,57.18494930045038],[-3.8278502361124014,57.18513758445708],[-3.8280295369358215,57.18564198722619],[-3.8273980541367574,57.186083175349175],[-3.826940585770535,57.18708301980222],[-3.826024993616419,57.187387813479354],[-3.8263837316091696,57.18767576828589],[-3.826175787038225,57.18798544672526],[-3.826544257254815,57.18870165631186],[-3.8256368966712153,57.18904334441384]],[[-3.761492815285045,57.221297969056515],[-3.7630671893477956,57.2218692202426],[-3.7634293071697305,57.22257482195496],[-3.763379796688524,57.22313732802311],[-3.7629186465342603,57.22359159847789],[-3.761716974102813,57.226027132117615],[-3.7612590271630655,57.22652196150613],[-3.7604793851933627,57.22915829768141],[-3.7606895737254527,57.22985264932091],[-3.7616302657718883,57.23078805620452],[-3.7621250929679473,57.231704286520156]],[[-3.763249960322889,57.233809683574705],[-3.7634967413189973,57.23482453830076],[-3.763359679523121,57.23526096013092],[-3.7630041298040533,57.23559802398391]],[[-3.7621250929679473,57.231704286520156],[-3.763249960322889,57.233809683574705]],[[-3.87957882525807,57.14081006648144],[-3.8787518749415697,57.14058965707414],[-3.878395226235714,57.140707132703405]],[[-3.878395226235714,57.140707132703405],[-3.87726595029631,57.1403191790265],[-3.8760073843936325,57.140207281941976]],[[-3.8783954465365515,57.1422604565016],[-3.8769264113897495,57.14197229005199],[-3.8766783940569196,57.14146107167865],[-3.8762494531177216,57.141378358968645],[-3.875079552713136,57.141820757739296],[-3.8745865108834434,57.14245743781649],[-3.874142091605737,57.14257863897992],[-3.873845245036195,57.14249025996324]],[[-3.8760073843936325,57.140207281941976],[-3.8752424398435648,57.14040489243409],[-3.8753714083652793,57.14073594774099],[-3.8751679901633755,57.14110566736008],[-3.873845245036195,57.14249025996324]],[[-3.873845245036195,57.14249025996324],[-3.8724476459975548,57.14334395408944],[-3.871540218056513,57.14372956784149],[-3.869874373544239,57.14396313841487]],[[-3.8709672725563076,57.14320431912357],[-3.870126458530975,57.143613188157566],[-3.869874373544239,57.14396313841487]],[[-3.869874373544239,57.14396313841487],[-3.8693648094952238,57.14431063691879],[-3.868603572639175,57.145551126553755],[-3.867685151515051,57.146530512431156],[-3.8669083022675026,57.14694146102081],[-3.8651839772396657,57.14746811914699],[-3.862700386616978,57.147794526160084],[-3.85589104427034,57.14934402772582],[-3.8548058812959494,57.14968255030228]],[[-3.8548058812959494,57.14968255030228],[-3.851664224080788,57.15082145034245],[-3.8500132615570024,57.15180540383053],[-3.8494477583196427,57.15199191486682],[-3.8477832378440096,57.15334927147006],[-3.8464528076214104,57.15497680515599],[-3.8460504918423326,57.15578840437476],[-3.8461182517884622,57.156381669389354],[-3.849029876459219,57.15799802769094]],[[-3.849401043619527,57.15758005818867],[-3.849029876459219,57.15799802769094]],[[-3.849029876459219,57.15799802769094],[-3.8489949897292592,57.15872012072608],[-3.846865444644193,57.16050732431208],[-3.8465173000030846,57.16111623547322],[-3.8460222327627407,57.165130700049744],[-3.846655375998491,57.167556290412655]],[[-3.846655375998491,57.167556290412655],[-3.846861696021969,57.17019715003131],[-3.8465666297990997,57.170761072654216],[-3.8459191418822956,57.170921636883435]],[[-3.8459191418822956,57.170921636883435],[-3.8450486987454906,57.17114226121007],[-3.8432989602948933,57.172000969606074],[-3.842055324992189,57.17230495401511],[-3.840614761531599,57.17239797483824],[-3.83950174797026,57.17213235255929],[-3.83749255609405,57.17116330474578],[-3.836681910660039,57.1706999644516],[-3.836194863026241,57.17004427923444],[-3.8357268735988317,57.169769272102705],[-3.8344629024715227,57.169432228590686],[-3.8324190337251802,57.16931744077766],[-3.831282836079583,57.169636640834035],[-3.829803042029021,57.17053057227742],[-3.8295467086935258,57.171207456344646],[-3.8295398949814063,57.17257235599506],[-3.8293311713709155,57.17293102012348],[-3.8290540972382945,57.173031287433076]],[[-3.8290540972382945,57.173031287433076],[-3.829581550154545,57.173411832895724],[-3.831502326987352,57.175551137503774],[-3.831436631546881,57.177038461590925],[-3.829858348052039,57.17872009219865],[-3.8303546674378337,57.178900816503464]],[[-3.8310284094531344,57.178688288538254],[-3.8303546674378337,57.178900816503464]],[[-3.8303546674378337,57.178900816503464],[-3.8304483884488074,57.17906638793531],[-3.8295539741643188,57.179681237449564]],[[-3.8254471389214197,57.18494264188137],[-3.8250420402687726,57.18503245231018],[-3.8248450747919804,57.185252659779415],[-3.8247878508916133,57.18549814889553],[-3.8251567396880493,57.18609979966946],[-3.8246331548563113,57.18659906348589],[-3.8244009920949633,57.18715940844465],[-3.8244669101558966,57.187952529381356],[-3.824840828834344,57.188534970225135],[-3.8256368966712153,57.18904334441384]],[[-3.8256368966712153,57.18904334441384],[-3.825354925728244,57.189261644253904],[-3.825349101660412,57.18963999026314],[-3.8249375702228083,57.18970779074046]],[[-3.8249375702228083,57.18970779074046],[-3.823889316664257,57.18972006428047],[-3.8227252846487088,57.19073788485631],[-3.821855382387939,57.19120676490261],[-3.8208367964909127,57.19142253725516],[-3.820036740875558,57.191808269742566],[-3.8197079116088295,57.19212139671202],[-3.8158695029028573,57.19301446475069],[-3.8142224951877326,57.19359282508125],[-3.813889155149767,57.19393340501435]],[[-3.817758311503641,57.19318829274456],[-3.816540236284892,57.19371788269287],[-3.81448007478456,57.19399880844753],[-3.813889155149767,57.19393340501435]],[[-3.813889155149767,57.19393340501435],[-3.8114416041565606,57.19450011433681],[-3.8097822307153346,57.19468640751191],[-3.807345836397505,57.195382076273546],[-3.8054613061942675,57.19609051465017],[-3.8044631885153293,57.19700523261285],[-3.8044713147360176,57.19815220209052],[-3.8048225051285867,57.19895497395946],[-3.8082559936110174,57.20129973197233],[-3.8098105286717194,57.20211408100445],[-3.81022289603141,57.20278702495271],[-3.810367593981012,57.20381513309257]],[[-3.810367593981012,57.20381513309257],[-3.8102255477993294,57.20429858603782],[-3.8097855812252424,57.20477016162667],[-3.808006726321494,57.20567459538276],[-3.804410856300936,57.206452482390254],[-3.8022442791676245,57.206682617971396]],[[-3.8022442791676245,57.206682617971396],[-3.8001841760645036,57.206917029223135],[-3.7960936835705295,57.20825459859931],[-3.7928840894364617,57.20872500627566],[-3.7909205817559064,57.20868744395219],[-3.7877972766548345,57.2077327697357],[-3.786832756607156,57.20766572912847],[-3.7853856839040017,57.20817948900577],[-3.782632486480138,57.21044305005792]],[[-3.782632486480138,57.21044305005792],[-3.7804051150744167,57.211632337169064],[-3.7796337710234935,57.21188226663781],[-3.7775428547002106,57.21225600218413],[-3.776718003918421,57.21262670658817],[-3.776120578775963,57.213378284108046],[-3.775934341019797,57.215298971534324],[-3.7755500604554615,57.215796947430675],[-3.7745938948907636,57.21639060703638],[-3.768532747243933,57.21823487875259],[-3.7641770330227224,57.21901690410078]],[[-3.7641770330227224,57.21901690410078],[-3.761944010753251,57.21979111064353],[-3.7612603673644363,57.220212289127595],[-3.760978350679499,57.220894226889015],[-3.761492815285045,57.221297969056515]],[[-3.922077364622015,57.12981844237225],[-3.921528673673359,57.13030018828697],[-3.9218049185179895,57.13071753560614],[-3.9216435025841156,57.1309568571134],[-3.9199536541222604,57.13170883149257],[-3.918595825574274,57.13270917195943],[-3.9165188629555,57.133343206876646],[-3.9132973222915637,57.13411408907744],[-3.9102638834275547,57.134612738872015],[-3.909226876706258,57.1351338539005],[-3.9081469115186738,57.13539882041118],[-3.9067586949586035,57.13560826535015],[-3.9061370239177546,57.13546676818991],[-3.905804555306053,57.1355537656617]],[[-3.906838729994079,57.13452668337588],[-3.906104488565316,57.13503004933357],[-3.905804555306053,57.1355537656617]],[[-3.905804555306053,57.1355537656617],[-3.904753726276578,57.1360745138116],[-3.9032178946568545,57.1364480721885]],[[-3.9032178946568545,57.1364480721885],[-3.901522789597935,57.136552228895994],[-3.898625265538001,57.13639451074039],[-3.895195316921438,57.13705756119288],[-3.8915988408137534,57.13821945201673],[-3.890587379162355,57.139083162380366],[-3.889068792602782,57.140023958899555],[-3.8886962837130317,57.14013756998473],[-3.8867488371553174,57.14018126221221],[-3.885799516280436,57.14039527895521],[-3.883765604790019,57.14158006378589],[-3.8830364396221597,57.14180503796506],[-3.8823335725524366,57.141858089251166],[-3.87960469154783,57.14128426673723],[-3.878395226235714,57.140707132703405]],[[-4.041149096058656,57.078517309472126],[-4.040761075181647,57.0788638199516],[-4.039915769265778,57.078989995509474],[-4.039092053268937,57.079010594440916],[-4.037356696714458,57.078796492246234],[-4.036899914833492,57.07881047964393],[-4.036202921131785,57.07905381446772]],[[-4.036202921131785,57.07905381446772],[-4.035827700606468,57.079342774065424],[-4.035967730134704,57.0803081389528],[-4.035537234753502,57.08092263919323],[-4.032794350074129,57.08150621185431],[-4.029934802024729,57.08191019855012],[-4.029358941752161,57.08218280060242],[-4.028206333974027,57.0832169067487],[-4.02762093712106,57.083542129593816],[-4.020719896301294,57.08372128919792],[-4.019658391472074,57.08396564644136],[-4.019096358263799,57.08428811575958]],[[-4.019096358263799,57.08428811575958],[-4.017973531609776,57.08515990736978],[-4.0173940558880545,57.08540187109115],[-4.01685098989804,57.08537539187407],[-4.0157222249402835,57.08491086336543],[-4.015246699577307,57.08491545821813],[-4.014458269148343,57.08523930129463]],[[-4.014458269148343,57.08523930129463],[-4.012577829756457,57.085679075639554],[-4.011430790369144,57.08552533663193],[-4.010439321335451,57.08576678299896]],[[-4.010439321335451,57.08576678299896],[-4.005609633808147,57.086315921240036],[-4.004301836803478,57.08656534697199],[-4.003185091145465,57.08702816132571],[-4.001974779848043,57.08776723221854],[-3.998747347727056,57.09046727651666],[-3.9979841886166567,57.0906275264002],[-3.996867891029662,57.09049463800657],[-3.9961588623040694,57.090277259392266]],[[-3.9961588623040694,57.090277259392266],[-3.9957421068700287,57.090249574309254],[-3.993997239521975,57.08962340319651],[-3.9915333206500323,57.08901241340857],[-3.9890356891857888,57.08878423597896],[-3.986713934112577,57.088816579639165],[-3.9854437998616095,57.0891569491417],[-3.9829393712834764,57.09088413792351],[-3.981934736475699,57.09126528509196],[-3.9805491284577386,57.09143284600995]],[[-3.9805491284577386,57.09143284600995],[-3.979419532084983,57.091737056957875],[-3.9789432862935605,57.09204567636128],[-3.97852679842819,57.092912144934225],[-3.977596697036245,57.09392904573828],[-3.9773170005019503,57.09448246009261],[-3.9773917131876972,57.09517862836955],[-3.9785802508755657,57.09617331656713]],[[-3.9785802508755657,57.09617331656713],[-3.9786477604031036,57.09660372358549],[-3.9781661352765907,57.09699544807062],[-3.9755564649215653,57.09778482079476],[-3.974811070869607,57.098221572877534],[-3.974890241408754,57.09906431119132],[-3.975792645126716,57.09966656568229],[-3.9761408034356114,57.10013136481246],[-3.9757173039621674,57.10086584880123],[-3.974655187543872,57.101603566616234],[-3.9734127678215536,57.10210897010949],[-3.9717160939192864,57.102415117374484],[-3.970348166080894,57.102392514317316],[-3.967515400159381,57.101923693021845],[-3.9668715223214286,57.10199256365387],[-3.966385250973367,57.10249653937034],[-3.9669227175470536,57.10365654589356],[-3.9668878390429376,57.10414804687146],[-3.9661533301431677,57.10481324844114],[-3.9636623092862924,57.10607815867587],[-3.9622934762046715,57.10659046116441],[-3.9603333088477104,57.106684122601955],[-3.9594799331643924,57.10683377343847],[-3.959076242483296,57.107134709648896],[-3.9585056216326335,57.10809929561053],[-3.9556366451311438,57.1090511514955],[-3.953023825256068,57.110545968148514],[-3.950797430449081,57.111237188434664],[-3.94970183474375,57.1112520791403],[-3.9494299463613505,57.110939669939086],[-3.950342973909425,57.11005614832597],[-3.9504605701234086,57.10973291787623],[-3.9501963391044694,57.10944357295954],[-3.949478396920229,57.10936614785566],[-3.9479543709167317,57.1094540874302],[-3.9470838676556195,57.110063062164656],[-3.945415339061566,57.11044756995018],[-3.942041369075148,57.110355501115194]],[[-3.942041369075148,57.110355501115194],[-3.9404501623795984,57.11040719117118],[-3.939262304360634,57.11006553971749],[-3.939178187066301,57.110155974086396]],[[-3.939178187066301,57.110155974086396],[-3.9359535440340747,57.11362458762503]],[[-3.9359535440340747,57.11362458762503],[-3.9274871259654187,57.12144948765955]],[[-3.9274871259654187,57.12144948765955],[-3.927332818075534,57.121503075380055]],[[-3.927332818075534,57.121503075380055],[-3.9265826074325827,57.121809678748114],[-3.9264509125304885,57.12344996112246],[-3.925741371575339,57.12383122934265],[-3.925734352819072,57.1240046602299],[-3.9263333746243956,57.124466098209936],[-3.9260326288905745,57.12464583907118],[-3.9259429376677963,57.12495783274388],[-3.9262151215930117,57.125700764197205],[-3.9259314534957,57.12612364929394],[-3.9253764134224225,57.126245656653786]],[[-3.9253764134224225,57.126245656653786],[-3.925626649089335,57.12661685240847],[-3.925419589522166,57.12719813523776],[-3.925655507217589,57.12743028146074],[-3.9257798617271207,57.12813235559333],[-3.925170543049611,57.12895971858333],[-3.92395552366402,57.12938656331904]],[[-3.92395552366402,57.12938656331904],[-3.922077364622015,57.12981844237225]],[[-4.060646442501217,57.06712123754893],[-4.058928958352348,57.06710599298145],[-4.057163931428577,57.067617516403715],[-4.056649385854055,57.06903830565866],[-4.056992400076777,57.069933557872446],[-4.057011614021892,57.070644263913124],[-4.056561645984126,57.071044767734264],[-4.054474517071917,57.07183029466886],[-4.053405635231739,57.071814755385674],[-4.052146641084092,57.0716038327055],[-4.050984776012244,57.07123055702676],[-4.0504628203209005,57.07090475322773],[-4.049649039322191,57.070707363099665],[-4.049079166930932,57.07076574771988],[-4.048491089171085,57.071047536605725],[-4.047726342403119,57.07166799778247],[-4.047343554809011,57.072122090534286],[-4.047475298859429,57.0722226409487],[-4.047074765869178,57.07253145835137],[-4.047294591626175,57.072604781157025],[-4.047338818878476,57.07389553859242],[-4.046631954637722,57.074097581653],[-4.046519655199058,57.074266276394724],[-4.0471578383649325,57.07461724338959],[-4.04762266428038,57.075181300880736]],[[-4.04762266428038,57.075181300880736],[-4.047531847836763,57.075278750074325]],[[-4.047531847836763,57.075278750074325],[-4.047103056763442,57.0753926851695],[-4.04710156384963,57.07633878835482],[-4.046852663585264,57.07664854083488],[-4.045039756084265,57.07709264929174],[-4.042456487040265,57.07737255014378],[-4.041496546772908,57.07790405212997],[-4.041149096058656,57.078517309472126]],[[-4.042360845124733,57.07836700105026],[-4.041606825681351,57.078598716467546],[-4.041149096058656,57.078517309472126]],[[-4.166254685902229,57.03823391635855],[-4.165599003008462,57.03883706444677],[-4.162864003875103,57.0422652444399],[-4.162113505659689,57.04283316900378],[-4.161612483880525,57.04299682511631]],[[-4.161568000935385,57.04300010916121],[-4.160213255616459,57.0439563043823],[-4.158839466402759,57.04467361159215],[-4.156797462029972,57.045410952551116],[-4.151625156615456,57.04628799698813],[-4.1495315321286155,57.04644131243677],[-4.1476067913991,57.0467616160973]],[[-4.148475060709135,57.046260951062806],[-4.147661491442468,57.04652974456403],[-4.1476067913991,57.0467616160973]],[[-4.1476067913991,57.0467616160973],[-4.14608426998649,57.04709871847496],[-4.145151525806737,57.04753146067251],[-4.144399606549677,57.04803828616568],[-4.14285099239605,57.04962364152234],[-4.141401015803625,57.050470281291744],[-4.139726660777552,57.0510978925633],[-4.138459773699282,57.05126258805478],[-4.13716246717253,57.051256791970054],[-4.134889954737477,57.05103407538741],[-4.13363780215422,57.05126047192989],[-4.133455793589086,57.05179256078708],[-4.133519136598957,57.052523006453534],[-4.133744563663278,57.052721702683066],[-4.13253516430265,57.05360843584372]],[[-4.131612811834676,57.05480036643917],[-4.130420882748108,57.05515078468653],[-4.129103408771015,57.05520113777252],[-4.127812149015384,57.05509297355205],[-4.125704996067799,57.05397275539492],[-4.12482038907124,57.05378325552204],[-4.123131678753824,57.05307228977761],[-4.120810707398522,57.053992216086975],[-4.11914039708151,57.05518557426227],[-4.1163934937987205,57.05597649091464],[-4.115383772047777,57.05616167345912],[-4.113116781279898,57.05627390062611],[-4.109386466991082,57.05612841624819],[-4.108178894282065,57.056405021885425],[-4.106831801453689,57.05708337390913],[-4.104879770578206,57.058589032153755],[-4.104531895262793,57.059927894317305],[-4.105003708162247,57.06114200765353],[-4.10470983628503,57.061894010417454],[-4.104073791443151,57.06240546605576],[-4.10343093996385,57.06340027836335],[-4.103595491406609,57.064841950266484],[-4.102771360663839,57.06589596295902],[-4.101880910754728,57.06629729063912],[-4.100532242044789,57.0665299103868],[-4.099708688859668,57.06706200870592],[-4.098877718111362,57.06793343157417],[-4.096269531166269,57.06887674826585],[-4.092896614435006,57.0697469776398],[-4.091285880716185,57.06958815024547],[-4.090077654497528,57.06976637392124]],[[-4.13253516430265,57.05360843584372],[-4.131381124232454,57.054561517127],[-4.131612811834676,57.05480036643917]],[[-4.090077654497528,57.06976637392124],[-4.086874633450117,57.070848717873105],[-4.086478597793019,57.071093522708026],[-4.083557485894697,57.07149950348643],[-4.082801820986459,57.07128878049571],[-4.082259312016953,57.07093981633791],[-4.081734306022588,57.06953376911293],[-4.0813792124433075,57.06925815330536],[-4.080745332201081,57.0690442264346],[-4.078937786445872,57.06884816533906],[-4.077895315863367,57.0685897879138],[-4.074967671839613,57.06824161209023]],[[-4.535638823473836,57.02490973236064],[-4.534492252052764,57.02500179808433],[-4.534171507194285,57.02545574491098],[-4.532901856219278,57.026173070805044],[-4.532178348678529,57.026317301687904],[-4.531792923340079,57.02625949657244],[-4.530377885349525,57.02673979082431]],[[-4.5327732200701325,57.026428292219435],[-4.5318616482109455,57.026770710878004]],[[-4.5318616482109455,57.026770710878004],[-4.531489137781199,57.02668963739112],[-4.530544289080055,57.02683617904346],[-4.530377885349525,57.02673979082431]],[[-4.530377885349525,57.02673979082431],[-4.529254645725825,57.02676878815405],[-4.527841015876922,57.02598467914619],[-4.526105087025134,57.025544782978486],[-4.525661959462826,57.02549603226713],[-4.525076005963523,57.025615518017524],[-4.524572105100075,57.0255089468275]],[[-4.522484379109444,57.0257005858152],[-4.521288626413941,57.02598206275989],[-4.520534446997156,57.02581266778025],[-4.516114889471868,57.02625990562139],[-4.516003394080559,57.02610002695109],[-4.515241559541804,57.0260657346426],[-4.512653763934463,57.02676718880782],[-4.510817957893529,57.026705899820904]],[[-4.484247653599451,57.02732638743541],[-4.483926590843285,57.02734300504471],[-4.4835587859932335,57.02707899854972]],[[-4.41212514912806,57.01522820188395],[-4.4104736945107215,57.01495637479121],[-4.4098177086259405,57.01506822032081],[-4.4095976881230765,57.01533908498851]],[[-4.4095976881230765,57.01533908498851],[-4.4087323888954035,57.015365540283625],[-4.4082723778265605,57.01556319960075],[-4.406286671051733,57.01693274021222]],[[-4.433651616411407,57.02199437136858],[-4.432540759406251,57.02170198182579],[-4.431311581260801,57.02116178759842],[-4.430009523793429,57.02007751733768],[-4.427895372512101,57.0191483736384],[-4.427095031307331,57.01851462648557],[-4.426103070937096,57.01810269155125],[-4.42438881938974,57.01787962192599],[-4.421392923228619,57.018308681288204],[-4.41895778759906,57.01833978270922],[-4.417056851974436,57.01728852551181],[-4.416118963922386,57.017083055458954],[-4.412308931910832,57.01560101109908],[-4.4095976881230765,57.01533908498851]],[[-4.390309804687675,57.015879943845995],[-4.389942077210035,57.01584095756355],[-4.38973402181221,57.016031039111624],[-4.388234551543344,57.01618233087474],[-4.38749069659715,57.015783242398264]],[[-4.400098680963167,57.01809220813291],[-4.39827656387333,57.01843241143216],[-4.396593614609967,57.01784333524195],[-4.396936086309006,57.01739491449279],[-4.396867605968694,57.01713472203689],[-4.395163420858265,57.01677509735722],[-4.394482384110489,57.01675218572859],[-4.392284513924191,57.01603361631533],[-4.391143630452218,57.01585817171794],[-4.390309804687675,57.015879943845995]],[[-4.4091322400124575,57.01632595087009],[-4.4084656281354775,57.01677821979586],[-4.407229378970141,57.017104132066],[-4.406655479934048,57.01709504156043],[-4.406286671051733,57.01693274021222]],[[-4.406286671051733,57.01693274021222],[-4.4041157737960805,57.01763586812929],[-4.40175031904442,57.017701960698524]],[[-4.405028567713345,57.01696914879377],[-4.402719362521317,57.01737521346263],[-4.40175031904442,57.017701960698524]],[[-4.40175031904442,57.017701960698524],[-4.400516126420764,57.01773660652373],[-4.400055190853048,57.01797981356193],[-4.400098680963167,57.01809220813291]],[[-4.400527325126022,57.01803294312793],[-4.400098680963167,57.01809220813291]],[[-4.4835587859932335,57.02707899854972],[-4.48295241352963,57.02696881256139],[-4.481706626769112,57.02645540444326],[-4.4802179002922475,57.02623508987015],[-4.477850839959467,57.02523953280201],[-4.476938889068904,57.0243253155061],[-4.476886207320363,57.02380603363671],[-4.47455916547999,57.023086501890816],[-4.47427606046692,57.02243670690084],[-4.472716708248709,57.020929292982835],[-4.4718323238124915,57.02041179337482],[-4.471375499498709,57.02038046653915],[-4.470567559455413,57.0200933026769],[-4.468566677480474,57.018922656536],[-4.466833604137819,57.01882805629011],[-4.465862204008488,57.01927325647619],[-4.465523359780217,57.01968217266778],[-4.464672984852447,57.01975850583237],[-4.463587785934356,57.019363707162974],[-4.461936776456442,57.01923453245232],[-4.4590065932490335,57.01951663252585],[-4.456804613316793,57.01949679866288],[-4.4553673873979305,57.01907145667288],[-4.453606481394036,57.01814156030068],[-4.451462319103762,57.0183279090814],[-4.44888301613808,57.01881219383212]],[[-4.44888301613808,57.01881219383212],[-4.447866039104695,57.01905352039254],[-4.444153504107236,57.0191397495196],[-4.440252163954467,57.01883162751127],[-4.437941639623567,57.01897982924203],[-4.437480619888707,57.019210776973296],[-4.4367607276507535,57.02018626355429],[-4.43566148738198,57.02073580060669],[-4.434595998752054,57.021610431392915],[-4.433651616411407,57.02199437136858]],[[-4.074967671839613,57.06824161209023],[-4.072000884538332,57.06856020265377],[-4.068091140588324,57.06989546163001],[-4.06585280625526,57.0700239618018],[-4.06400883667956,57.06989612684215],[-4.06197978940574,57.06879306047898],[-4.061808766002085,57.06835666463335],[-4.060646442501217,57.06712123754893]],[[-4.248969656105024,57.01265678565196],[-4.248053463618743,57.01269715167603],[-4.247634450932673,57.01284773613239],[-4.24744062164968,57.01331246976659],[-4.247665287426289,57.014191040944176],[-4.247063701661144,57.0146494384907],[-4.24485695071045,57.01466451388988],[-4.242920361833628,57.014909512532],[-4.242497856745969,57.01513688231161],[-4.242562040606151,57.01546138477698],[-4.243816553072041,57.01643346748557],[-4.24380832757291,57.01679997429984],[-4.243365712134019,57.0170492737714],[-4.241845153228037,57.017467234381535],[-4.241379305261665,57.01738293333035],[-4.240099424041436,57.016796420434986],[-4.239331285897375,57.01610377949931]],[[-4.239331285897375,57.01610377949931],[-4.237971380895636,57.01566182432343],[-4.236827157443613,57.01550813398055],[-4.236419188034902,57.015330943446045],[-4.235961840877079,57.01534091337529],[-4.232556207373013,57.01473864374119],[-4.231626136263991,57.01495256564185],[-4.229200066063993,57.0163040743143],[-4.228368649454925,57.01648557177915],[-4.227045058251343,57.01641190583615],[-4.225737468693895,57.01621725992335],[-4.224913646924081,57.0159636789206],[-4.22435713061608,57.01525954824608],[-4.2241918726788485,57.01463014392769],[-4.223650137778824,57.01434125817457]],[[-4.223650137778824,57.01434125817457],[-4.2229417372908635,57.01435357475125],[-4.222680421726268,57.014625728340995],[-4.221310010475535,57.014944980917384],[-4.21965814228074,57.015036295253175],[-4.217042220388269,57.01458700400183],[-4.215781915124274,57.014946927956764],[-4.214976908390155,57.01553142669075],[-4.214436767026876,57.015728163038546],[-4.213383048780679,57.01583441774272],[-4.212880101712155,57.01570645684474],[-4.211728818202857,57.01571216299884],[-4.209956802953643,57.01609481867386]],[[-4.209956802953643,57.01609481867386],[-4.209462801984152,57.01614802196467],[-4.2082736927325195,57.01599944684281],[-4.205888937527066,57.01710417996708],[-4.204692905744934,57.017851677235086],[-4.203635218268125,57.018223542074686],[-4.202196060417948,57.0183212119363],[-4.20074510724889,57.018160907863546]],[[-4.20074510724889,57.018160907863546],[-4.199957264118756,57.01836903504619],[-4.198226410806073,57.01928833406036]],[[-4.198226410806073,57.01928833406036],[-4.197944679762436,57.01931035556866]],[[-4.197944679762436,57.01931035556866],[-4.196023303795286,57.01877474024294],[-4.19431569222151,57.01922936570708],[-4.193029991805016,57.01891825690231],[-4.192560533230897,57.01891084724141],[-4.191920177685395,57.01922704504959],[-4.190175581506479,57.02057204144175],[-4.187845790747487,57.021339118955915],[-4.1871895819083464,57.02283388401912],[-4.186708049336203,57.023334183925336],[-4.185599895278641,57.02363785288026],[-4.184503825898767,57.023445821273526],[-4.183780505578532,57.0236000611237],[-4.1823186259645455,57.02460447764507],[-4.1819469039057235,57.025335217278325],[-4.1820172702953995,57.025790740738714],[-4.182420322544001,57.02618169621815],[-4.1829301653145405,57.02640419052068],[-4.185496513414547,57.02685272782265],[-4.185698688698469,57.02704904264639],[-4.184700892813217,57.028241092384796],[-4.182733622224417,57.02836608174951],[-4.18248546831099,57.02915873640671],[-4.182062747245849,57.02935759462164],[-4.181758923826118,57.029726637378744],[-4.182182533357296,57.03096495900087],[-4.181975406542749,57.03149936289222],[-4.181206848979349,57.03193338456769],[-4.1787270308390605,57.032841277899735],[-4.177457828861174,57.033578364109296],[-4.177100466778413,57.0338900078792],[-4.177134485638006,57.034153149931385],[-4.176496333382917,57.03514199375775],[-4.174411654097265,57.035221803913885],[-4.171504532288211,57.035595127625264],[-4.1701724226895305,57.03624669528912],[-4.169780949803259,57.03694430928163],[-4.1678273139879005,57.03722706246687],[-4.166254685902229,57.03823391635855]],[[-4.524572105100075,57.0255089468275],[-4.523998909236856,57.02526744246839],[-4.523368921986759,57.025247884841136],[-4.522947620310695,57.02534840349675],[-4.522484379109444,57.0257005858152]],[[-4.510817957893529,57.026705899820904],[-4.510117825509318,57.02661165512465],[-4.508620537771625,57.02586127387766],[-4.507179027841474,57.024692865258416],[-4.505232816155106,57.02467882065558],[-4.503656175080057,57.024948341208656],[-4.502430049591359,57.02487041761561],[-4.501342923364299,57.02465148874787]],[[-4.501971177631959,57.02446180212787],[-4.501342923364299,57.02465148874787]],[[-4.501342923364299,57.02465148874787],[-4.50049517473431,57.02462538463155],[-4.498975034801784,57.02427902871116],[-4.497627973531655,57.024176243763854],[-4.496695010581688,57.02357720754259]],[[-4.496695010581688,57.02357720754259],[-4.495280402515922,57.02331434489483],[-4.494621440681153,57.023304207452234],[-4.48801924323446,57.0253560909808],[-4.4877860809235575,57.025260076011875],[-4.487503438144289,57.02533102733038],[-4.484640645761461,57.02690861584562],[-4.4835587859932335,57.02707899854972]],[[-4.337585664440523,57.01186480268008],[-4.337365188845374,57.01192122135714],[-4.336692700795714,57.01138921522688],[-4.33607457543973,57.01128240830536],[-4.332122143633523,57.01240680821329],[-4.327111520691256,57.01255176684391],[-4.322794162229174,57.01335142207025],[-4.320859674803463,57.01399945742783],[-4.316913868500786,57.014445147503984],[-4.314142871226223,57.015010793211864],[-4.3127500602940865,57.0150238728677],[-4.30999563606766,57.01465276003938],[-4.308797867898074,57.014070545639484],[-4.3068308920352285,57.013461975560226]],[[-4.3003622136388895,57.01495019069124],[-4.299634617771718,57.01545726301594],[-4.298703931833543,57.01562353302305],[-4.298191239433488,57.015849695766704],[-4.295840790478925,57.01611911205374],[-4.292426686447,57.01721124358272],[-4.291559673317166,57.01766915087529],[-4.288841254254611,57.0183334615937]],[[-4.371421424113897,57.00794098922369],[-4.370807649421723,57.008017142996714],[-4.369644591166447,57.007888834797356],[-4.368589760592509,57.007322989261915]],[[-4.368589760592509,57.007322989261915],[-4.3681475484149335,57.007470738174916],[-4.366550770757911,57.00757167377419]],[[-4.38749069659715,57.015783242398264],[-4.385998961125564,57.01455899563609],[-4.385720351331228,57.01401317379323],[-4.3857982025402205,57.01333852023631],[-4.385446102346964,57.012030976242],[-4.38473378125401,57.0112170892821],[-4.383900511636753,57.01065154985382],[-4.38261811686966,57.01024337275472],[-4.38112259855739,57.009487153108765],[-4.3801035665078345,57.00836383613368],[-4.379261994519526,57.00778737177738],[-4.378302663447536,57.00744265219508],[-4.37641916215385,57.00717955528499],[-4.371421424113897,57.00794098922369]],[[-4.366550770757911,57.00757167377419],[-4.364323509636999,57.00858071073612],[-4.3606189019409065,57.008379544048495],[-4.353468558332203,57.00856097534059],[-4.345377263853075,57.01014792799376],[-4.344776275864937,57.010193070167006],[-4.342121248052092,57.00996700867214],[-4.340431468096092,57.01054067890712],[-4.3404850912742665,57.01097721671841],[-4.340257388706591,57.01115176532761],[-4.338821129001772,57.01143329056494]],[[-4.371727819707671,57.008122816315264],[-4.371421424113897,57.00794098922369]],[[-4.372915405110549,57.00813175077884],[-4.371727819707671,57.008122816315264]],[[-4.338821129001772,57.01143329056494],[-4.337585664440523,57.01186480268008]],[[-4.288841254254611,57.0183334615937],[-4.283617239324528,57.01869920227807],[-4.280992255540944,57.01819218475818],[-4.279690742062831,57.01831798318633],[-4.277385879163505,57.01905439414646],[-4.2767169829621965,57.019105205292895],[-4.276222646188228,57.019025505134934],[-4.275418765863084,57.01850392496674],[-4.2757348878539,57.01742272237393],[-4.27508450603528,57.016366013341454],[-4.274353718028264,57.01617684103765],[-4.273447440152664,57.01617021502169],[-4.271818119156597,57.01695697183171]],[[-4.271818119156597,57.01695697183171],[-4.2710530186477245,57.01683175503395],[-4.269716669836409,57.01586690381298],[-4.26912156945362,57.01582764385855]],[[-4.26912156945362,57.01582764385855],[-4.267902466742089,57.01607511454304],[-4.266938139333068,57.015867127337444],[-4.266235628861414,57.015224138974894],[-4.264065791751568,57.01401004126366],[-4.262981421816171,57.013102115734156],[-4.2627891700686,57.01242400014368],[-4.263651457207671,57.01126133370064],[-4.2636323493096535,57.010247782267015]],[[-4.2636323493096535,57.010247782267015],[-4.263310612879691,57.01000010558252],[-4.263445288122318,57.0096929521605],[-4.263248598330279,57.00935090614505],[-4.261852104508019,57.00903945054593],[-4.261337900986024,57.00915603820239],[-4.260029512638214,57.009834760731714],[-4.258799206987414,57.01011793142148],[-4.257515669828482,57.01062643174072],[-4.255794242923146,57.01102527607113],[-4.254312681640145,57.01185811392677],[-4.251787108097014,57.012645205507276],[-4.2507352354402075,57.01280350316442],[-4.248969656105024,57.01265678565196]]],\"bbox\":[-4.5948822297823,57.00717955528499,-3.0926521245663716,57.676932205767464]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/investigations/what-whisky/rivers.json\n// module id = 561\n// module chunks = 92755437227203","module.exports = __webpack_public_path__ + \"static/rothes.f923358e.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/investigations/what-whisky/rothes.png\n// module id = 948\n// module chunks = 92755437227203","module.exports = [{\"RowID\":\"1\",\"Distillery\":\"Aberfeldy\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"2\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"PH15 2EB\",\" Latitude\":\"286580\",\" Longitude\":\"749680\",\"cluster\":\"1\",\"lat\":56.625181,\"long\":-3.85019515,\"formatname\":\"Aberfeldy\"},{\"RowID\":\"2\",\"Distillery\":\"Aberlour\",\"Body\":\"3\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"4\",\"Spicy\":\"3\",\"Winey\":\"2\",\"Nutty\":\"2\",\"Malty\":\"3\",\"Fruity\":\"3\",\"Floral\":\"2\",\"Postcode\":\"AB38 9PJ\",\" Latitude\":\"326340\",\" Longitude\":\"842570\",\"cluster\":\"8\",\"lat\":57.46738123,\"long\":-3.22964348,\"formatname\":\"Aberlour\"},{\"RowID\":\"3\",\"Distillery\":\"AnCnoc\",\"Body\":\"1\",\"Sweetness\":\"3\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"0\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"3\",\"Floral\":\"2\",\"Postcode\":\"AB5 5LI\",\" Latitude\":\"352960\",\" Longitude\":\"839320\",\"cluster\":\"3\",\"lat\":57.44173653,\"long\":-2.78529592,\"formatname\":\"An Cnoc\"},{\"RowID\":\"4\",\"Distillery\":\"Ardbeg\",\"Body\":\"4\",\"Sweetness\":\"1\",\"Smoky\":\"4\",\"Medicinal\":\"4\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"1\",\"Floral\":\"0\",\"Postcode\":\"PA42 7EB\",\" Latitude\":\"141560\",\" Longitude\":\"646220\",\"cluster\":\"5\",\"lat\":55.64060148,\"long\":-6.10845806,\"formatname\":\"Ardbeg\"},{\"RowID\":\"5\",\"Distillery\":\"Ardmore\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"3\",\"Fruity\":\"1\",\"Floral\":\"1\",\"Postcode\":\"AB54 4NH\",\" Latitude\":\"355350\",\" Longitude\":\"829140\",\"cluster\":\"1\",\"lat\":57.35054344,\"long\":-2.74363022,\"formatname\":\"Ardmore\"},{\"RowID\":\"6\",\"Distillery\":\"ArranIsleOf\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"0\",\"Malty\":\"1\",\"Fruity\":\"1\",\"Floral\":\"2\",\"Postcode\":\"KA27 8HJ\",\" Latitude\":\"194050\",\" Longitude\":\"649950\",\"cluster\":\"0\",\"lat\":55.69914211,\"long\":-5.27886257,\"formatname\":\"Arran Isle Of\"},{\"RowID\":\"7\",\"Distillery\":\"Auchentoshan\",\"Body\":\"0\",\"Sweetness\":\"2\",\"Smoky\":\"0\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"3\",\"Floral\":\"3\",\"Postcode\":\"G81 4SJ\",\" Latitude\":\"247670\",\" Longitude\":\"672610\",\"cluster\":\"3\",\"lat\":55.92236733,\"long\":-4.4393239,\"formatname\":\"Auchentoshan\"},{\"RowID\":\"8\",\"Distillery\":\"Auchroisk\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"2\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"1\",\"Postcode\":\"AB55 3XS\",\" Latitude\":\"340754\",\" Longitude\":\"848623\",\"cluster\":\"8\",\"lat\":57.52385673,\"long\":-2.99086521,\"formatname\":\"Auchroisk\"},{\"RowID\":\"9\",\"Distillery\":\"Aultmore\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"0\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB55 3QY\",\" Latitude\":\"340754\",\" Longitude\":\"848623\",\"cluster\":\"3\",\"lat\":57.52385673,\"long\":-2.99086521,\"formatname\":\"Aultmore\"},{\"RowID\":\"10\",\"Distillery\":\"Balblair\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"2\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"1\",\"Postcode\":\"IV19 1LB\",\" Latitude\":\"270820\",\" Longitude\":\"885770\",\"cluster\":\"6\",\"lat\":57.84272037,\"long\":-4.17775055,\"formatname\":\"Balblair\"},{\"RowID\":\"11\",\"Distillery\":\"Balmenach\",\"Body\":\"4\",\"Sweetness\":\"3\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"3\",\"Nutty\":\"3\",\"Malty\":\"0\",\"Fruity\":\"1\",\"Floral\":\"2\",\"Postcode\":\"PH26 3PF\",\" Latitude\":\"307750\",\" Longitude\":\"827170\",\"cluster\":\"4\",\"lat\":57.32569601,\"long\":-3.53365497,\"formatname\":\"Balmenach\"},{\"RowID\":\"12\",\"Distillery\":\"Belvenie\",\"Body\":\"3\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"3\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"0\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB55 4DH\",\" Latitude\":\"332337\",\" Longitude\":\"841274\",\"cluster\":\"8\",\"lat\":57.45667664,\"long\":-3.12933157,\"formatname\":\"Belvenie\"},{\"RowID\":\"13\",\"Distillery\":\"BenNevis\",\"Body\":\"4\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"PH33 6TJ\",\" Latitude\":\"212600\",\" Longitude\":\"775710\",\"cluster\":\"1\",\"lat\":56.83493621,\"long\":-5.07340457,\"formatname\":\"Ben Nevis\"},{\"RowID\":\"14\",\"Distillery\":\"Benriach\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"0\",\"Malty\":\"2\",\"Fruity\":\"3\",\"Floral\":\"2\",\"Postcode\":\"IV30 8SJ\",\" Latitude\":\"323450\",\" Longitude\":\"858380\",\"cluster\":\"3\",\"lat\":57.60887851,\"long\":-3.28278649,\"formatname\":\"Benriach\"},{\"RowID\":\"15\",\"Distillery\":\"Benrinnes\",\"Body\":\"3\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"3\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"3\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB38 9NN\",\" Latitude\":\"325800\",\" Longitude\":\"839920\",\"cluster\":\"1\",\"lat\":57.44349494,\"long\":-3.23783888,\"formatname\":\"Benrinnes\"},{\"RowID\":\"16\",\"Distillery\":\"Benromach\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"IV36 3EB\",\" Latitude\":\"303330\",\" Longitude\":\"859350\",\"cluster\":\"1\",\"lat\":57.61372313,\"long\":-3.61976289,\"formatname\":\"Benromach\"},{\"RowID\":\"17\",\"Distillery\":\"Bladnoch\",\"Body\":\"1\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"0\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"3\",\"Postcode\":\"DG8 9AB\",\" Latitude\":\"242260\",\" Longitude\":\"554260\",\"cluster\":\"3\",\"lat\":54.85820352,\"long\":-4.45893681,\"formatname\":\"Bladnoch\"},{\"RowID\":\"18\",\"Distillery\":\"BlairAthol\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"2\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"PH16 5LY\",\" Latitude\":\"294860\",\" Longitude\":\"757580\",\"cluster\":\"1\",\"lat\":56.69805291,\"long\":-3.71854165,\"formatname\":\"Blair Athol\"},{\"RowID\":\"19\",\"Distillery\":\"Bowmore\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"3\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"1\",\"Fruity\":\"1\",\"Floral\":\"2\",\"Postcode\":\"PA43 7GS\",\" Latitude\":\"131330\",\" Longitude\":\"659720\",\"cluster\":\"2\",\"lat\":55.75601608,\"long\":-6.28375983,\"formatname\":\"Bowmore\"},{\"RowID\":\"20\",\"Distillery\":\"Bruichladdich\",\"Body\":\"1\",\"Sweetness\":\"1\",\"Smoky\":\"2\",\"Medicinal\":\"2\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"PA49 7UN\",\" Latitude\":\"126680\",\" Longitude\":\"661400\",\"cluster\":\"2\",\"lat\":55.76846517,\"long\":-6.35931676,\"formatname\":\"Bruichladdich\"},{\"RowID\":\"21\",\"Distillery\":\"Bunnahabhain\",\"Body\":\"1\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"3\",\"Postcode\":\"PA46 7RR\",\" Latitude\":\"142210\",\" Longitude\":\"673170\",\"cluster\":\"3\",\"lat\":55.88246436,\"long\":-6.12361612,\"formatname\":\"Bunnahabhain\"},{\"RowID\":\"22\",\"Distillery\":\"Caol Ila\",\"Body\":\"3\",\"Sweetness\":\"1\",\"Smoky\":\"4\",\"Medicinal\":\"2\",\"Tobacco\":\"1\",\"Honey\":\"0\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"1\",\"Floral\":\"1\",\"Postcode\":\"PA46 7RL\",\" Latitude\":\"142920\",\" Longitude\":\"670040\",\"cluster\":\"5\",\"lat\":55.85479401,\"long\":-6.10932768,\"formatname\":\"Caol Ila\"},{\"RowID\":\"23\",\"Distillery\":\"Cardhu\",\"Body\":\"1\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB38 7RY\",\" Latitude\":\"318790\",\" Longitude\":\"843090\",\"cluster\":\"3\",\"lat\":57.47076055,\"long\":-3.35564411,\"formatname\":\"Cardhu\"},{\"RowID\":\"24\",\"Distillery\":\"Clynelish\",\"Body\":\"3\",\"Sweetness\":\"2\",\"Smoky\":\"3\",\"Medicinal\":\"3\",\"Tobacco\":\"1\",\"Honey\":\"0\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"0\",\"Postcode\":\"KW9 6LB\",\" Latitude\":\"290250\",\" Longitude\":\"904230\",\"cluster\":\"5\",\"lat\":58.01363295,\"long\":-3.85921222,\"formatname\":\"Clynelish\"},{\"RowID\":\"25\",\"Distillery\":\"Craigallechie\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"1\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"1\",\"Floral\":\"4\",\"Postcode\":\"AB38 9ST\",\" Latitude\":\"328920\",\" Longitude\":\"844920\",\"cluster\":\"1\",\"lat\":57.4888974,\"long\":-3.18732751,\"formatname\":\"Craigallechie\"},{\"RowID\":\"26\",\"Distillery\":\"Craigganmore\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"2\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"1\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB37 9AB\",\" Latitude\":\"316600\",\" Longitude\":\"836370\",\"cluster\":\"6\",\"lat\":57.41001789,\"long\":-3.38985467,\"formatname\":\"Craigganmore\"},{\"RowID\":\"27\",\"Distillery\":\"Dailuaine\",\"Body\":\"4\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"2\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"1\",\"Postcode\":\"AB38 7RE\",\" Latitude\":\"323520\",\" Longitude\":\"841010\",\"cluster\":\"4\",\"lat\":57.45290475,\"long\":-3.27615435,\"formatname\":\"Dailuaine\"},{\"RowID\":\"28\",\"Distillery\":\"Dalmore\",\"Body\":\"3\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"2\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"3\",\"Floral\":\"1\",\"Postcode\":\"IV17 0UT\",\" Latitude\":\"266610\",\" Longitude\":\"868730\",\"cluster\":\"4\",\"lat\":57.68854565,\"long\":-4.23911984,\"formatname\":\"Dalmore\"},{\"RowID\":\"29\",\"Distillery\":\"Dalwhinnie\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"PH19 1AB\",\" Latitude\":\"263670\",\" Longitude\":\"785270\",\"cluster\":\"1\",\"lat\":56.93855017,\"long\":-4.24228592,\"formatname\":\"Dalwhinnie\"},{\"RowID\":\"30\",\"Distillery\":\"Deanston\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"3\",\"Fruity\":\"2\",\"Floral\":\"1\",\"Postcode\":\"FK16 6AG\",\" Latitude\":\"271570\",\" Longitude\":\"701570\",\"cluster\":\"1\",\"lat\":56.18936988,\"long\":-4.07105489,\"formatname\":\"Deanston\"},{\"RowID\":\"31\",\"Distillery\":\"Dufftown\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"0\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB55 4BR\",\" Latitude\":\"332360\",\" Longitude\":\"839200\",\"cluster\":\"3\",\"lat\":57.43805389,\"long\":-3.12837464,\"formatname\":\"Dufftown\"},{\"RowID\":\"32\",\"Distillery\":\"Edradour\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"4\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"PH16 5JP\",\" Latitude\":\"295960\",\" Longitude\":\"757940\",\"cluster\":\"1\",\"lat\":56.70153206,\"long\":-3.70073367,\"formatname\":\"Edradour\"},{\"RowID\":\"33\",\"Distillery\":\"GlenDeveronMacduff\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"1\",\"Tobacco\":\"1\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"2\",\"Nutty\":\"0\",\"Malty\":\"2\",\"Fruity\":\"0\",\"Floral\":\"1\",\"Postcode\":\"AB4 3JT\",\" Latitude\":\"372120\",\" Longitude\":\"860400\",\"cluster\":\"0\",\"lat\":57.63266484,\"long\":-2.46855037,\"formatname\":\"Glen Deveron Macduff\"},{\"RowID\":\"34\",\"Distillery\":\"GlenElgin\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"3\",\"Postcode\":\"IV30 3SL\",\" Latitude\":\"322640\",\" Longitude\":\"861040\",\"cluster\":\"8\",\"lat\":57.63262696,\"long\":-3.29718943,\"formatname\":\"Glen Elgin\"},{\"RowID\":\"35\",\"Distillery\":\"GlenGarioch\",\"Body\":\"2\",\"Sweetness\":\"1\",\"Smoky\":\"3\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"3\",\"Winey\":\"1\",\"Nutty\":\"0\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB51 0ES\",\" Latitude\":\"381020\",\" Longitude\":\"827590\",\"cluster\":\"6\",\"lat\":57.33841743,\"long\":-2.31694835,\"formatname\":\"Glen Garioch\"},{\"RowID\":\"36\",\"Distillery\":\"GlenGrant\",\"Body\":\"1\",\"Sweetness\":\"2\",\"Smoky\":\"0\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"0\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"1\",\"Postcode\":\"AB38 7BS\",\" Latitude\":\"327610\",\" Longitude\":\"849570\",\"cluster\":\"3\",\"lat\":57.53044903,\"long\":-3.21055585,\"formatname\":\"Glen Grant\"},{\"RowID\":\"37\",\"Distillery\":\"GlenKeith\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"1\",\"Postcode\":\"AB55 3BU\",\" Latitude\":\"340754\",\" Longitude\":\"848623\",\"cluster\":\"6\",\"lat\":57.52385673,\"long\":-2.99086521,\"formatname\":\"Glen Keith\"},{\"RowID\":\"38\",\"Distillery\":\"GlenMoray\",\"Body\":\"1\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"4\",\"Postcode\":\"IV30 1YE\",\" Latitude\":\"319820\",\" Longitude\":\"862320\",\"cluster\":\"3\",\"lat\":57.64362824,\"long\":-3.34482558,\"formatname\":\"Glen Moray\"},{\"RowID\":\"39\",\"Distillery\":\"GlenOrd\",\"Body\":\"3\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"IV6 7UJ\",\" Latitude\":\"251810\",\" Longitude\":\"850860\",\"cluster\":\"8\",\"lat\":57.52354702,\"long\":-4.47618294,\"formatname\":\"Glen Ord\"},{\"RowID\":\"40\",\"Distillery\":\"GlenScotia\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"2\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"0\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"1\",\"Floral\":\"1\",\"Postcode\":\"PA28 6DS\",\" Latitude\":\"172090\",\" Longitude\":\"621010\",\"cluster\":\"2\",\"lat\":55.42981002,\"long\":-5.60370008,\"formatname\":\"Glen Scotia\"},{\"RowID\":\"41\",\"Distillery\":\"GlenSpey\",\"Body\":\"1\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"0\",\"Floral\":\"2\",\"Postcode\":\"AB38 7AU\",\" Latitude\":\"327760\",\" Longitude\":\"849140\",\"cluster\":\"0\",\"lat\":57.52661145,\"long\":-3.20792383,\"formatname\":\"Glen Spey\"},{\"RowID\":\"42\",\"Distillery\":\"Glenallachie\",\"Body\":\"1\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB38 9LR\",\" Latitude\":\"326490\",\" Longitude\":\"841240\",\"cluster\":\"3\",\"lat\":57.45546152,\"long\":-3.22674329,\"formatname\":\"Glenallachie\"},{\"RowID\":\"43\",\"Distillery\":\"Glendronach\",\"Body\":\"4\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"4\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"0\",\"Postcode\":\"AB54 6DA\",\" Latitude\":\"361200\",\" Longitude\":\"844930\",\"cluster\":\"4\",\"lat\":57.49290616,\"long\":-2.64892973,\"formatname\":\"Glendronach\"},{\"RowID\":\"44\",\"Distillery\":\"Glendullan\",\"Body\":\"3\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"2\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"3\",\"Floral\":\"2\",\"Postcode\":\"AB55 4DJ\",\" Latitude\":\"333000\",\" Longitude\":\"840300\",\"cluster\":\"8\",\"lat\":57.44802772,\"long\":-3.11801742,\"formatname\":\"Glendullan\"},{\"RowID\":\"45\",\"Distillery\":\"Glenfarclas\",\"Body\":\"2\",\"Sweetness\":\"4\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"3\",\"Nutty\":\"2\",\"Malty\":\"3\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB37 9BD\",\" Latitude\":\"320950\",\" Longitude\":\"838160\",\"cluster\":\"8\",\"lat\":57.42687038,\"long\":-3.3180485,\"formatname\":\"Glenfarclas\"},{\"RowID\":\"46\",\"Distillery\":\"Glenfiddich\",\"Body\":\"1\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"0\",\"Winey\":\"0\",\"Nutty\":\"0\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB55 4DH\",\" Latitude\":\"331713\",\" Longitude\":\"840840\",\"cluster\":\"3\",\"lat\":57.45268546,\"long\":-3.13960758,\"formatname\":\"Glenfiddich\"},{\"RowID\":\"47\",\"Distillery\":\"Glengoyne\",\"Body\":\"1\",\"Sweetness\":\"2\",\"Smoky\":\"0\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"3\",\"Floral\":\"2\",\"Postcode\":\"G63 9LB\",\" Latitude\":\"252810\",\" Longitude\":\"682750\",\"cluster\":\"3\",\"lat\":56.01499596,\"long\":-4.36269258,\"formatname\":\"Glengoyne\"},{\"RowID\":\"48\",\"Distillery\":\"Glenkinchie\",\"Body\":\"1\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"0\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"EH34 5ET\",\" Latitude\":\"344380\",\" Longitude\":\"666690\",\"cluster\":\"3\",\"lat\":55.89011388,\"long\":-2.89084975,\"formatname\":\"Glenkinchie\"},{\"RowID\":\"49\",\"Distillery\":\"Glenlivet\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"2\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"3\",\"Postcode\":\"AB37 9DB\",\" Latitude\":\"319560\",\" Longitude\":\"828780\",\"cluster\":\"8\",\"lat\":57.34239231,\"long\":-3.33811628,\"formatname\":\"Glenlivet\"},{\"RowID\":\"50\",\"Distillery\":\"Glenlossie\",\"Body\":\"1\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"IV30 3SS\",\" Latitude\":\"322640\",\" Longitude\":\"861040\",\"cluster\":\"3\",\"lat\":57.63262696,\"long\":-3.29718943,\"formatname\":\"Glenlossie\"},{\"RowID\":\"51\",\"Distillery\":\"Glenmorangie\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"IV19 1PZ\",\" Latitude\":\"276750\",\" Longitude\":\"883450\",\"cluster\":\"6\",\"lat\":57.82357084,\"long\":-4.07673626,\"formatname\":\"Glenmorangie\"},{\"RowID\":\"52\",\"Distillery\":\"Glenrothes\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"2\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"0\",\"Postcode\":\"AB38 7AA\",\" Latitude\":\"327650\",\" Longitude\":\"849170\",\"cluster\":\"4\",\"lat\":57.52686327,\"long\":-3.20976906,\"formatname\":\"Glenrothes\"},{\"RowID\":\"53\",\"Distillery\":\"Glenturret\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"2\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"1\",\"Floral\":\"2\",\"Postcode\":\"PH7 4HA\",\" Latitude\":\"285630\",\" Longitude\":\"723580\",\"cluster\":\"8\",\"lat\":56.39059482,\"long\":-3.8541885,\"formatname\":\"Glenturret\"},{\"RowID\":\"54\",\"Distillery\":\"Highland Park\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"3\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"1\",\"Floral\":\"1\",\"Postcode\":\"KW15 1SU\",\" Latitude\":\"345340\",\" Longitude\":\"1009260\",\"cluster\":\"2\",\"lat\":58.96700352,\"long\":-2.95222088,\"formatname\":\"Highland Park\"},{\"RowID\":\"55\",\"Distillery\":\"Inchgower\",\"Body\":\"1\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"1\",\"Floral\":\"2\",\"Postcode\":\"AB56 5AB\",\" Latitude\":\"342610\",\" Longitude\":\"863970\",\"cluster\":\"0\",\"lat\":57.66192917,\"long\":-2.96351911,\"formatname\":\"Inchgower\"},{\"RowID\":\"56\",\"Distillery\":\"Isle of Jura\",\"Body\":\"2\",\"Sweetness\":\"1\",\"Smoky\":\"2\",\"Medicinal\":\"2\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"1\",\"Floral\":\"1\",\"Postcode\":\"PA60 7XT\",\" Latitude\":\"152660\",\" Longitude\":\"667040\",\"cluster\":\"2\",\"lat\":55.83299777,\"long\":-5.95138888,\"formatname\":\"Isle Jura\"},{\"RowID\":\"57\",\"Distillery\":\"Knochando\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB38 7RT\",\" Latitude\":\"319470\",\" Longitude\":\"841570\",\"cluster\":\"8\",\"lat\":57.45723233,\"long\":-3.34380927,\"formatname\":\"Knochando\"},{\"RowID\":\"58\",\"Distillery\":\"Lagavulin\",\"Body\":\"4\",\"Sweetness\":\"1\",\"Smoky\":\"4\",\"Medicinal\":\"4\",\"Tobacco\":\"1\",\"Honey\":\"0\",\"Spicy\":\"1\",\"Winey\":\"2\",\"Nutty\":\"1\",\"Malty\":\"1\",\"Fruity\":\"1\",\"Floral\":\"0\",\"Postcode\":\"PA42 7DZ\",\" Latitude\":\"140430\",\" Longitude\":\"645730\",\"cluster\":\"7\",\"lat\":55.63560841,\"long\":-6.12590021,\"formatname\":\"Lagavulin\"},{\"RowID\":\"59\",\"Distillery\":\"Laphroig\",\"Body\":\"4\",\"Sweetness\":\"2\",\"Smoky\":\"4\",\"Medicinal\":\"4\",\"Tobacco\":\"1\",\"Honey\":\"0\",\"Spicy\":\"0\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"1\",\"Fruity\":\"0\",\"Floral\":\"0\",\"Postcode\":\"PA42 7DU\",\" Latitude\":\"138680\",\" Longitude\":\"645160\",\"cluster\":\"7\",\"lat\":55.62956336,\"long\":-6.15308277,\"formatname\":\"Laphroig\"},{\"RowID\":\"60\",\"Distillery\":\"Linkwood\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"2\",\"Nutty\":\"0\",\"Malty\":\"1\",\"Fruity\":\"3\",\"Floral\":\"2\",\"Postcode\":\"IV30 3RD\",\" Latitude\":\"322640\",\" Longitude\":\"861040\",\"cluster\":\"8\",\"lat\":57.63262696,\"long\":-3.29718943,\"formatname\":\"Linkwood\"},{\"RowID\":\"61\",\"Distillery\":\"Loch Lomond\",\"Body\":\"1\",\"Sweetness\":\"1\",\"Smoky\":\"1\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"1\",\"Floral\":\"2\",\"Postcode\":\"G83 0TL\",\" Latitude\":\"239370\",\" Longitude\":\"680920\",\"cluster\":\"3\",\"lat\":55.99425409,\"long\":-4.57695568,\"formatname\":\"Loch Lomond\"},{\"RowID\":\"62\",\"Distillery\":\"Longmorn\",\"Body\":\"3\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"3\",\"Malty\":\"3\",\"Fruity\":\"2\",\"Floral\":\"3\",\"Postcode\":\"IV30 3SJ\",\" Latitude\":\"322640\",\" Longitude\":\"861040\",\"cluster\":\"1\",\"lat\":57.63262696,\"long\":-3.29718943,\"formatname\":\"Longmorn\"},{\"RowID\":\"63\",\"Distillery\":\"Macallan\",\"Body\":\"4\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"4\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"3\",\"Floral\":\"1\",\"Postcode\":\"AB38 9RX\",\" Latitude\":\"327710\",\" Longitude\":\"844480\",\"cluster\":\"4\",\"lat\":57.48475453,\"long\":-3.20737576,\"formatname\":\"Macallan\"},{\"RowID\":\"64\",\"Distillery\":\"Mannochmore\",\"Body\":\"2\",\"Sweetness\":\"1\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"IV30 3SS\",\" Latitude\":\"322640\",\" Longitude\":\"861040\",\"cluster\":\"1\",\"lat\":57.63262696,\"long\":-3.29718943,\"formatname\":\"Mannochmore\"},{\"RowID\":\"65\",\"Distillery\":\"Miltonduff\",\"Body\":\"2\",\"Sweetness\":\"4\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"0\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"1\",\"Floral\":\"2\",\"Postcode\":\"IV30 3TQ\",\" Latitude\":\"322640\",\" Longitude\":\"861040\",\"cluster\":\"0\",\"lat\":57.63262696,\"long\":-3.29718943,\"formatname\":\"Miltonduff\"},{\"RowID\":\"66\",\"Distillery\":\"Mortlach\",\"Body\":\"3\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"3\",\"Winey\":\"3\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB55 4AQ\",\" Latitude\":\"332950\",\" Longitude\":\"839850\",\"cluster\":\"4\",\"lat\":57.44397897,\"long\":-3.11872698,\"formatname\":\"Mortlach\"},{\"RowID\":\"67\",\"Distillery\":\"Oban\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"2\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"0\",\"Postcode\":\"PA34 5NH\",\" Latitude\":\"185940\",\" Longitude\":\"730190\",\"cluster\":\"2\",\"lat\":56.41524561,\"long\":-5.47181083,\"formatname\":\"Oban\"},{\"RowID\":\"68\",\"Distillery\":\"OldFettercairn\",\"Body\":\"1\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"1\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"3\",\"Fruity\":\"1\",\"Floral\":\"1\",\"Postcode\":\"AB30 1YE\",\" Latitude\":\"370860\",\" Longitude\":\"772900\",\"cluster\":\"1\",\"lat\":56.84661499,\"long\":-2.47933843,\"formatname\":\"Old Fettercairn\"},{\"RowID\":\"69\",\"Distillery\":\"OldPulteney\",\"Body\":\"2\",\"Sweetness\":\"1\",\"Smoky\":\"2\",\"Medicinal\":\"2\",\"Tobacco\":\"1\",\"Honey\":\"0\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"KW1 5BA\",\" Latitude\":\"336730\",\" Longitude\":\"950130\",\"cluster\":\"2\",\"lat\":58.43487116,\"long\":-3.08526743,\"formatname\":\"Old Pulteney\"},{\"RowID\":\"70\",\"Distillery\":\"RoyalBrackla\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"2\",\"Medicinal\":\"1\",\"Tobacco\":\"1\",\"Honey\":\"1\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"0\",\"Malty\":\"2\",\"Fruity\":\"3\",\"Floral\":\"2\",\"Postcode\":\"IV12 5QY\",\" Latitude\":\"286040\",\" Longitude\":\"851320\",\"cluster\":\"6\",\"lat\":57.53759529,\"long\":-3.90523066,\"formatname\":\"Royal Brackla\"},{\"RowID\":\"71\",\"Distillery\":\"RoyalLochnagar\",\"Body\":\"3\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"2\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"3\",\"Floral\":\"1\",\"Postcode\":\"AB35 5TB\",\" Latitude\":\"326140\",\" Longitude\":\"794370\",\"cluster\":\"4\",\"lat\":57.03447581,\"long\":-3.21860274,\"formatname\":\"Royal Lochnagar\"},{\"RowID\":\"72\",\"Distillery\":\"Scapa\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"KW15 1SE\",\" Latitude\":\"342850\",\" Longitude\":\"1008930\",\"cluster\":\"1\",\"lat\":58.96371445,\"long\":-2.99542717,\"formatname\":\"Scapa\"},{\"RowID\":\"73\",\"Distillery\":\"Speyburn\",\"Body\":\"2\",\"Sweetness\":\"4\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"1\",\"Winey\":\"0\",\"Nutty\":\"0\",\"Malty\":\"2\",\"Fruity\":\"1\",\"Floral\":\"2\",\"Postcode\":\"AB38 7AG\",\" Latitude\":\"326930\",\" Longitude\":\"851430\",\"cluster\":\"0\",\"lat\":57.54704309,\"long\":-3.22246779,\"formatname\":\"Speyburn\"},{\"RowID\":\"74\",\"Distillery\":\"Speyside\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"0\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"PH21 1NS\",\" Latitude\":\"278740\",\" Longitude\":\"800600\",\"cluster\":\"3\",\"lat\":57.08037377,\"long\":-4.00217162,\"formatname\":\"Speyside\"},{\"RowID\":\"75\",\"Distillery\":\"Springbank\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"2\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"0\",\"Floral\":\"1\",\"Postcode\":\"PA28 6EJ\",\" Latitude\":\"172280\",\" Longitude\":\"620910\",\"cluster\":\"2\",\"lat\":55.42900161,\"long\":-5.60062203,\"formatname\":\"Springbank\"},{\"RowID\":\"76\",\"Distillery\":\"Strathisla\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"2\",\"Nutty\":\"3\",\"Malty\":\"3\",\"Fruity\":\"3\",\"Floral\":\"2\",\"Postcode\":\"AB55 3BS\",\" Latitude\":\"340754\",\" Longitude\":\"848623\",\"cluster\":\"1\",\"lat\":57.52385673,\"long\":-2.99086521,\"formatname\":\"Strathisla\"},{\"RowID\":\"77\",\"Distillery\":\"Strathmill\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"3\",\"Floral\":\"2\",\"Postcode\":\"AB55 5DQ\",\" Latitude\":\"342650\",\" Longitude\":\"850500\",\"cluster\":\"6\",\"lat\":57.54095889,\"long\":-2.95965663,\"formatname\":\"Strathmill\"},{\"RowID\":\"78\",\"Distillery\":\"Talisker\",\"Body\":\"4\",\"Sweetness\":\"2\",\"Smoky\":\"3\",\"Medicinal\":\"3\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"3\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"0\",\"Postcode\":\"IV47 8SR\",\" Latitude\":\"137950\",\" Longitude\":\"831770\",\"cluster\":\"5\",\"lat\":57.30102545,\"long\":-6.35214885,\"formatname\":\"Talisker\"},{\"RowID\":\"79\",\"Distillery\":\"Tamdhu\",\"Body\":\"1\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"0\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"AB38 7RP\",\" Latitude\":\"319210\",\" Longitude\":\"841760\",\"cluster\":\"3\",\"lat\":57.45889228,\"long\":-3.348204,\"formatname\":\"Tamdhu\"},{\"RowID\":\"80\",\"Distillery\":\"Tamnavulin\",\"Body\":\"1\",\"Sweetness\":\"3\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"2\",\"Floral\":\"3\",\"Postcode\":\"AB37 9JA\",\" Latitude\":\"321180\",\" Longitude\":\"826110\",\"cluster\":\"6\",\"lat\":57.3186982,\"long\":-3.31035502,\"formatname\":\"Tamnavulin\"},{\"RowID\":\"81\",\"Distillery\":\"Teaninich\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"2\",\"Medicinal\":\"1\",\"Tobacco\":\"0\",\"Honey\":\"0\",\"Spicy\":\"2\",\"Winey\":\"0\",\"Nutty\":\"0\",\"Malty\":\"0\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"IV17 0XB\",\" Latitude\":\"265360\",\" Longitude\":\"869120\",\"cluster\":\"6\",\"lat\":57.69167342,\"long\":-4.26028646,\"formatname\":\"Teaninich\"},{\"RowID\":\"82\",\"Distillery\":\"Tobermory\",\"Body\":\"1\",\"Sweetness\":\"1\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"0\",\"Winey\":\"0\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"2\",\"Postcode\":\"PA75 6NR\",\" Latitude\":\"150450\",\" Longitude\":\"755070\",\"cluster\":\"3\",\"lat\":56.62078752,\"long\":-6.06950415,\"formatname\":\"Tobermory\"},{\"RowID\":\"83\",\"Distillery\":\"Tomatin\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"2\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"0\",\"Floral\":\"1\",\"Postcode\":\"IV13 7YT\",\" Latitude\":\"279120\",\" Longitude\":\"829630\",\"cluster\":\"0\",\"lat\":57.34108718,\"long\":-4.01003091,\"formatname\":\"Tomatin\"},{\"RowID\":\"84\",\"Distillery\":\"Tomintoul\",\"Body\":\"0\",\"Sweetness\":\"3\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"2\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"1\",\"Floral\":\"2\",\"Postcode\":\"AB37 9AQ\",\" Latitude\":\"315100\",\" Longitude\":\"825560\",\"cluster\":\"0\",\"lat\":57.31266709,\"long\":-3.41108272,\"formatname\":\"Tomintoul\"},{\"RowID\":\"85\",\"Distillery\":\"Tormore\",\"Body\":\"2\",\"Sweetness\":\"2\",\"Smoky\":\"1\",\"Medicinal\":\"0\",\"Tobacco\":\"0\",\"Honey\":\"1\",\"Spicy\":\"0\",\"Winey\":\"1\",\"Nutty\":\"2\",\"Malty\":\"1\",\"Fruity\":\"0\",\"Floral\":\"0\",\"Postcode\":\"PH26 3LR\",\" Latitude\":\"315180\",\" Longitude\":\"834960\",\"cluster\":\"0\",\"lat\":57.39709336,\"long\":-3.41299498,\"formatname\":\"Tormore\"},{\"RowID\":\"86\",\"Distillery\":\"Tullibardine\",\"Body\":\"2\",\"Sweetness\":\"3\",\"Smoky\":\"0\",\"Medicinal\":\"0\",\"Tobacco\":\"1\",\"Honey\":\"0\",\"Spicy\":\"2\",\"Winey\":\"1\",\"Nutty\":\"1\",\"Malty\":\"2\",\"Fruity\":\"2\",\"Floral\":\"1\",\"Postcode\":\"PH4 1QG\",\" Latitude\":\"289690\",\" Longitude\":\"708850\",\"cluster\":\"6\",\"lat\":56.25928846,\"long\":-3.78228377,\"formatname\":\"Tullibardine\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/investigations/what-whisky/whisky.json\n// module id = 562\n// module chunks = 92755437227203"],"sourceRoot":""}