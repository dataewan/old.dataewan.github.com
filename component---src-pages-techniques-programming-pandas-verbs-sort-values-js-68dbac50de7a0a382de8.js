webpackJsonp([24654593284576],{206:function(t,e){t.exports="<table border=1 class=dataframe> <thead> <tr style=text-align:right> <th></th> <th>survived</th> <th>pclass</th> <th>sex</th> <th>age</th> <th>sibsp</th> <th>parch</th> <th>fare</th> <th>embarked</th> <th>class</th> <th>who</th> <th>adult_male</th> <th>deck</th> <th>embark_town</th> <th>alive</th> <th>alone</th> </tr> </thead> <tbody> <tr> <th>630</th> <td>1</td> <td>1</td> <td>male</td> <td>80.0</td> <td>0</td> <td>0</td> <td>30.0000</td> <td>S</td> <td>First</td> <td>man</td> <td>True</td> <td>A</td> <td>Southampton</td> <td>yes</td> <td>True</td> </tr> <tr> <th>851</th> <td>0</td> <td>3</td> <td>male</td> <td>74.0</td> <td>0</td> <td>0</td> <td>7.7750</td> <td>S</td> <td>Third</td> <td>man</td> <td>True</td> <td>NaN</td> <td>Southampton</td> <td>no</td> <td>True</td> </tr> <tr> <th>493</th> <td>0</td> <td>1</td> <td>male</td> <td>71.0</td> <td>0</td> <td>0</td> <td>49.5042</td> <td>C</td> <td>First</td> <td>man</td> <td>True</td> <td>NaN</td> <td>Cherbourg</td> <td>no</td> <td>True</td> </tr> <tr> <th>96</th> <td>0</td> <td>1</td> <td>male</td> <td>71.0</td> <td>0</td> <td>0</td> <td>34.6542</td> <td>C</td> <td>First</td> <td>man</td> <td>True</td> <td>A</td> <td>Cherbourg</td> <td>no</td> <td>True</td> </tr> <tr> <th>116</th> <td>0</td> <td>3</td> <td>male</td> <td>70.5</td> <td>0</td> <td>0</td> <td>7.7500</td> <td>Q</td> <td>Third</td> <td>man</td> <td>True</td> <td>NaN</td> <td>Queenstown</td> <td>no</td> <td>True</td> </tr> </tbody> </table>"},316:function(t,e,a){(function(d){"use strict";function n(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function o(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function s(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}e.__esModule=!0;var l=a(1),h=(n(l),a(7)),i=(n(h),a(11)),u=function(t){function e(a){return r(this,e),o(this,t.call(this,a))}return s(e,t),e.prototype.render=function(){return d.createElement(i.Section,{name:"sort_values"},d.createElement(i.Paragraph,{note:d.createElement("a",{href:"https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.sort_values.html"},"pandas documentation")},"Use this function to order the rows in your dataframe. Useful if you want to quickly see the top results. Going to use the titanic dataset to illustrate. Here's the raw data."),d.createElement(i.Code,{language:"python",code:"\nimport pandas as pd\nimport seaborn as sns\n\ndf = sns.load_dataset('titanic')\ndf.head(5)\n          "}),d.createElement(i.RawHTML,null,a(61)),d.createElement(i.Subsection,{name:"Sorting dataframe values"},d.createElement(i.Paragraph,null,"Use the ",d.createElement("span",{className:"mono"},"sort_values")," to order your dataframe. The ",d.createElement("span",{className:"mono"},"ascending")," parameter can be used to reverse the order of results. This chain the 5 oldest people in the dataset."),d.createElement(i.Code,{language:"python",code:"\n(\n    df\n    .sort_values('age', ascending=False)\n).head(5)\n          "}),d.createElement(i.RawHTML,null,a(206))),d.createElement(i.Subsection,{name:"Custom sort pandas dataframes"},d.createElement(i.Paragraph,{note:d.createElement("a",{href:"https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Categorical.html"},"pandas documentation")},"The default order isn't always what you want to sort your dataframe by, you might want to specify an order. A fairly straightforward way to do this is to use ",d.createElement("span",{className:"mono"},"pd.Categorical"),". These are a bit like factors in R, and give you a way to represent a categorical variable in your dataset. Here we'll order the embarkation points by a custom order, rather than the default alphabetical. Combining this with the ",d.createElement("a",{href:"./assign"},"assign")," verb as well."),d.createElement(i.Code,{language:"python",code:"\ndf\n.assign(embark_categorical = pd.Categorical(\n    df.embark_town,\n    ['Southampton', 'Cherbourg', 'Queenstown']\n))\n.sort_values('embark_categorical')\n          "}),d.createElement(i.RawHTML,null,a(206))))},e}(l.Component);e.default=u,t.exports=e.default}).call(e,a(4))}});
//# sourceMappingURL=component---src-pages-techniques-programming-pandas-verbs-sort-values-js-68dbac50de7a0a382de8.js.map