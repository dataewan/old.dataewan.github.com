{"version":3,"sources":["webpack:///./src/pages/techniques/programming/pandas/verbs/_pipe2.html","webpack:///./src/pages/techniques/programming/pandas/verbs/_movies.html","webpack:///./src/pages/techniques/programming/pandas/verbs/_pipe1.html","webpack:///./src/pages/techniques/programming/pandas/verbs/pipe.js"],"names":["module","exports","PipeVerb","props","render","name","note","href","className","movies","language","code","pipe1","pipe2","Component"],"mappings":"6EAAAA,EAAOC,QAAU,suF,mBCAjBD,EAAOC,QAAU,slF,mBCAjBD,EAAOC,QAAU,gvF,iJCgBXC,E,oBACJ,WAAYC,GAAQ,OAClB,YAAMA,IADW,K,0GAInBC,OAAA,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,KAAK,QACZ,kBAAC,IAAD,CACEC,KACE,uBAAGC,KAAK,qFAAR,yBAFJ,wKASgD,IAC9C,0BAAMC,UAAU,QAAhB,QAVF,gLAeA,kBAAC,IAAD,CACEF,KACE,uBAAGC,KAAK,qEAAR,8BAFJ,qEASA,kBAAC,IAAD,KAAUE,KACV,kBAAC,IAAD,CAAYJ,KAAK,+CACf,kBAAC,IAAD,uSAOA,kBAAC,IAAD,CACEK,SAAS,SACTC,KAAI,6NAcN,kBAAC,IAAD,8DAGA,kBAAC,IAAD,CACED,SAAS,SACTC,KAAI,mDAIN,kBAAC,IAAD,6CACA,kBAAC,IAAD,CACED,SAAS,SACTC,KAAI,mFAQN,kBAAC,IAAD,8DAGA,kBAAC,IAAD,KAAUC,MAEZ,kBAAC,IAAD,CAAYP,KAAK,oCACf,kBAAC,IAAD,qWAQA,kBAAC,IAAD,CACEK,SAAS,SACTC,KAAI,gNASN,kBAAC,IAAD,wOAMA,kBAAC,IAAD,8HAEuD,IACrD,uBAAGJ,KAAK,mDAAR,oBAEK,IALP,kDAQA,kBAAC,IAAD,CACEG,SAAS,SACTC,KAAI,iKAQN,kBAAC,IAAD,wCACA,kBAAC,IAAD,KAAUE,S,GAhICC,aAwIRZ","file":"component---src-pages-techniques-programming-pandas-verbs-pipe-js-7e5d29affa8a51dddf86.js","sourcesContent":["module.exports = \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n  <thead>\\n    <tr style=\\\"text-align: right;\\\">\\n      <th></th>\\n      <th>budget</th>\\n      <th>id</th>\\n      <th>original_title</th>\\n      <th>overview</th>\\n      <th>popularity</th>\\n      <th>release_date</th>\\n      <th>runtime</th>\\n      <th>status</th>\\n      <th>tagline</th>\\n      <th>title</th>\\n      <th>vote_average</th>\\n      <th>vote_count</th>\\n      <th>date</th>\\n      <th>month</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>0</th>\\n      <td>237000000</td>\\n      <td>19995</td>\\n      <td>Avatar</td>\\n      <td>In the 22nd century, a paraplegic Marine is di...</td>\\n      <td>150.437577</td>\\n      <td>2009-12-10</td>\\n      <td>162.0</td>\\n      <td>Released</td>\\n      <td>Enter the World of Pandora.</td>\\n      <td>Avatar</td>\\n      <td>7.2</td>\\n      <td>11800</td>\\n      <td>2009-12-10</td>\\n      <td>12.0</td>\\n    </tr>\\n    <tr>\\n      <th>1</th>\\n      <td>300000000</td>\\n      <td>285</td>\\n      <td>Pirates of the Caribbean: At World's End</td>\\n      <td>Captain Barbossa, long believed to be dead, ha...</td>\\n      <td>139.082615</td>\\n      <td>2007-05-19</td>\\n      <td>169.0</td>\\n      <td>Released</td>\\n      <td>At the end of the world, the adventure begins.</td>\\n      <td>Pirates of the Caribbean: At World's End</td>\\n      <td>6.9</td>\\n      <td>4500</td>\\n      <td>2007-05-19</td>\\n      <td>5.0</td>\\n    </tr>\\n    <tr>\\n      <th>2</th>\\n      <td>245000000</td>\\n      <td>206647</td>\\n      <td>Spectre</td>\\n      <td>A cryptic message from Bond’s past sends him o...</td>\\n      <td>107.376788</td>\\n      <td>2015-10-26</td>\\n      <td>148.0</td>\\n      <td>Released</td>\\n      <td>A Plan No One Escapes</td>\\n      <td>Spectre</td>\\n      <td>6.3</td>\\n      <td>4466</td>\\n      <td>2015-10-26</td>\\n      <td>10.0</td>\\n    </tr>\\n    <tr>\\n      <th>3</th>\\n      <td>250000000</td>\\n      <td>49026</td>\\n      <td>The Dark Knight Rises</td>\\n      <td>Following the death of District Attorney Harve...</td>\\n      <td>112.312950</td>\\n      <td>2012-07-16</td>\\n      <td>165.0</td>\\n      <td>Released</td>\\n      <td>The Legend Ends</td>\\n      <td>The Dark Knight Rises</td>\\n      <td>7.6</td>\\n      <td>9106</td>\\n      <td>2012-07-16</td>\\n      <td>7.0</td>\\n    </tr>\\n    <tr>\\n      <th>4</th>\\n      <td>260000000</td>\\n      <td>49529</td>\\n      <td>John Carter</td>\\n      <td>John Carter is a war-weary, former military ca...</td>\\n      <td>43.926995</td>\\n      <td>2012-03-07</td>\\n      <td>132.0</td>\\n      <td>Released</td>\\n      <td>Lost in our world, found in another.</td>\\n      <td>John Carter</td>\\n      <td>6.1</td>\\n      <td>2124</td>\\n      <td>2012-03-07</td>\\n      <td>3.0</td>\\n    </tr>\\n  </tbody>\\n</table>\"","module.exports = \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n  <thead>\\n    <tr style=\\\"text-align: right;\\\">\\n      <th></th>\\n      <th>budget</th>\\n      <th>id</th>\\n      <th>original_title</th>\\n      <th>overview</th>\\n      <th>popularity</th>\\n      <th>release_date</th>\\n      <th>runtime</th>\\n      <th>status</th>\\n      <th>tagline</th>\\n      <th>title</th>\\n      <th>vote_average</th>\\n      <th>vote_count</th>\\n      <th>year</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>0</th>\\n      <td>237000000</td>\\n      <td>19995</td>\\n      <td>Avatar</td>\\n      <td>In the 22nd century, a paraplegic Marine is di...</td>\\n      <td>150.437577</td>\\n      <td>2009-12-10</td>\\n      <td>162.0</td>\\n      <td>Released</td>\\n      <td>Enter the World of Pandora.</td>\\n      <td>Avatar</td>\\n      <td>7.2</td>\\n      <td>11800</td>\\n      <td>2009.0</td>\\n    </tr>\\n    <tr>\\n      <th>1</th>\\n      <td>300000000</td>\\n      <td>285</td>\\n      <td>Pirates of the Caribbean: At World's End</td>\\n      <td>Captain Barbossa, long believed to be dead, ha...</td>\\n      <td>139.082615</td>\\n      <td>2007-05-19</td>\\n      <td>169.0</td>\\n      <td>Released</td>\\n      <td>At the end of the world, the adventure begins.</td>\\n      <td>Pirates of the Caribbean: At World's End</td>\\n      <td>6.9</td>\\n      <td>4500</td>\\n      <td>2007.0</td>\\n    </tr>\\n    <tr>\\n      <th>2</th>\\n      <td>245000000</td>\\n      <td>206647</td>\\n      <td>Spectre</td>\\n      <td>A cryptic message from Bond’s past sends him o...</td>\\n      <td>107.376788</td>\\n      <td>2015-10-26</td>\\n      <td>148.0</td>\\n      <td>Released</td>\\n      <td>A Plan No One Escapes</td>\\n      <td>Spectre</td>\\n      <td>6.3</td>\\n      <td>4466</td>\\n      <td>2015.0</td>\\n    </tr>\\n    <tr>\\n      <th>3</th>\\n      <td>250000000</td>\\n      <td>49026</td>\\n      <td>The Dark Knight Rises</td>\\n      <td>Following the death of District Attorney Harve...</td>\\n      <td>112.312950</td>\\n      <td>2012-07-16</td>\\n      <td>165.0</td>\\n      <td>Released</td>\\n      <td>The Legend Ends</td>\\n      <td>The Dark Knight Rises</td>\\n      <td>7.6</td>\\n      <td>9106</td>\\n      <td>2012.0</td>\\n    </tr>\\n    <tr>\\n      <th>4</th>\\n      <td>260000000</td>\\n      <td>49529</td>\\n      <td>John Carter</td>\\n      <td>John Carter is a war-weary, former military ca...</td>\\n      <td>43.926995</td>\\n      <td>2012-03-07</td>\\n      <td>132.0</td>\\n      <td>Released</td>\\n      <td>Lost in our world, found in another.</td>\\n      <td>John Carter</td>\\n      <td>6.1</td>\\n      <td>2124</td>\\n      <td>2012.0</td>\\n    </tr>\\n  </tbody>\\n</table>\"","module.exports = \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n  <thead>\\n    <tr style=\\\"text-align: right;\\\">\\n      <th></th>\\n      <th>budget</th>\\n      <th>id</th>\\n      <th>original_title</th>\\n      <th>overview</th>\\n      <th>popularity</th>\\n      <th>release_date</th>\\n      <th>runtime</th>\\n      <th>status</th>\\n      <th>tagline</th>\\n      <th>title</th>\\n      <th>vote_average</th>\\n      <th>vote_count</th>\\n      <th>date</th>\\n      <th>yr</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>0</th>\\n      <td>237000000</td>\\n      <td>19995</td>\\n      <td>Avatar</td>\\n      <td>In the 22nd century, a paraplegic Marine is di...</td>\\n      <td>150.437577</td>\\n      <td>2009-12-10</td>\\n      <td>162.0</td>\\n      <td>Released</td>\\n      <td>Enter the World of Pandora.</td>\\n      <td>Avatar</td>\\n      <td>7.2</td>\\n      <td>11800</td>\\n      <td>2009-12-10</td>\\n      <td>2009.0</td>\\n    </tr>\\n    <tr>\\n      <th>1</th>\\n      <td>300000000</td>\\n      <td>285</td>\\n      <td>Pirates of the Caribbean: At World's End</td>\\n      <td>Captain Barbossa, long believed to be dead, ha...</td>\\n      <td>139.082615</td>\\n      <td>2007-05-19</td>\\n      <td>169.0</td>\\n      <td>Released</td>\\n      <td>At the end of the world, the adventure begins.</td>\\n      <td>Pirates of the Caribbean: At World's End</td>\\n      <td>6.9</td>\\n      <td>4500</td>\\n      <td>2007-05-19</td>\\n      <td>2007.0</td>\\n    </tr>\\n    <tr>\\n      <th>2</th>\\n      <td>245000000</td>\\n      <td>206647</td>\\n      <td>Spectre</td>\\n      <td>A cryptic message from Bond’s past sends him o...</td>\\n      <td>107.376788</td>\\n      <td>2015-10-26</td>\\n      <td>148.0</td>\\n      <td>Released</td>\\n      <td>A Plan No One Escapes</td>\\n      <td>Spectre</td>\\n      <td>6.3</td>\\n      <td>4466</td>\\n      <td>2015-10-26</td>\\n      <td>2015.0</td>\\n    </tr>\\n    <tr>\\n      <th>3</th>\\n      <td>250000000</td>\\n      <td>49026</td>\\n      <td>The Dark Knight Rises</td>\\n      <td>Following the death of District Attorney Harve...</td>\\n      <td>112.312950</td>\\n      <td>2012-07-16</td>\\n      <td>165.0</td>\\n      <td>Released</td>\\n      <td>The Legend Ends</td>\\n      <td>The Dark Knight Rises</td>\\n      <td>7.6</td>\\n      <td>9106</td>\\n      <td>2012-07-16</td>\\n      <td>2012.0</td>\\n    </tr>\\n    <tr>\\n      <th>4</th>\\n      <td>260000000</td>\\n      <td>49529</td>\\n      <td>John Carter</td>\\n      <td>John Carter is a war-weary, former military ca...</td>\\n      <td>43.926995</td>\\n      <td>2012-03-07</td>\\n      <td>132.0</td>\\n      <td>Released</td>\\n      <td>Lost in our world, found in another.</td>\\n      <td>John Carter</td>\\n      <td>6.1</td>\\n      <td>2124</td>\\n      <td>2012-03-07</td>\\n      <td>2012.0</td>\\n    </tr>\\n  </tbody>\\n</table>\"","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Section,\n  Subsection,\n  Paragraph,\n  Code,\n  RawHTML,\n  Layout\n} from \"../../../../../components\";\n\nimport movies from \"raw-loader!./_movies.html\"\nimport pipe1 from \"raw-loader!./_pipe1.html\"\nimport pipe2 from \"raw-loader!./_pipe2.html\"\n\nclass PipeVerb extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Section name=\"pipe\">\n          <Paragraph\n            note={\n              <a href=\"https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.pipe.html\">\n                pandas documentation\n              </a>\n            }\n          >\n            All the other data verbs we've been using are functions that are\n            part of the dataframe class. That set of verbs is very\n            comprehensive, and covers most use cases. The{\" \"}\n            <span className=\"mono\">pipe</span> operation is a way for us to be\n            more flexible, and perform any operation as a data verb. It applies\n            the function to the dataframe, returning whatever the function\n            returns.\n          </Paragraph>\n          <Paragraph\n            note={\n              <a href=\"https://gist.github.com/dataewan/9e3eb3fee268b1eb4a629fd216e20712\">\n                where the data comes from\n              </a>\n            }\n          >\n            I'll be using the movies dataframe. Here's a sample of that data.\n          </Paragraph>\n          <RawHTML>{movies}</RawHTML>\n          <Subsection name=\"Arbitrary operations, making your own verbs\">\n            <Paragraph>\n              You can make your own functions that work like verbs. These take a\n              dataframe and return a copy of that dataframe with some changes\n              applied. Here I'm making two functions, one that converts a string\n              formatted date to a pandas date, and a second one that extracts\n              the year from that date.\n            </Paragraph>\n            <Code\n              language=\"python\"\n              code={`\ndef convert_date(x):\n    return (\n        x\n        .assign(date = pd.to_datetime(x.release_date))\n    )\n\ndef extract_year(x):\n    return (\n        x\n        .assign(yr = x.date.dt.year)\n    )\n          `}\n            />\n            <Paragraph>\n              Instead of having to apply these functions like this:\n            </Paragraph>\n            <Code\n              language=\"python\"\n              code={`\nextract_year(convert_date(movies))\n        `}\n            />\n            <Paragraph>I can use them in a chain like this:</Paragraph>\n            <Code\n              language=\"python\"\n              code={`\n(\n    movies\n    .pipe(convert_date)\n    .pipe(extract_year)\n)\n        `}\n            />\n            <Paragraph>\n              This gives the same result, but is nicer pandas code.\n            </Paragraph>\n            <RawHTML>{pipe1}</RawHTML>\n          </Subsection>\n          <Subsection name=\"Working with a mutated dataframe\">\n            <Paragraph>\n              This is a specific use case of making your own verb, but is a very\n              useful case. If you are making a chain that mutates the dataframe\n              somehow, let's say that we're making a new column. If we want to\n              use that new column in subsequent steps pandas will say that it\n              can't find it. Here I'm making a new date column, which I want to\n              take the month from.\n            </Paragraph>\n            <Code\n              language=\"python\"\n              code={`\n(\n    movies\n    .assign(date = pd.to_datetime(movies.release_date))\n    .assign(month = movies.date.dt.month)\n)\n# Fails with AttributeError: 'DataFrame' object has no attribute 'date'\n          `}\n            />\n            <Paragraph>\n              If I'd been mutating in-place in the dataframe (assigning the new\n              values to the release_date column), then the second row would try\n              and work with the original column and not the mutated one. That\n              can cause some tricky bugs.\n            </Paragraph>\n            <Paragraph>\n              Instead we can use the pipe function to get access to the mutated\n              columns in subsequent stages of the chain. I'm using{\" \"}\n              <a href=\"https://dbader.org/blog/python-lambda-functions\">\n                lambda functions\n              </a>{\" \"}\n              here because I don't intend to use them again.\n            </Paragraph>\n            <Code\n              language=\"python\"\n              code={`\n(\n    movies\n    .pipe(lambda x: x.assign(date = pd.to_datetime(x.release_date)))\n    .pipe(lambda x: x.assign(month = x.date.dt.month))\n)\n          `}\n            />\n            <Paragraph>This gives the intended result.</Paragraph>\n            <RawHTML>{pipe2}</RawHTML>\n          </Subsection>\n        </Section>\n      </Layout>\n    );\n  }\n}\n\nexport default PipeVerb;\n"],"sourceRoot":""}