webpackJsonp([0xc234f2957c72],{483:function(t,d){t.exports="<table border=1 class=dataframe> <thead> <tr style=text-align:right> <th></th> <th>survived</th> <th>pclass</th> <th>sex</th> <th>age</th> <th>sibsp</th> <th>parch</th> <th>fare</th> <th>embarked</th> <th>class</th> <th>who</th> <th>adult_male</th> <th>deck</th> <th>embark_town</th> <th>alive</th> <th>alone</th> <th>halfage</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>0</td> <td>3</td> <td>male</td> <td>22.0</td> <td>1</td> <td>0</td> <td>7.2500</td> <td>S</td> <td>Third</td> <td>man</td> <td>True</td> <td>NaN</td> <td>Southampton</td> <td>no</td> <td>False</td> <td>11.0</td> </tr> <tr> <th>1</th> <td>1</td> <td>1</td> <td>female</td> <td>38.0</td> <td>1</td> <td>0</td> <td>71.2833</td> <td>C</td> <td>First</td> <td>woman</td> <td>False</td> <td>C</td> <td>Cherbourg</td> <td>yes</td> <td>False</td> <td>19.0</td> </tr> <tr> <th>2</th> <td>1</td> <td>3</td> <td>female</td> <td>26.0</td> <td>0</td> <td>0</td> <td>7.9250</td> <td>S</td> <td>Third</td> <td>woman</td> <td>False</td> <td>NaN</td> <td>Southampton</td> <td>yes</td> <td>True</td> <td>13.0</td> </tr> <tr> <th>3</th> <td>1</td> <td>1</td> <td>female</td> <td>35.0</td> <td>1</td> <td>0</td> <td>53.1000</td> <td>S</td> <td>First</td> <td>woman</td> <td>False</td> <td>C</td> <td>Southampton</td> <td>yes</td> <td>False</td> <td>17.5</td> </tr> <tr> <th>4</th> <td>0</td> <td>3</td> <td>male</td> <td>35.0</td> <td>0</td> <td>0</td> <td>8.0500</td> <td>S</td> <td>Third</td> <td>man</td> <td>True</td> <td>NaN</td> <td>Southampton</td> <td>no</td> <td>True</td> <td>17.5</td> </tr> </tbody> </table>"},484:function(t,d){t.exports="<table border=1 class=dataframe> <thead> <tr style=text-align:right> <th></th> <th>survived</th> <th>pclass</th> <th>sex</th> <th>age</th> <th>sibsp</th> <th>parch</th> <th>fare</th> <th>embarked</th> <th>class</th> <th>who</th> <th>adult_male</th> <th>deck</th> <th>embark_town</th> <th>alive</th> <th>alone</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>0</td> <td>3</td> <td>male</td> <td>22.0</td> <td>1</td> <td>0</td> <td>7.2500</td> <td>S</td> <td>Third</td> <td>man</td> <td>True</td> <td>NaN</td> <td>Southampton</td> <td>no</td> <td>False</td> </tr> <tr> <th>1</th> <td>1</td> <td>1</td> <td>female</td> <td>38.0</td> <td>1</td> <td>0</td> <td>71.2833</td> <td>C</td> <td>First</td> <td>woman</td> <td>False</td> <td>C</td> <td>Cherbourg</td> <td>yes</td> <td>False</td> </tr> <tr> <th>2</th> <td>1</td> <td>3</td> <td>female</td> <td>26.0</td> <td>0</td> <td>0</td> <td>7.9250</td> <td>S</td> <td>Third</td> <td>woman</td> <td>False</td> <td>NaN</td> <td>Southampton</td> <td>yes</td> <td>True</td> </tr> <tr> <th>3</th> <td>1</td> <td>1</td> <td>female</td> <td>35.0</td> <td>1</td> <td>0</td> <td>53.1000</td> <td>S</td> <td>First</td> <td>woman</td> <td>False</td> <td>C</td> <td>Southampton</td> <td>yes</td> <td>False</td> </tr> <tr> <th>4</th> <td>0</td> <td>3</td> <td>male</td> <td>35.0</td> <td>0</td> <td>0</td> <td>8.0500</td> <td>S</td> <td>Third</td> <td>man</td> <td>True</td> <td>NaN</td> <td>Southampton</td> <td>no</td> <td>True</td> </tr> </tbody> </table>"},485:function(t,d){t.exports="<table border=1 class=dataframe> <thead> <tr style=text-align:right> <th></th> <th>survived</th> <th>pclass</th> <th>sex</th> <th>age</th> <th>sibsp</th> <th>parch</th> <th>fare</th> <th>embarked</th> <th>class</th> <th>who</th> <th>adult_male</th> <th>deck</th> <th>embark_town</th> <th>alive</th> <th>alone</th> <th>halfage</th> <th>fclass_male</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>0</td> <td>3</td> <td>male</td> <td>22.0</td> <td>1</td> <td>0</td> <td>7.2500</td> <td>S</td> <td>Third</td> <td>man</td> <td>True</td> <td>NaN</td> <td>Southampton</td> <td>no</td> <td>False</td> <td>11.0</td> <td>False</td> </tr> <tr> <th>1</th> <td>1</td> <td>1</td> <td>female</td> <td>38.0</td> <td>1</td> <td>0</td> <td>71.2833</td> <td>C</td> <td>First</td> <td>woman</td> <td>False</td> <td>C</td> <td>Cherbourg</td> <td>yes</td> <td>False</td> <td>19.0</td> <td>False</td> </tr> <tr> <th>2</th> <td>1</td> <td>3</td> <td>female</td> <td>26.0</td> <td>0</td> <td>0</td> <td>7.9250</td> <td>S</td> <td>Third</td> <td>woman</td> <td>False</td> <td>NaN</td> <td>Southampton</td> <td>yes</td> <td>True</td> <td>13.0</td> <td>False</td> </tr> <tr> <th>3</th> <td>1</td> <td>1</td> <td>female</td> <td>35.0</td> <td>1</td> <td>0</td> <td>53.1000</td> <td>S</td> <td>First</td> <td>woman</td> <td>False</td> <td>C</td> <td>Southampton</td> <td>yes</td> <td>False</td> <td>17.5</td> <td>False</td> </tr> <tr> <th>4</th> <td>0</td> <td>3</td> <td>male</td> <td>35.0</td> <td>0</td> <td>0</td> <td>8.0500</td> <td>S</td> <td>Third</td> <td>man</td> <td>True</td> <td>NaN</td> <td>Southampton</td> <td>no</td> <td>True</td> <td>17.5</td> <td>False</td> </tr> </tbody> </table>"},307:function(t,d,e){(function(a){"use strict";function n(t){return t&&t.__esModule?t:{default:t}}function h(t,d){if(!(t instanceof d))throw new TypeError("Cannot call a class as a function")}function r(t,d){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!d||"object"!=typeof d&&"function"!=typeof d?t:d}function s(t,d){if("function"!=typeof d&&null!==d)throw new TypeError("Super expression must either be null or a function, not "+typeof d);t.prototype=Object.create(d&&d.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),d&&(Object.setPrototypeOf?Object.setPrototypeOf(t,d):t.__proto__=d)}d.__esModule=!0;var o=e(1),l=(n(o),e(7)),m=(n(l),e(10)),i=function(t){function d(e){return h(this,d),r(this,t.call(this,e))}return s(d,t),d.prototype.render=function(){return a.createElement(m.Section,{name:"assign"},a.createElement(m.Paragraph,{note:a.createElement("a",{href:"https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.assign.html"},"pandas documentation")},"Assign is used in pandas to make new columns in your dataframe. I'm going to use the titanic dataset from seaborn to illustrate. Here's my raw data."),a.createElement(m.Code,{language:"python",code:"\nimport pandas as pd\nimport seaborn as sns\n\ndf = sns.load_dataset('titanic')\ndf.head(5)\n          "}),a.createElement(m.RawHTML,null,e(64)),a.createElement(m.Subsection,{name:"Making new columns"},a.createElement(m.Paragraph,null,"Use the ",a.createElement("span",{className:"mono"},"assign")," verb to create new columns in your dataframe."),a.createElement(m.Code,{language:"python",code:"\n(\n    df\n    .assign(halfage = df.age / 2)\n).head(5)\n          "}),a.createElement(m.RawHTML,null,e(483))),a.createElement(m.Subsection,{name:"Cleaning data"},a.createElement(m.Paragraph,null,"You can overwrite data in an existing column. Useful if the data is messy and you want to clean it."),a.createElement(m.Code,{language:"python",code:"\n(\n    df\n    .assign(age = df.age.fillna(0.0))\n).head(5)\n          "}),a.createElement(m.RawHTML,null,e(484))),a.createElement(m.Subsection,{name:"Multiple columns"},a.createElement(m.Paragraph,null,"You can assign to multiple columns by passing the columns as keyword arguments."),a.createElement(m.Code,{language:"python",code:"\n(\n    df\n    .assign(age = df.age.fillna(0.0),\n            halfage = df.age / 2,\n            fclass_male = (df['class'] == \"First\") & (df.sex == 'male'))\n).head(5)\n          "}),a.createElement(m.RawHTML,null,e(485))))},d}(o.Component);d.default=i,t.exports=d.default}).call(d,e(4))}});
//# sourceMappingURL=component---src-pages-techniques-programming-pandas-verbs-assign-js-7841e88f31335c284cf2.js.map