{"version":3,"sources":["webpack:///./src/pages/investigations/what-whisky/_Radial.js","webpack:///./src/pages/investigations/what-whisky/_Map.js","webpack:///./src/pages/investigations/what-whisky/_FormattedOverview.js","webpack:///./src/pages/investigations/what-whisky/_ClusterSelector.js","webpack:///./src/pages/investigations/what-whisky/index.js","webpack:///./src/components/constants.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/blockquote.js","webpack:///./src/components/code.js","webpack:///./src/components/figure.js","webpack:///./src/components/paragraph.js","webpack:///./src/components/section.js","webpack:///./src/components/subsection.js","webpack:///./src/components/subsubsection.js","webpack:///./src/components/Linktree.js","webpack:///./src/components/Linknode.js","webpack:///./src/components/rawhtml.js","webpack:///./src/components/Layout.js","webpack:///./src/components/equation.js","webpack:///./src/components/index.js","webpack:///./src/pages/investigations/what-whisky/rothes.png"],"names":["SCALEORDER","Radial","props","_this","_React$Component","call","this","middle","calculatescales","bottomPad","_this2","scalelength","width","heightscales","map","d","dimensionValues","whisky","w","scaleLinear","domain","max","range","anglescale","scaleBand","paddingInner","Math","PI","componentWillReceiveProps","calcpoints","_this3","selected","i","phi","value","r","markerarc","arc","innerRadius","outerRadius","startAngle","endAngle","bandwidth","react_default","a","createElement","key","className","fill","radialFill","calclabels","_this4","theta","x","sin","y","cos","textanchor","textAnchor","dy","transform","fontSize","averagewhisky","_this5","overallvalue","mean","k","clustervalue","cluster","zeroval","overallr","overallarc","clusterr","clusterarc","stroke","radialOverall","render","points","labels","height","React","Component","Scotland","projection","proj","pathGenerator","geoPath","features","topojson","geo","objects","tracts","riverfeatures","rivers","coast","landfill","riverpath","spey","riverColour","Distileries","whiskyProcessed","p","long","lat","projected","selectedRow","RowID","enabled","point","strokeWidth","cx","cy","pow","scale","onMouseEnter","onHover","_this2$props","selectedColour","unselectedColour","disabledColour","colourScaleColour","colourscale","selectedCSColour","cubehelix","l","colourcluster","calcpointfill","sort","b","Map","center0","center1","rotate0","rotate1","clusters","keys","scaleOrdinal","scheme","length","legendpoints","legend","geoAlbers","center","rotate","parallels","translate","ref","node","style","backgroundColor","seafill","_Map_Scotland","_Map_Distileries","ResponsiveMap","state","scalemultiplier","handleResize","bind","assertThisInitialized_default","e","ReactDOM","findDOMNode","getBoundingClientRect","setState","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","_Map","ResponsiveRadial","_React$Component2","_Radial","FormattedOverview","_React$Component3","zoomlevel","zoomOut","zoomSpey","zoomIslay","zoomDeepSpey","getzoomcontrols","css","marginBottom","Constants","lightblue","darkblue","onClick","getoverview","selectedclusterobject","clustertext","clusterselected","selectedclustertext","desc","clustername","name","getwhiskyselectorcontrol","options","formatname","onChange","filter","target","getclustermembership","zoomcontrols","overview","clusteroverview","whiskyselectorcontrol","clustermembership","paddingBottom","Postcode","nooverview","_FormattedOverview_ResponsiveRadial","controls","_FormattedOverview_ResponsiveMap","ClusterSelector","_this$props","selectedcluster","allstring","concat","buttons","lightred","darkred","padding","onUpdate","ALLSTRING","WhatWhiskyIndex","clusterupdate","theme","vlightblue","darkgreen","lightgrey","darkyellow","lightyellow","components","href","note","_FormattedOverview","Object","assign","caption","src","rothes","_ClusterSelector","grey","darkgrey","vlightgrey","red","yellow","blue","green","lightgreen","__webpack_require__","__webpack_exports__","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","data","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","BlockQuote","source","person","Code","language","prism_default","coy","code","Figure","getcaption","fullwidth","getdiv","figcaption","figdiv","Paragraph","undefined","Section","getName","replace","toLowerCase","id","Subsection","Subsubsection","Linktree","rhythm","Linknode","prettyname","to","split","slice","border","gatsby_browser_entry","display","color","paddingLeft","RawHTML","_Component","dangerouslySetInnerHTML","__html","Layout","Helmet_default","title","meta","content","alt","Equation","latex_default","equation","blockquote","figure","paragraph","section","subsection","subsubsection","components_Linktree","components_Linknode","rawhtml","components_Layout"],"mappings":"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","file":"component---src-pages-investigations-what-whisky-index-js-58f71d628aaa9ad90049.js","sourcesContent":["import React from 'react';\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport { max, mean } from 'd3-array';\nimport { arc } from 'd3-shape'\n\nconst SCALEORDER = [\n  \"Body\",\n  \"Tobacco\",\n  \"Medicinal\",\n  \"Smoky\",\n  \"Spicy\",\n  \"Fruity\",\n  \"Floral\",\n  \"Nutty\",\n  \"Malty\",\n  \"Honey\",\n  \"Sweetness\",\n  \"Winey\",\n]\n\nclass Radial extends React.Component {\n  constructor(props){\n    super(props)\n    this.middle = 25\n    this.calculatescales();\n    this.bottomPad = 10\n  }\n\n  calculatescales(){\n    const scalelength = (this.props.width / 2) ;\n    this.heightscales = {}\n    SCALEORDER.map(d => {\n      const dimensionValues = this.props.whisky.map(w => w[d])\n      this.heightscales[d] = scaleLinear()\n          .domain([0, max(dimensionValues)])\n          .range([this.middle * 2, scalelength])\n    })\n\n    this.anglescale = scaleBand()\n      .domain(SCALEORDER)\n      .paddingInner(0.1)\n      .range([-Math.PI / 2, Math.PI / 2])\n\n  }\n\n  componentWillReceiveProps() {\n    this.calculatescales()\n  }\n\n  calcpoints(){\n    const selected = this.props.selected;\n    const points = SCALEORDER.map((d, i) => {\n      const phi = this.anglescale(d)\n      const value = selected ? selected[d] ? selected[d] : 0 : 0\n      const r = this.heightscales[d](value)\n      const markerarc = arc()\n        .innerRadius(this.heightscales[d](0))\n        .outerRadius(r)\n        .startAngle(phi)\n        .endAngle(phi+this.anglescale.bandwidth())\n\n      return <path\n        key={'arc'+i}\n        className='radial'\n        d={markerarc()}\n        fill={this.props.radialFill}\n      />\n\n    })\n    return(\n      points\n    )\n  }\n\n  calclabels(){\n\n    return SCALEORDER.map((d, i) => {\n      const phi = this.anglescale(d) + (\n        this.anglescale.bandwidth() / 2\n      )\n      const r = this.heightscales[d](0) + 1\n      const x = r * Math.sin(phi)\n      // remember that down is positive in svg space\n      const y = -r * Math.cos(phi)\n\n      const textanglerotate = (theta) => {\n        if (theta > 0){\n          return -90 + theta * (180 / Math.PI)\n        } else{\n          return 90 + theta * (180 / Math.PI)\n        }\n      }\n\n      const textanchor = phi > 0 ? 'start' : 'end'\n      return <text\n        key={'label'+i}\n        textAnchor={textanchor}\n        dy={'0.5em'}\n        transform={`translate(${x}, ${y})rotate(${textanglerotate(phi)})`}\n        fontSize={8}\n        className='radiallabel'\n        fill='black'\n        >\n          {d}\n        </text>\n    })\n  }\n\n  averagewhisky(){\n    // going to put two sets of markers on this radial chart to show\n    // the average value of this cluster, and also the average value\n    // of the average whisky\n    const { whisky } = this.props\n    const markers = SCALEORDER.map((d, i) => {\n      const overallvalue = mean(\n        whisky.map(k => k[d])\n      )\n      const clustervalue = mean(\n        whisky.map(k => k.cluster === this.props.cluster ? k[d] : null)\n      )\n\n      const phi = this.anglescale(d)\n      const zeroval = this.heightscales[d](0)\n      // first make the overall marker\n      const overallr = overallvalue ? this.heightscales[d](overallvalue) : 0\n      const overallarc = arc()\n        .innerRadius(zeroval)\n        .outerRadius(overallr)\n        .startAngle(phi)\n        .endAngle(phi + this.anglescale.bandwidth())\n\n      // now make the marker for the cluster\n      const clusterr = max(\n        [\n          clustervalue ? this.heightscales[d](clustervalue) : 0,\n          zeroval\n        ]\n      )\n\n      const clusterarc = arc()\n        .innerRadius(zeroval)\n        .outerRadius(clusterr)\n        .startAngle(phi)\n        .endAngle(phi + this.anglescale.bandwidth())\n\n      return <g\n          key={`overallarc${i}`}\n        >\n        <path\n          className='radialcluster'\n          d={clusterarc()}\n          fill={this.props.radialFill}\n        />\n        <path\n          className='radialoverall'\n          d={overallarc()}\n          fill={'none'}\n          stroke={this.props.radialOverall}\n        />\n      </g>\n    })\n    return markers\n  }\n\n  render() {\n    const points = this.props.selected ? this.calcpoints() : null\n    const averagewhisky = this.props.cluster !== null ? this.averagewhisky() : null\n    const labels = this.calclabels()\n    return (\n      <svg \n        width={this.props.width}\n        height={this.props.height}\n        className='radial'\n      >\n        <g transform={`translate(${this.props.width / 2} ${this.props.height - this.bottomPad})`}>\n          {points}\n          {averagewhisky}\n          {labels}\n        </g>\n      </svg>\n    );\n  }\n}\n\nexport default Radial;\n","\nimport React, { Component } from 'react';\n\nimport { max } from 'd3-array'\nimport { map } from 'd3-collection'\nimport { scaleOrdinal } from 'd3-scale'\nimport { cubehelix } from 'd3-color'\nimport { geoPath, geoAlbers } from 'd3-geo'\nimport * as topojson from 'topojson-client';\nimport geo from './geo.json';\nimport rivers from './rivers.json';\nimport { schemeSet2 as scheme } from 'd3-scale-chromatic';\n\n\nclass Scotland extends Component {\n  render() {\n    const projection = this.props.proj;\n    const pathGenerator = geoPath().projection(projection);\n    const features = topojson.feature(geo, geo.objects.tracts).features\n    const riverfeatures = topojson.feature(rivers, rivers.objects.tracts).features\n    const coast = features.map((d, i) => <path\n      className='scotland'\n      key={'path'+i}\n      d={pathGenerator(d)}\n      fill={this.props.landfill}\n      stroke={'none'}\n    />\n    )\n    let riverpath = null\n    if (this.props.spey){\n      riverpath = riverfeatures.map((d, i) => <path\n        className='river'\n        key={`riverpath${i}`}\n        d={pathGenerator(d)}\n        stroke={this.props.riverColour}\n        fill={'none'}\n      />)\n    }\n    return (\n      <g>\n        {coast}\n        {riverpath}\n      </g>\n    );\n  }\n}\n\nclass Distileries extends Component{\n  render(){\n    const calcpointfill = (point, selectedRow) => {\n      const { selectedColour, unselectedColour, disabledColour } = this.props\n      const colourScaleColour = this.props.colourscale(point.cluster)\n      let selectedCSColour = cubehelix(colourScaleColour)\n      selectedCSColour.l = max([0.85, selectedCSColour.l])\n      // find out if this cluster should be enabled or not.\n      if (this.props.cluster) {\n        // if we're only highlighting a specific cluster\n        if (this.props.cluster === point.cluster){\n          // this should be the selected point\n          return point.RowID === selectedRow ? selectedCSColour : colourScaleColour;\n        } else {\n          // this point should be disabled\n          return disabledColour\n        }\n      }\n      if (this.props.colourcluster){\n        // we're colouring points by the cluster\n        return point.RowID === selectedRow ? selectedCSColour : colourScaleColour;\n      }\n      return point.RowID === selectedRow ? selectedColour : unselectedColour;\n    }\n    const whiskyProcessed = this.props.whisky.map(d => {\n      var p = [d.long, d.lat]\n      var projected = this.props.proj(p);\n      d['x'] = projected[0]\n      d['y'] = projected[1]\n      return d\n    })\n    const selectedRow = this.props.selected ? this.props.selected.RowID : null\n    const enabled = (point) => this.props.cluster ? this.props.cluster === point.cluster : true\n    let points = whiskyProcessed.map((d, i) => {\n      return(\n        <circle\n          stroke={'white'}\n          strokeWidth={0.5}\n          key={'distillery'+i}\n          cx={d.x}\n          cy={d.y}\n          r={Math.pow(this.props.scale / 7000, 1/9) * 3}\n          onMouseEnter={enabled(d) ? () => {this.props.onHover(d)} : null}\n          fill={calcpointfill(d, selectedRow)}\n          className={enabled(d) ? 'enabled' : 'disabled'}\n        />\n      )\n    }\n    )\n    points = points.sort((a, b) => {\n      if (a.props.className === b.props.className){\n        return 0;\n      }\n      if (a.props.className === 'disabled'){\n        return -1;\n      }\n      if (b.props.className === 'disabled'){\n        return 1;\n      }\n      return a > b\n\n    })\n    return(\n      <g>\n        {points}\n      </g>\n    )\n  }\n}\n\nclass Map extends Component {\n  render() {\n    const disabledColour = this.props.disabledColour;\n    const center0 = this.props.center0 ? this.props.center0 : 0;\n    const center1 = this.props.center1 ? this.props.center1 : 57.8;\n    const rotate0 = this.props.rotate0 ? this.props.rotate0 : 4.4;\n    const rotate1 = this.props.rotate1 ? this.props.rotate1 : 0;\n    const scale = this.props.scale ? this.props.scale : 7000;\n    const clusters = map(this.props.whisky, d => d.cluster).keys().sort();\n    const colourscale = scaleOrdinal(scheme, clusters.length)\n      .domain(clusters)\n\n    const legendpoints = clusters.map((d, i) => {\n      let fill = colourscale(d)\n      if (this.props.cluster && this.props.cluster !== d){\n        fill = disabledColour\n      }\n      return(\n        <g \n          key={`legendpoint${i}`}\n          transform={`translate (30 ${i*20})`}>\n          <circle\n            cx={-10}\n            cy={-5}\n            r={5}\n            fill={fill}\n          />\n          <text>{`group ${d}`}</text>\n        </g>\n      )\n    })\n\n    const legend = this.props.colourcluster || this.props.cluster ? <g\n      transform='translate(0 30)'\n    >\n      {legendpoints}\n    </g> : null\n\n    this.proj = geoAlbers()\n      .center([center0, center1])\n      .rotate([rotate0, rotate1])\n      .parallels([50, 60])\n      .scale(scale)\n      .translate([this.props.width / 2, this.props.height / 2]);\n\n    return (\n      <div className='map'>\n        <svg\n          ref={node => this.node = node}\n          className='map'\n          width={this.props.width}\n          height={this.props.height}\n          style={{\n            backgroundColor: `${this.props.seafill}`\n          }}\n        >\n          <g>\n            <Scotland \n              landfill={this.props.landfill}\n              spey={this.props.spey}\n              riverColour={this.props.riverColour}\n              proj={this.proj}\n            />\n            <Distileries \n              selectedColour={this.props.selectedColour}\n              unselectedColour={this.props.unselectedColour}\n              disabledColour={this.props.disabledColour}\n              cluster={this.props.cluster}\n              colourcluster={this.props.colourcluster}\n              whisky={this.props.whisky}\n              selected={this.props.selected}\n              proj={this.proj} \n              onHover={(d) => this.props.onHover(d)}\n              colourscale={colourscale}\n              scale={scale}\n            />\n          </g>\n          {legend}\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport {\n  Paragraph\n} from '../../../components'\n\nimport Constants from '../../../components/constants.js'\n\nimport Radial from './_Radial'\nimport Map from './_Map';\nimport clustertext from './clustertext.json'\n\n\nclass ResponsiveMap extends React.Component {\n  constructor(props){\n    super(props)\n    this.state={\n      width: this.props.width,\n      height: this.props.height,\n      scalemultiplier: 1\n    }\n    this.handleResize = this.handleResize.bind(this)\n  }\n\n  handleResize(e){\n    const elem = ReactDOM.findDOMNode(this);\n    const width = elem.getBoundingClientRect().width;\n    // height should always be in proportion with the width\n    const height = width * 1.3;\n    // need to make the scale smaller as the width gets smaller, diverging from\n    // the base width of 594\n    const scalemultiplier = width / 594 \n    this.setState({\n      width: width,\n      height: height,\n      scalemultiplier: scalemultiplier\n    })\n  }\n\n  componentDidMount() {\n    // put an event handler on\n    window.addEventListener('resize', this.handleResize);\n    this.handleResize()\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  render() {\n    return (\n      <div className='content'>\n        <Map\n          width={this.state.width}\n          height={this.state.height}\n          whisky={this.props.whisky}\n\n          selectedColour={this.props.selectedColour}\n          landfill={this.props.landfill}\n          seafill={this.props.seafill}\n          riverColour={this.props.riverColour}\n          unselectedColour={this.props.unselectedColour}\n          disabledColour={this.props.disabledColour}\n\n          onHover={this.props.onHover}\n          selected={this.props.selected}\n          cluster={this.props.cluster}\n          colourcluster={this.props.colourcluster}\n\n          rotate0={this.props.rotate0}\n          rotate1={this.props.rotate1}\n          spey={this.props.spey}\n\n          scale={this.props.scale * this.state.scalemultiplier}\n        />\n      </div>\n    );\n  }\n}\n\nclass ResponsiveRadial extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      width: this.props.width, \n      height: this.props.height\n    }\n    this.handleResize = this.handleResize.bind(this)\n  }\n\n  handleResize(e){\n    const elem = ReactDOM.findDOMNode(this);\n    const width = elem.getBoundingClientRect().width;\n    // height should always be in proportion with the width\n    const height = width;\n    this.setState({\n      width: width,\n      height: height,\n    })\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    this.handleResize()\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  render() {\n    return (\n      <div>\n        <Radial\n          whisky={this.props.whisky}\n          selected={this.props.selected}\n          radialFill={this.props.radialFill}\n          radialOverall={this.props.radialOverall}\n          width={this.state.width}\n          height={this.state.height}\n        />\n      </div>\n    );\n  }\n}\n\nclass FormattedOverview extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      rotate0: this.props.rotate0,\n      rotate1: this.props.rotate1,\n      scale: this.props.scale,\n      spey: this.props.spey,\n      zoomlevel: this.props.zoomlevel ? this.props.zoomlevel: 'scotland'\n    }\n    this.zoomOut = this.zoomOut.bind(this)\n    this.zoomSpey = this.zoomSpey.bind(this)\n    this.zoomIslay = this.zoomIslay.bind(this)\n    this.zoomDeepSpey = this.zoomDeepSpey.bind(this)\n  }\n\n  zoomSpey(e){\n    this.setState({\n      rotate0: 3.93,\n      rotate1: 0.5,\n      scale: 24800,\n      spey: true,\n      zoomlevel: 'spey',\n    })\n  }\n\n  zoomDeepSpey(e){\n    this.setState({\n      rotate0: 3.3,\n      rotate1: 0.29,\n      scale: 100000,\n      spey: true,\n      zoomlevel: 'deepspey',\n    })\n  }\n\n  zoomIslay(e){\n    this.setState({\n      rotate0: 6.25,\n      rotate1: 1.92,\n      scale: 57400,\n      spey: false,\n      zoomlevel: 'islay'\n    })\n  }\n\n  zoomOut(e){\n    this.setState({\n      rotate0: 4.4,\n      rotate1: 0,\n      scale: 7000,\n      spey: false,\n      zoomlevel: 'scotland'\n    })\n  }\n\n  getzoomcontrols(){\n    return (\n    <div>\n      <button \n        css={{\n          width: '100%',\n          marginBottom: '1px',\n          backgroundColor: this.state.zoomlevel === 'scotland' ? Constants.lightblue : Constants.darkblue,\n        }}\n        onClick={this.zoomOut}>Scotland</button>\n      <br/>\n      <button \n        css={{\n          width: '100%',\n          marginBottom: '1px',\n          backgroundColor: this.state.zoomlevel === 'islay' ? Constants.lightblue : Constants.darkblue,\n        }}\n        onClick={this.zoomIslay}>Islay</button>\n      <br/>\n      <button \n        css={{\n          width: '100%',\n          marginBottom: '1px',\n          backgroundColor: this.state.zoomlevel === 'spey' ? Constants.lightblue : Constants.darkblue,\n        }}\n        onClick={this.zoomSpey}>Speyside</button>\n      <br/>\n      <button \n        css={{\n          width: '100%',\n          marginBottom: '1px',\n          backgroundColor: this.state.zoomlevel === 'deepspey' ? Constants.lightblue : Constants.darkblue,\n        }}\n        onClick={this.zoomDeepSpey}>Closer view Speyside</button>\n      <br/>\n    </div>\n    )\n  }\n\n  getoverview(){\n    const selectedclusterobject = clustertext[this.props.clusterselected]\n    const selectedclustertext = selectedclusterobject.desc\n    const clustername = selectedclusterobject.name ? <h4>{selectedclusterobject.name}</h4> : null\n    return(\n      <div className='containerrow'>\n        <div className='content'>\n          <Radial\n                whisky={this.props.whisky}\n                cluster={this.props.cluster}\n                radialFill={'tan'}\n                radialOverall={this.props.radialOverall}\n                width={300}\n                height={300}\n              />\n            </div>\n              <div className='note'>\n                {clustername}\n                <p>\n                  {selectedclustertext}\n                </p>\n              </div>\n        </div>\n    )\n  }\n\n  getwhiskyselectorcontrol(){\n    const options = this.props.whisky.map((d, i) => {\n      return (\n        <option\n          key={`whiskyselectorcontroloptionid${i}`}\n          value={d.RowID}\n        >\n          {d.formatname}\n        </option>\n      )\n    })\n    return(\n      <select\n        value={this.props.selected ? this.props.selected.RowID : '---'}\n        onChange={e => {\n          const selected = this.props.whisky.filter(d => d.RowID === e.target.value)[0]\n          this.props.onHover(selected)\n        }}\n      >\n        {options}\n      </select>\n    )\n  }\n\n  getclustermembership(){\n    if (this.props.colourcluster) {\n      if (this.props.selected) {\n        return <h4>Group: {this.props.selected.cluster}, {clustertext[this.props.selected.cluster].name}</h4>\n      } else {\n        return <h4>Group: </h4>\n      }\n    }\n  }\n\n  render() {\n    const zoomcontrols = this.getzoomcontrols()\n    const overview = this.props.clusteroverview ? this.getoverview() : null\n    const whiskyselectorcontrol = this.getwhiskyselectorcontrol()\n    const clustermembership = this.getclustermembership()\n\n    return (\n      <div>\n        {overview}\n        <div className='containerrow'\n          css={{\n            paddingBottom: 0\n          }}\n        >\n        <div className='note'>\n        <h4>\n          {\n            this.props.selected ? `Distillery: ${this.props.selected.formatname}` : 'Distillery:'\n          }\n        </h4>\n        <h4>\n          {\n            this.props.selected ? `Postcode: ${this.props.selected.Postcode}` : 'Postcode:'\n          }\n        </h4>\n        {clustermembership}\n        {this.props.nooverview ? null : <ResponsiveRadial\n          whisky={this.props.whisky}\n          selected={this.props.selected}\n          radialFill={this.props.radialFill}\n          radialOverall={this.props.radialOverall}\n          width={300}\n          height={300}\n        />\n        }\n        {this.props.controls ? zoomcontrols : null}\n        {this.props.controls ? whiskyselectorcontrol : null}\n        \n        </div>\n        <ResponsiveMap\n          width={594}\n          height={770}\n          whisky={this.props.whisky}\n\n          selectedColour={this.props.selectedColour}\n          landfill={this.props.landfill}\n          seafill={this.props.seafill}\n          riverColour={this.props.riverColour}\n          unselectedColour={this.props.unselectedColour}\n          disabledColour={this.props.disabledColour}\n\n          onHover={this.props.onHover}\n          selected={this.props.selected}\n          cluster={this.props.cluster}\n          colourcluster={this.props.colourcluster}\n\n          rotate0={this.state.rotate0}\n          rotate1={this.state.rotate1}\n          scale={this.state.scale}\n          spey={this.state.spey}\n        />\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default FormattedOverview\n","import React from 'react'\nimport { map } from 'd3-collection'\n\nimport Constants from '../../../components/constants.js'\n\nclass ClusterSelector extends React.Component {\n  render() {\n    const { whisky, selectedcluster } = this.props\n    const clusters = map(whisky, d => d.cluster).keys().sort()\n    const labels = [this.props.allstring].concat(clusters)\n    const buttons = labels.map((d, i) => {\n      const fill = selectedcluster === d ? Constants.lightred : Constants.darkred\n      return(\n        <button\n          key={`button${i}`}\n          css={{\n            width: (100 / labels.length) + '%',\n            padding: 0,\n            fontSize: 12,\n            backgroundColor: fill,\n          }}\n          onClick={e => this.props.onUpdate(d)}\n        >\n          {d}\n        </button>\n      )\n    })\n    return (\n      <div className='containerrow'>\n      <div className='content'\n      >\n        {buttons}\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default ClusterSelector\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Section,\n  Subsection,\n  Paragraph,\n  Figure,\n  Code,\n  Layout\n} from \"../../../components\";\n\nimport Constants from \"../../../components/constants.js\";\n\nimport whisky from \"./whisky.json\";\nimport Radial from \"./_Radial\";\nimport Map from \"./_Map\";\nimport FormattedOverview from \"./_FormattedOverview\";\nimport ClusterSelector from \"./_ClusterSelector\";\n\nimport \"./App.css\";\n\nimport rothes from \"./rothes.png\";\n\nconst ALLSTRING = \"All\";\n\nclass WhatWhiskyIndex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: null,\n      selectedcluster: ALLSTRING\n    };\n    this.onHover.bind(this);\n    this.clusterupdate.bind(this);\n  }\n\n  onHover = d => {\n    this.setState({\n      selected: d\n    });\n  };\n\n  clusterupdate = d => {\n    this.setState({\n      selectedcluster: d,\n      selected: null\n    });\n  };\n\n  render() {\n    const theme = {\n      seafill: Constants.vlightblue,\n      landfill: Constants.darkgreen,\n      riverColour: Constants.darkblue,\n\n      selectedColour: Constants.lightred,\n      unselectedColour: Constants.darkred,\n      disabledColour: Constants.lightgrey,\n\n      radialOverall: Constants.darkyellow,\n      radialFill: Constants.lightyellow\n    };\n\n    return (\n      <Layout>\n        <article>\n          <Paragraph>\n            I have nearly finished my bottle of whisky. I would like to make an\n            informed decision when purchasing my next one. I know a little bit\n            about whisky but not enough to make a confident decision. I found a{\" \"}\n            <a href=\"https://www.mathstat.strath.ac.uk/outreach/nessie/nessie_whisky.html\">\n              dataset from Glasgow University\n            </a>\n            . Can I use data to make a better decision?\n          </Paragraph>\n          <Paragraph>\n            After digging around in this data, I've found a few new ways to\n            think about my whisky purchase. I also found{\" \"}\n            <a href=\"https://www.youtube.com/watch?v=t5YeM55l2_0&index=1&list=PL1ABF6820EA98D487\">\n              Brian Cox\n            </a>{\" \"}\n            clearly enjoying himself while helping with the pronunciation.\n          </Paragraph>\n          <Section name=\"Contents of the dataset\">\n            <Paragraph note=\"On all these maps, hover over the points to find out more.\">\n              There are 86 individual distilleries contained in this dataset.\n              Here they all are on a map.\n            </Paragraph>\n            <FormattedOverview\n              whisky={whisky}\n              {...theme}\n              selected={this.state.selected}\n              onHover={this.onHover}\n              nooverview={true}\n            />\n            <Paragraph>\n              Each of these distilleries is given a score between 0 and 4 over\n              12 different taste categories.\n            </Paragraph>\n            <Figure caption=\"The average of all the scores. The average scotch has a high score in body, fruity, malty, and sweetness.\">\n              <Radial {...theme} width={594} height={300} whisky={whisky} />\n            </Figure>\n            <Paragraph>\n              This means that there are 12 ⨉ 86 = 1,032 observations in this\n              dataset. We'd need to hold them all in our head at once to make an\n              informed decision, which is beyond me. There are a few rules of\n              thumb that we can use to narrow down our decision making criteria.\n            </Paragraph>\n          </Section>\n          <Section name=\"Geography of Scotland\">\n            <Paragraph>\n              One of the easiest things to get your head around is the geography\n              of Scotland. The geography of Scotland is thought to have quite an\n              impact on the characteristics of the whisky.\n            </Paragraph>\n            <Figure\n              caption={\n                <div>\n                  From{\" \"}\n                  <a href=\"https://www.wineware.co.uk/Content/Images/uploaded/Satelite%20Pages/scotch-whisky-map-1.jpg\">\n                    wineware.co.uk\n                  </a>\n                  , the whisky regions of Scotland\n                </div>\n              }\n            >\n              <img src=\"https://www.wineware.co.uk/Content/Images/uploaded/Satelite%20Pages/scotch-whisky-map-1.jpg\" />\n            </Figure>\n            <Paragraph>\n              In particular there are two regions with a very high concentration\n              of distilleries. Islay and Speyside.\n            </Paragraph>\n            <Subsection name=\"Islay\">\n              <Paragraph>\n                Islay is an island on the west coast, in the island group called\n                the Inner Hebrides. When you think about Islay whisky, you think\n                about big, smoky, peaty whisky. You can see that this is the\n                case, particularly in the three distilleries in the south coast.\n              </Paragraph>\n              <FormattedOverview\n                {...theme}\n                whisky={whisky}\n                selected={this.state.selected}\n                onHover={this.onHover}\n                rotate0={6.25}\n                rotate1={1.92}\n                scale={57400}\n                spey={true}\n              />\n            </Subsection>\n            <Subsection name=\"Speyside\">\n              <Paragraph\n                note={\n                  <a href=\"https://www.thewhiskyexchange.com/c/314/speyside-single-malt-scotch-whisky\">\n                    60% figure comes from Whisky Exchange\n                  </a>\n                }\n              >\n                The second area that has a high concentration of distilleries is\n                Speyside. I've highlighted on this map the River Spey, which\n                gives this area its name. More than 60% of Scotland's whisky\n                comes from Speyside. I can't find out why so much whisky comes\n                from Speyside. Some people claim that the area has water and\n                climate that is particularly suitable for whisky production, but\n                I can't verify that.\n              </Paragraph>\n              <Paragraph>\n                When you think about Speyside whisky you think about lighter,\n                relaxed whisky. This does seem to be the case, but you also\n                notice that there is a lot of variation between whiskies that\n                are even right next to each other. There's something else going\n                on here.\n              </Paragraph>\n              <FormattedOverview\n                {...theme}\n                whisky={whisky}\n                selected={this.state.selected}\n                onHover={this.onHover}\n                rotate0={3.93}\n                rotate1={0.5}\n                scale={24800}\n                spey={true}\n              />\n              <Paragraph>\n                It is easy to miss some of the detail on this map. There are a\n                lot of distilleries in Speyside. We'll zoom in a bit closer.\n              </Paragraph>\n              <FormattedOverview\n                {...theme}\n                whisky={whisky}\n                selected={this.state.selected}\n                onHover={this.onHover}\n                rotate0={3.3}\n                rotate1={0.29}\n                scale={100000}\n                spey={true}\n              />\n              <Paragraph>\n                See if you can find the Glen Rothes, Glen Spey, and Glen Grant\n                distilleries. They're towards the north of this area, right on\n                the banks of the river. They almost overlap each other. Looking\n                at them on a map we can see that these distilleries are about\n                300m apart, just down the road from each other.\n              </Paragraph>\n              <Figure\n                caption={\n                  <div>\n                    <div>Map of the village of Rothes</div>\n                    <div>\n                      <a href=\"https://www.google.co.uk/maps/@57.5294291,-3.2074024,1898m/data=!3m1!1e3\">\n                        source\n                      </a>\n                    </div>\n                  </div>\n                }\n              >\n                <img src={rothes} />\n              </Figure>\n            </Subsection>\n          </Section>\n          <Section name=\"Putting the whisky into groups\">\n            <Paragraph\n              note={\n                <a href=\"https://github.com/dataewan/whisky-vis/blob/master/analysis/whiskyanalysis.ipynb\">\n                  analysis\n                </a>\n              }\n            >\n              The other trick we can use is to group the whiskies into groups\n              with similar characteristics. I've found there are 9 groups in the\n              data that can help break down the problem. Select the groups below\n              to find out more about them.\n            </Paragraph>\n            <ClusterSelector\n              whisky={whisky}\n              selectedcluster={this.state.selectedcluster}\n              onUpdate={this.clusterupdate}\n              allstring={ALLSTRING}\n            />\n            <FormattedOverview\n              {...theme}\n              whisky={whisky}\n              selected={this.state.selected}\n              clusterselected={this.state.selectedcluster}\n              clusteroverview={true}\n              onHover={this.onHover}\n              cluster={\n                this.state.selectedcluster === ALLSTRING\n                  ? null\n                  : this.state.selectedcluster\n              }\n              controls={true}\n              colourcluster={true}\n            />\n          </Section>\n          <Section name=\"What am I going to buy?\">\n            <Paragraph>\n              Everyone has different tastes when it comes to whisky, and even\n              your own tastes might change depending on the occasion. There\n              isn't going to be a single correct answer. I've learned a lot for\n              my shopping expedition.\n            </Paragraph>\n            <Paragraph>\n              From past experience, I know that I personally don't enjoy very\n              strong smoky peaty whisky much. So this is groups 2, 5, and 7.\n              I've steered clear of Islay whiskies for this reason. However,\n              there is a lot more subtlety there than I realised. Bunnahabhain\n              in particular, and also Bruichladdich, and Bowmore might be\n              something that I should try.\n            </Paragraph>\n            <Paragraph>\n              I've also learned that there is a lot more variation in Speyside\n              whisky than I realised. I've been introduced to the term{\" \"}\n              <a href=\"https://www.thewhiskyexchange.com/c/314/speyside-single-malt-scotch-whisky\">\n                lunchtime whisky\n              </a>\n              , which looks a bit like group 0.\n            </Paragraph>\n            <Paragraph>\n              I'm not looking for lunchtime whisky. I think that I'm looking for\n              something that I can sit in my chair with a book and drink. I've\n              learned about winey whiskies (group 4), which look quite\n              interesting. I'm also poking around in group 8, as I've enjoyed\n              some whiskies from there before.\n            </Paragraph>\n            <Paragraph>\n              Sadly I've also learned that there is some poor quality\n              information in this dataset. For example <i>Belvenie</i> should be{\" \"}\n              <i>The Balvenie</i>, and had the wrong location in the original\n              data. I've tidied things up, and most of the data looks good\n              quality. I'm probably going to incorporate some other information\n              in my decision process.\n            </Paragraph>\n          </Section>\n        </article>\n      </Layout>\n    );\n  }\n}\n\nexport default WhatWhiskyIndex;\n","const Constants = {\n  grey: '#50514F',\n  darkgrey: '#3c3d3b',\n  lightgrey: '#646563',\n  vlightgrey: '#cccdcb',\n\n  red: '#F25F5C',\n  darkred: '#de4b48',\n  lightred: '#ff7370',\n\n  yellow: '#FFE066',\n  darkyellow: '#ebcc52',\n  lightyellow: '#fff47a',\n\n  blue: '#247BA0',\n  darkblue: '#10678c',\n  lightblue: '#388fb4',\n  vlightblue: '#b1d7e7',\n\n  green: '#70C1B3',\n  darkgreen: '#5cad9f',\n  lightgreen: '#84d5c7'\n}\n\n\nexport default Constants\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { Component} from 'react';\nimport Constants from './constants'\nimport { Link } from 'gatsby'\nimport { rhythm, scale } from \"../utils/typography\";\n\nclass BlockQuote extends Component {\n\n  render() {\n    return (\n      <div className='containerrow'>\n        <div className='content'>\n          <blockquote>\n            {this.props.children}\n          </blockquote>\n        </div>\n        <div className='note'>\n          <a href={this.props.source}>\n            <h6>\n              {this.props.person}\n            </h6>\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BlockQuote;\n","import React, { Component} from 'react';\nimport Constants from './constants'\nimport SyntaxHighlighter from 'react-syntax-highlighter/prism';\nimport { coy } from 'react-syntax-highlighter/styles/prism';\n\nclass Code extends Component {\n\n  render() {\n    const language = this.props.language;\n    return (\n      <div className='containerrow'>\n        <pre className='content' >\n          <SyntaxHighlighter \n            language={language}\n            style={coy}>\n            {this.props.code}\n          </SyntaxHighlighter>\n        </pre>\n      </div>\n    );\n  }\n}\n\nexport default Code;\n","import React, { Component} from 'react';\nimport Constants from './constants'\nimport { rhythm, scale } from \"../utils/typography\";\n\nclass Figure extends Component {\n  getcaption(){\n    if(this.props.fullwidth !== true){\n      return(\n        <figcaption className='note'>\n            <h6 className='figurelabel'></h6>\n            {this.props.caption} \n        </figcaption>\n      )\n    } else {\n      return (\n        <figcaption className='fullwidth'>\n            <h6 className='figurelabel'></h6>\n            {this.props.caption} \n        </figcaption>\n      )\n    }\n  }\n\n  getdiv(){\n    if(this.props.fullwidth !== true){\n      return(\n        <div className='content'>\n          {this.props.children}\n        </div>\n      )\n    } else {\n      return (\n        <div className='fullwidth'>\n          {this.props.children}\n        </div>\n      )\n    }\n  }\n\n  render() {\n    const figcaption = this.getcaption()\n    const figdiv = this.getdiv()\n    if (this.props.fullwidth){\n      return (\n        <figure className='containerrow'>\n          {figdiv}\n          {figcaption}\n        </figure>\n      )\n    } else {\n      return (\n        <figure className='containerrow'>\n          {figcaption}\n          {figdiv}\n        </figure>\n      )\n    }\n  }\n}\n\nexport default Figure;\n","import React, { Component} from 'react';\nimport { rhythm, scale } from \"../utils/typography\";\nimport Constants from './constants';\n\n\nclass Paragraph extends Component {\n\n  render() {\n    const note = this.props.note;\n    return (\n      <div className='containerrow'>\n        {note !== undefined &&\n            <aside className='note'>\n              {note}\n            </aside>\n        }\n        <p\n          className='content'\n        >\n          {this.props.children}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Paragraph;\n","import React, { Component} from 'react';\n\nclass Section extends Component {\n  getName(){\n    return(\n      this.props.name.replace(/[^\\w]/g, '')\n    ).toLowerCase()\n  }\n\n  render() {\n    const name = this.getName()\n    return (\n      <section>\n        <div className='containerrow'>\n          <h2 className='content' id={name}>{this.props.name}</h2>\n        </div>\n        {this.props.children}\n      </section>\n    );\n  }\n}\n\nexport default Section;\n","import React, { Component} from 'react';\n\nclass Subsection extends Component {\n  getName(){\n    return(\n      this.props.name.replace(/[^\\w]/g, '')\n    ).toLowerCase()\n  }\n\n  render() {\n    const name = this.getName()\n    return (\n      <section>\n        <div className='containerrow'>\n          <h3 className='content' id={name}>{this.props.name}</h3>\n        </div>\n        {this.props.children}\n      </section>\n    );\n  }\n}\n\nexport default Subsection;\n","import React, { Component} from 'react';\n\nclass Subsubsection extends Component {\n  getName(){\n    return(\n      this.props.name.replace(/[^\\w]/g, '')\n    ).toLowerCase()\n  }\n\n  render() {\n    const name = this.getName()\n    return (\n      <section>\n        <div className='containerrow'>\n          <h4 className='content' id={name}>{this.props.name}</h4>\n        </div>\n        {this.props.children}\n      </section>\n    );\n  }\n}\n\nexport default Subsubsection;\n","import React, { Component} from 'react';\n\nimport { rhythm } from '../utils/typography'\n\nclass Linktree extends Component {\n\n  render() {\n    return (\n      <nav\n        css={{\n          paddingBottom: rhythm(2)\n        }}>\n        {this.props.children}\n      </nav>\n    );\n  }\n}\n\nexport default Linktree;\n","import React, { Component} from 'react';\nimport { Link } from \"gatsby\";\n\nimport Constants from './constants'\nimport { rhythm } from '../utils/typography'\n\nclass Linknode extends Component {\n\n  render() {\n    const prettyname = this.props.to.split('/').slice(-1)[0]\n    return (\n      <div className='containerrow'>\n        <div className='content'\n          css={{\n              border: `1px solid ${Constants.blue}`\n          }}>\n          <Link \n            css={{\n              display: `block`,\n              color: Constants.darkblue,\n              backgroundColor: Constants.vlightblue,\n            }}\n            to={this.props.to}>\n            {prettyname}\n          </Link>\n          <div css={{\n            paddingLeft: rhythm(1)\n          }}>\n            {this.props.desc}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Linknode;\n","\nimport React, { Component} from 'react';\nimport Constants from './constants'\n\nclass RawHTML extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render(){\n\n    return(\n      <div className='containerrow'>\n        <div className='content'\n          dangerouslySetInnerHTML={ {__html: this.props.children} } />\n      </div>\n    )\n  }\n\n}\n\n\nexport default RawHTML;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport Helmet from \"react-helmet\";\n\nimport \"./layout.css\";\nimport \"katex/dist/katex.min.css\";\n\nimport Constants from \"../components/constants\";\n\nimport { rhythm } from \"../utils/typography\";\n\nconst header = () => (\n  <div className=\"containerrow\">\n    <header className=\"content\">\n      <a href=\"https://twitter.com/dataewan\" className=\"twitterlink\">\n        <img src=\"./twitter.png\" alt=\"twitter link\" width=\"25\" />\n      </a>\n      <Link to=\"/\">\n        <h1>dataewan</h1>\n      </Link>\n    </header>\n  </div>\n);\n\nconst Layout = ({ children }) => (\n  <div>\n    <Helmet\n      title=\"Things I wish I could remember\"\n      meta={[\n        { name: \"description\", content: \"dataewan things to remember\" },\n        { name: \"keywords\", content: \"notebook, explaination\" }\n      ]}\n    />\n    {header()}\n    {children}\n  </div>\n);\n\nexport default Layout;\n","import React, { Component } from \"react\";\nimport Constants from \"./constants\";\nimport { rhythm, scale } from \"../utils/typography\";\nimport Latex from \"react-latex\";\n\nclass Equation extends Component {\n  render() {\n    return (\n      <figure className=\"containerrow\">\n        <Latex>{this.props.equation}</Latex>\n        <h6 className=\"equationlabel\" />\n      </figure>\n    );\n  }\n}\n\nexport default Equation;\n","import BlockQuote from './blockquote'\nimport Code from './code'\nimport Figure from './figure'\nimport Paragraph from './paragraph'\nimport Section from './section'\nimport Subsection from './subsection'\nimport Subsubsection from './subsubsection'\nimport Linktree from './Linktree'\nimport Linknode from './Linknode'\nimport RawHTML from './rawhtml'\nimport Layout from './Layout'\nimport Equation from './equation'\n\nexport {\n  BlockQuote,\n  Code,\n  Figure,\n  Paragraph,\n  Section,\n  Subsection,\n  Subsubsection,\n  Linktree,\n  Linknode,\n  RawHTML,\n  Layout,\n  Equation,\n}\n","module.exports = __webpack_public_path__ + \"static/rothes-f923358ecc7dbb3d9e34da1051a8de9f.png\";"],"sourceRoot":""}